ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TIMER.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.TIMER_Init,"ax",%progbits
  18              		.align	1
  19              		.global	TIMER_Init
  20              		.code	16
  21              		.thumb_func
  22              		.type	TIMER_Init, %function
  23              	TIMER_Init:
  24              	.LFB2:
  25              		.file 1 "Generated_Source\\PSoC4\\TIMER.c"
   1:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/TIMER.c **** * File Name: TIMER.c
   3:Generated_Source\PSoC4/TIMER.c **** * Version 2.10
   4:Generated_Source\PSoC4/TIMER.c **** *
   5:Generated_Source\PSoC4/TIMER.c **** * Description:
   6:Generated_Source\PSoC4/TIMER.c **** *  This file provides the source code to the API for the TIMER
   7:Generated_Source\PSoC4/TIMER.c **** *  component
   8:Generated_Source\PSoC4/TIMER.c **** *
   9:Generated_Source\PSoC4/TIMER.c **** * Note:
  10:Generated_Source\PSoC4/TIMER.c **** *  None
  11:Generated_Source\PSoC4/TIMER.c **** *
  12:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
  13:Generated_Source\PSoC4/TIMER.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/TIMER.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/TIMER.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/TIMER.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/TIMER.c **** 
  19:Generated_Source\PSoC4/TIMER.c **** #include "TIMER.h"
  20:Generated_Source\PSoC4/TIMER.c **** 
  21:Generated_Source\PSoC4/TIMER.c **** uint8 TIMER_initVar = 0u;
  22:Generated_Source\PSoC4/TIMER.c **** 
  23:Generated_Source\PSoC4/TIMER.c **** 
  24:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_Init
  26:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
  27:Generated_Source\PSoC4/TIMER.c **** *
  28:Generated_Source\PSoC4/TIMER.c **** * Summary:
  29:Generated_Source\PSoC4/TIMER.c **** *  Initialize/Restore default TIMER configuration.
  30:Generated_Source\PSoC4/TIMER.c **** *
  31:Generated_Source\PSoC4/TIMER.c **** * Parameters:
  32:Generated_Source\PSoC4/TIMER.c **** *  None
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 2


  33:Generated_Source\PSoC4/TIMER.c **** *
  34:Generated_Source\PSoC4/TIMER.c **** * Return:
  35:Generated_Source\PSoC4/TIMER.c **** *  None
  36:Generated_Source\PSoC4/TIMER.c **** *
  37:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/TIMER.c **** void TIMER_Init(void)
  39:Generated_Source\PSoC4/TIMER.c **** {
  26              		.loc 1 39 0
  27              		.cfi_startproc
  40:Generated_Source\PSoC4/TIMER.c **** 
  41:Generated_Source\PSoC4/TIMER.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER__QUAD == TIMER_CONFIG)
  43:Generated_Source\PSoC4/TIMER.c ****         TIMER_CONTROL_REG = TIMER_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/TIMER.c ****         
  45:Generated_Source\PSoC4/TIMER.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/TIMER.c ****         TIMER_TRIG_CONTROL1_REG  = TIMER_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/TIMER.c **** 
  48:Generated_Source\PSoC4/TIMER.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/TIMER.c ****         TIMER_SetInterruptMode(TIMER_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/TIMER.c ****         
  51:Generated_Source\PSoC4/TIMER.c ****          /* Set other values */
  52:Generated_Source\PSoC4/TIMER.c ****         TIMER_SetCounterMode(TIMER_COUNT_DOWN);
  53:Generated_Source\PSoC4/TIMER.c ****         TIMER_WritePeriod(TIMER_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/TIMER.c ****         TIMER_WriteCounter(TIMER_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/TIMER.c ****     #endif  /* (TIMER__QUAD == TIMER_CONFIG) */
  56:Generated_Source\PSoC4/TIMER.c **** 
  57:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER__TIMER == TIMER_CONFIG)
  58:Generated_Source\PSoC4/TIMER.c ****         TIMER_CONTROL_REG = TIMER_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/TIMER.c ****         
  60:Generated_Source\PSoC4/TIMER.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/TIMER.c ****         TIMER_TRIG_CONTROL1_REG  = TIMER_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/TIMER.c ****     
  63:Generated_Source\PSoC4/TIMER.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/TIMER.c ****         TIMER_SetInterruptMode(TIMER_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/TIMER.c ****         
  66:Generated_Source\PSoC4/TIMER.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/TIMER.c ****         TIMER_WritePeriod(TIMER_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/TIMER.c **** 
  69:Generated_Source\PSoC4/TIMER.c ****         #if (TIMER__COMPARE == TIMER_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/TIMER.c ****             TIMER_WriteCompare(TIMER_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/TIMER.c **** 
  72:Generated_Source\PSoC4/TIMER.c ****             #if (1u == TIMER_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/TIMER.c ****                 TIMER_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/TIMER.c ****                 TIMER_WriteCompareBuf(TIMER_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/TIMER.c ****             #endif  /* (1u == TIMER_TC_COMPARE_SWAP) */
  76:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (TIMER__COMPARE == TIMER_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/TIMER.c **** 
  78:Generated_Source\PSoC4/TIMER.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/TIMER.c ****         #if (TIMER_CY_TCPWM_V2 && TIMER_TIMER_UPDOWN_CNT_USED && !TIMER_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/TIMER.c ****             TIMER_WriteCounter(1u);
  81:Generated_Source\PSoC4/TIMER.c ****         #elif(TIMER__COUNT_DOWN == TIMER_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/TIMER.c ****             TIMER_WriteCounter(TIMER_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/TIMER.c ****         #else
  84:Generated_Source\PSoC4/TIMER.c ****             TIMER_WriteCounter(0u);
  85:Generated_Source\PSoC4/TIMER.c ****         #endif /* (TIMER_CY_TCPWM_V2 && TIMER_TIMER_UPDOWN_CNT_USED && !TIMER_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/TIMER.c ****     #endif  /* (TIMER__TIMER == TIMER_CONFIG) */
  87:Generated_Source\PSoC4/TIMER.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 3


  88:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER__PWM_SEL == TIMER_CONFIG)
  89:Generated_Source\PSoC4/TIMER.c ****         TIMER_CONTROL_REG = TIMER_CTRL_PWM_BASE_CONFIG;
  28              		.loc 1 89 0
  29 0000 8022     		mov	r2, #128
  30 0002 0C4B     		ldr	r3, .L2
  31 0004 D204     		lsl	r2, r2, #19
  32 0006 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/TIMER.c **** 
  91:Generated_Source\PSoC4/TIMER.c ****         #if (TIMER__PWM_PR == TIMER_PWM_MODE)
  92:Generated_Source\PSoC4/TIMER.c ****             TIMER_CONTROL_REG |= TIMER_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/TIMER.c ****             TIMER_WriteCounter(TIMER_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/TIMER.c ****         #else
  95:Generated_Source\PSoC4/TIMER.c ****             TIMER_CONTROL_REG |= TIMER_CTRL_PWM_ALIGN | TIMER_CTRL_PWM_KILL_EVENT;
  33              		.loc 1 95 0
  34 0008 1A68     		ldr	r2, [r3]
  35              	.LBB10:
  36              	.LBB11:
  96:Generated_Source\PSoC4/TIMER.c ****             
  97:Generated_Source\PSoC4/TIMER.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/TIMER.c ****             #if (TIMER_CY_TCPWM_V2 && TIMER_PWM_UPDOWN_CNT_USED && !TIMER_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/TIMER.c ****                 TIMER_WriteCounter(1u);
 100:Generated_Source\PSoC4/TIMER.c ****             #elif (TIMER__RIGHT == TIMER_PWM_ALIGN)
 101:Generated_Source\PSoC4/TIMER.c ****                 TIMER_WriteCounter(TIMER_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/TIMER.c ****             #else 
 103:Generated_Source\PSoC4/TIMER.c ****                 TIMER_WriteCounter(0u);
 104:Generated_Source\PSoC4/TIMER.c ****             #endif  /* (TIMER_CY_TCPWM_V2 && TIMER_PWM_UPDOWN_CNT_USED && !TIMER_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (TIMER__PWM_PR == TIMER_PWM_MODE) */
 106:Generated_Source\PSoC4/TIMER.c **** 
 107:Generated_Source\PSoC4/TIMER.c ****         #if (TIMER__PWM_DT == TIMER_PWM_MODE)
 108:Generated_Source\PSoC4/TIMER.c ****             TIMER_CONTROL_REG |= TIMER_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (TIMER__PWM_DT == TIMER_PWM_MODE) */
 110:Generated_Source\PSoC4/TIMER.c **** 
 111:Generated_Source\PSoC4/TIMER.c ****         #if (TIMER__PWM == TIMER_PWM_MODE)
 112:Generated_Source\PSoC4/TIMER.c ****             TIMER_CONTROL_REG |= TIMER_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (TIMER__PWM == TIMER_PWM_MODE) */
 114:Generated_Source\PSoC4/TIMER.c **** 
 115:Generated_Source\PSoC4/TIMER.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/TIMER.c ****         TIMER_TRIG_CONTROL1_REG  = TIMER_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/TIMER.c ****     
 118:Generated_Source\PSoC4/TIMER.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/TIMER.c ****         TIMER_SetInterruptMode(TIMER_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/TIMER.c **** 
 121:Generated_Source\PSoC4/TIMER.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/TIMER.c ****         #if (TIMER__PWM_PR == TIMER_PWM_MODE)
 123:Generated_Source\PSoC4/TIMER.c ****             TIMER_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/TIMER.c ****                     (TIMER_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/TIMER.c ****                     TIMER_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/TIMER.c ****                     TIMER_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/TIMER.c ****         #else
 128:Generated_Source\PSoC4/TIMER.c ****             #if (TIMER__LEFT == TIMER_PWM_ALIGN)
 129:Generated_Source\PSoC4/TIMER.c ****                 TIMER_TRIG_CONTROL2_REG = TIMER_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/TIMER.c ****             #endif  /* ( TIMER_PWM_LEFT == TIMER_PWM_ALIGN) */
 131:Generated_Source\PSoC4/TIMER.c **** 
 132:Generated_Source\PSoC4/TIMER.c ****             #if (TIMER__RIGHT == TIMER_PWM_ALIGN)
 133:Generated_Source\PSoC4/TIMER.c ****                 TIMER_TRIG_CONTROL2_REG = TIMER_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/TIMER.c ****             #endif  /* ( TIMER_PWM_RIGHT == TIMER_PWM_ALIGN) */
 135:Generated_Source\PSoC4/TIMER.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 4


 136:Generated_Source\PSoC4/TIMER.c ****             #if (TIMER__CENTER == TIMER_PWM_ALIGN)
 137:Generated_Source\PSoC4/TIMER.c ****                 TIMER_TRIG_CONTROL2_REG = TIMER_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/TIMER.c ****             #endif  /* ( TIMER_PWM_CENTER == TIMER_PWM_ALIGN) */
 139:Generated_Source\PSoC4/TIMER.c **** 
 140:Generated_Source\PSoC4/TIMER.c ****             #if (TIMER__ASYMMETRIC == TIMER_PWM_ALIGN)
 141:Generated_Source\PSoC4/TIMER.c ****                 TIMER_TRIG_CONTROL2_REG = TIMER_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/TIMER.c ****             #endif  /* (TIMER__ASYMMETRIC == TIMER_PWM_ALIGN) */
 143:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (TIMER__PWM_PR == TIMER_PWM_MODE) */
 144:Generated_Source\PSoC4/TIMER.c **** 
 145:Generated_Source\PSoC4/TIMER.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/TIMER.c ****         TIMER_WritePeriod(TIMER_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/TIMER.c ****         TIMER_WriteCompare(TIMER_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/TIMER.c **** 
 149:Generated_Source\PSoC4/TIMER.c ****         #if (1u == TIMER_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/TIMER.c ****             TIMER_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/TIMER.c ****             TIMER_WriteCompareBuf(TIMER_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (1u == TIMER_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/TIMER.c **** 
 154:Generated_Source\PSoC4/TIMER.c ****         #if (1u == TIMER_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/TIMER.c ****             TIMER_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/TIMER.c ****             TIMER_WritePeriodBuf(TIMER_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (1u == TIMER_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/TIMER.c ****     #endif  /* (TIMER__PWM_SEL == TIMER_CONFIG) */
 159:Generated_Source\PSoC4/TIMER.c ****     
 160:Generated_Source\PSoC4/TIMER.c **** }
 161:Generated_Source\PSoC4/TIMER.c **** 
 162:Generated_Source\PSoC4/TIMER.c **** 
 163:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_Enable
 165:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 166:Generated_Source\PSoC4/TIMER.c **** *
 167:Generated_Source\PSoC4/TIMER.c **** * Summary:
 168:Generated_Source\PSoC4/TIMER.c **** *  Enables the TIMER.
 169:Generated_Source\PSoC4/TIMER.c **** *
 170:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 171:Generated_Source\PSoC4/TIMER.c **** *  None
 172:Generated_Source\PSoC4/TIMER.c **** *
 173:Generated_Source\PSoC4/TIMER.c **** * Return:
 174:Generated_Source\PSoC4/TIMER.c **** *  None
 175:Generated_Source\PSoC4/TIMER.c **** *
 176:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/TIMER.c **** void TIMER_Enable(void)
 178:Generated_Source\PSoC4/TIMER.c **** {
 179:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/TIMER.c **** 
 181:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 182:Generated_Source\PSoC4/TIMER.c ****     TIMER_BLOCK_CONTROL_REG |= TIMER_MASK;
 183:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 184:Generated_Source\PSoC4/TIMER.c **** 
 185:Generated_Source\PSoC4/TIMER.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER__PWM_SEL == TIMER_CONFIG)
 187:Generated_Source\PSoC4/TIMER.c ****         #if (0u == TIMER_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/TIMER.c ****             TIMER_TriggerCommand(TIMER_MASK, TIMER_CMD_START);
 189:Generated_Source\PSoC4/TIMER.c ****         #endif /* (0u == TIMER_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER__PWM_SEL == TIMER_CONFIG) */
 191:Generated_Source\PSoC4/TIMER.c **** 
 192:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER__TIMER == TIMER_CONFIG)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 5


 193:Generated_Source\PSoC4/TIMER.c ****         #if (0u == TIMER_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/TIMER.c ****             TIMER_TriggerCommand(TIMER_MASK, TIMER_CMD_START);
 195:Generated_Source\PSoC4/TIMER.c ****         #endif /* (0u == TIMER_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER__TIMER == TIMER_CONFIG) */
 197:Generated_Source\PSoC4/TIMER.c ****     
 198:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER__QUAD == TIMER_CONFIG)
 199:Generated_Source\PSoC4/TIMER.c ****         #if (0u != TIMER_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/TIMER.c ****             TIMER_TriggerCommand(TIMER_MASK, TIMER_CMD_RELOAD);
 201:Generated_Source\PSoC4/TIMER.c ****         #endif /* (0u != TIMER_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/TIMER.c ****     #endif  /* (TIMER__QUAD == TIMER_CONFIG) */
 203:Generated_Source\PSoC4/TIMER.c **** }
 204:Generated_Source\PSoC4/TIMER.c **** 
 205:Generated_Source\PSoC4/TIMER.c **** 
 206:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_Start
 208:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 209:Generated_Source\PSoC4/TIMER.c **** *
 210:Generated_Source\PSoC4/TIMER.c **** * Summary:
 211:Generated_Source\PSoC4/TIMER.c **** *  Initializes the TIMER with default customizer
 212:Generated_Source\PSoC4/TIMER.c **** *  values when called the first time and enables the TIMER.
 213:Generated_Source\PSoC4/TIMER.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/TIMER.c **** *  just enabled.
 215:Generated_Source\PSoC4/TIMER.c **** *
 216:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 217:Generated_Source\PSoC4/TIMER.c **** *  None
 218:Generated_Source\PSoC4/TIMER.c **** *
 219:Generated_Source\PSoC4/TIMER.c **** * Return:
 220:Generated_Source\PSoC4/TIMER.c **** *  None
 221:Generated_Source\PSoC4/TIMER.c **** *
 222:Generated_Source\PSoC4/TIMER.c **** * Global variables:
 223:Generated_Source\PSoC4/TIMER.c **** *  TIMER_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/TIMER.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/TIMER.c **** *  to 1 the first time TIMER_Start() is called. This allows
 226:Generated_Source\PSoC4/TIMER.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/TIMER.c **** *  calls to the TIMER_Start() routine.
 228:Generated_Source\PSoC4/TIMER.c **** *
 229:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/TIMER.c **** void TIMER_Start(void)
 231:Generated_Source\PSoC4/TIMER.c **** {
 232:Generated_Source\PSoC4/TIMER.c ****     if (0u == TIMER_initVar)
 233:Generated_Source\PSoC4/TIMER.c ****     {
 234:Generated_Source\PSoC4/TIMER.c ****         TIMER_Init();
 235:Generated_Source\PSoC4/TIMER.c ****         TIMER_initVar = 1u;
 236:Generated_Source\PSoC4/TIMER.c ****     }
 237:Generated_Source\PSoC4/TIMER.c **** 
 238:Generated_Source\PSoC4/TIMER.c ****     TIMER_Enable();
 239:Generated_Source\PSoC4/TIMER.c **** }
 240:Generated_Source\PSoC4/TIMER.c **** 
 241:Generated_Source\PSoC4/TIMER.c **** 
 242:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_Stop
 244:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 245:Generated_Source\PSoC4/TIMER.c **** *
 246:Generated_Source\PSoC4/TIMER.c **** * Summary:
 247:Generated_Source\PSoC4/TIMER.c **** *  Disables the TIMER.
 248:Generated_Source\PSoC4/TIMER.c **** *
 249:Generated_Source\PSoC4/TIMER.c **** * Parameters:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 6


 250:Generated_Source\PSoC4/TIMER.c **** *  None
 251:Generated_Source\PSoC4/TIMER.c **** *
 252:Generated_Source\PSoC4/TIMER.c **** * Return:
 253:Generated_Source\PSoC4/TIMER.c **** *  None
 254:Generated_Source\PSoC4/TIMER.c **** *
 255:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/TIMER.c **** void TIMER_Stop(void)
 257:Generated_Source\PSoC4/TIMER.c **** {
 258:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/TIMER.c **** 
 260:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 261:Generated_Source\PSoC4/TIMER.c **** 
 262:Generated_Source\PSoC4/TIMER.c ****     TIMER_BLOCK_CONTROL_REG &= (uint32)~TIMER_MASK;
 263:Generated_Source\PSoC4/TIMER.c **** 
 264:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 265:Generated_Source\PSoC4/TIMER.c **** }
 266:Generated_Source\PSoC4/TIMER.c **** 
 267:Generated_Source\PSoC4/TIMER.c **** 
 268:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetMode
 270:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 271:Generated_Source\PSoC4/TIMER.c **** *
 272:Generated_Source\PSoC4/TIMER.c **** * Summary:
 273:Generated_Source\PSoC4/TIMER.c **** *  Sets the operation mode of the TIMER. This function is used when
 274:Generated_Source\PSoC4/TIMER.c **** *  configured as a generic TIMER and the actual mode of operation is
 275:Generated_Source\PSoC4/TIMER.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/TIMER.c **** *
 277:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 278:Generated_Source\PSoC4/TIMER.c **** *  mode: Mode for the TIMER to operate in
 279:Generated_Source\PSoC4/TIMER.c **** *   Values:
 280:Generated_Source\PSoC4/TIMER.c **** *   - TIMER_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/TIMER.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/TIMER.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_PWM - PWM
 286:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/TIMER.c **** *
 289:Generated_Source\PSoC4/TIMER.c **** * Return:
 290:Generated_Source\PSoC4/TIMER.c **** *  None
 291:Generated_Source\PSoC4/TIMER.c **** *
 292:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/TIMER.c **** {
 295:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/TIMER.c **** 
 297:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 298:Generated_Source\PSoC4/TIMER.c **** 
 299:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_MODE_MASK;
 300:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= mode;
 301:Generated_Source\PSoC4/TIMER.c **** 
 302:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 303:Generated_Source\PSoC4/TIMER.c **** }
 304:Generated_Source\PSoC4/TIMER.c **** 
 305:Generated_Source\PSoC4/TIMER.c **** 
 306:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 7


 307:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetQDMode
 308:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 309:Generated_Source\PSoC4/TIMER.c **** *
 310:Generated_Source\PSoC4/TIMER.c **** * Summary:
 311:Generated_Source\PSoC4/TIMER.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/TIMER.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/TIMER.c **** *
 314:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 315:Generated_Source\PSoC4/TIMER.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/TIMER.c **** *   Values:
 317:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/TIMER.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/TIMER.c **** *
 322:Generated_Source\PSoC4/TIMER.c **** * Return:
 323:Generated_Source\PSoC4/TIMER.c **** *  None
 324:Generated_Source\PSoC4/TIMER.c **** *
 325:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/TIMER.c **** {
 328:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/TIMER.c **** 
 330:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 331:Generated_Source\PSoC4/TIMER.c **** 
 332:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_QUAD_MODE_MASK;
 333:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= qdMode;
 334:Generated_Source\PSoC4/TIMER.c **** 
 335:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 336:Generated_Source\PSoC4/TIMER.c **** }
 337:Generated_Source\PSoC4/TIMER.c **** 
 338:Generated_Source\PSoC4/TIMER.c **** 
 339:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetPrescaler
 341:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 342:Generated_Source\PSoC4/TIMER.c **** *
 343:Generated_Source\PSoC4/TIMER.c **** * Summary:
 344:Generated_Source\PSoC4/TIMER.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/TIMER.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/TIMER.c **** *
 347:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 348:Generated_Source\PSoC4/TIMER.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/TIMER.c **** *   Values:
 350:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/TIMER.c **** *
 359:Generated_Source\PSoC4/TIMER.c **** * Return:
 360:Generated_Source\PSoC4/TIMER.c **** *  None
 361:Generated_Source\PSoC4/TIMER.c **** *
 362:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetPrescaler(uint32 prescaler)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 8


 364:Generated_Source\PSoC4/TIMER.c **** {
 365:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/TIMER.c **** 
 367:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 368:Generated_Source\PSoC4/TIMER.c **** 
 369:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_PRESCALER_MASK;
 370:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= prescaler;
 371:Generated_Source\PSoC4/TIMER.c **** 
 372:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 373:Generated_Source\PSoC4/TIMER.c **** }
 374:Generated_Source\PSoC4/TIMER.c **** 
 375:Generated_Source\PSoC4/TIMER.c **** 
 376:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetOneShot
 378:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 379:Generated_Source\PSoC4/TIMER.c **** *
 380:Generated_Source\PSoC4/TIMER.c **** * Summary:
 381:Generated_Source\PSoC4/TIMER.c **** *  Writes the register that controls whether the TIMER runs
 382:Generated_Source\PSoC4/TIMER.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/TIMER.c **** *  TIMER operates in the continuous mode.
 384:Generated_Source\PSoC4/TIMER.c **** *
 385:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 386:Generated_Source\PSoC4/TIMER.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/TIMER.c **** *   Values:
 388:Generated_Source\PSoC4/TIMER.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/TIMER.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/TIMER.c **** *
 391:Generated_Source\PSoC4/TIMER.c **** * Return:
 392:Generated_Source\PSoC4/TIMER.c **** *  None
 393:Generated_Source\PSoC4/TIMER.c **** *
 394:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/TIMER.c **** {
 397:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/TIMER.c **** 
 399:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 400:Generated_Source\PSoC4/TIMER.c **** 
 401:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_ONESHOT_MASK;
 402:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((oneShotEnable & TIMER_1BIT_MASK) <<
 403:Generated_Source\PSoC4/TIMER.c ****                                                                TIMER_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/TIMER.c **** 
 405:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 406:Generated_Source\PSoC4/TIMER.c **** }
 407:Generated_Source\PSoC4/TIMER.c **** 
 408:Generated_Source\PSoC4/TIMER.c **** 
 409:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetPWMMode
 411:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 412:Generated_Source\PSoC4/TIMER.c **** *
 413:Generated_Source\PSoC4/TIMER.c **** * Summary:
 414:Generated_Source\PSoC4/TIMER.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/TIMER.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/TIMER.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/TIMER.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/TIMER.c **** *  the mode.
 419:Generated_Source\PSoC4/TIMER.c **** *
 420:Generated_Source\PSoC4/TIMER.c **** * Parameters:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 9


 421:Generated_Source\PSoC4/TIMER.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/TIMER.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/TIMER.c **** *   Values:
 424:Generated_Source\PSoC4/TIMER.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/TIMER.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/TIMER.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/TIMER.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/TIMER.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/TIMER.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/TIMER.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/TIMER.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/TIMER.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/TIMER.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/TIMER.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/TIMER.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/TIMER.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/TIMER.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/TIMER.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/TIMER.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/TIMER.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/TIMER.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/TIMER.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/TIMER.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/TIMER.c **** *
 445:Generated_Source\PSoC4/TIMER.c **** * Return:
 446:Generated_Source\PSoC4/TIMER.c **** *  None
 447:Generated_Source\PSoC4/TIMER.c **** *
 448:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/TIMER.c **** {
 451:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL2_REG = (modeMask & TIMER_6BIT_MASK);
 452:Generated_Source\PSoC4/TIMER.c **** }
 453:Generated_Source\PSoC4/TIMER.c **** 
 454:Generated_Source\PSoC4/TIMER.c **** 
 455:Generated_Source\PSoC4/TIMER.c **** 
 456:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetPWMSyncKill
 458:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 459:Generated_Source\PSoC4/TIMER.c **** *
 460:Generated_Source\PSoC4/TIMER.c **** * Summary:
 461:Generated_Source\PSoC4/TIMER.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/TIMER.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/TIMER.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/TIMER.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/TIMER.c **** *
 466:Generated_Source\PSoC4/TIMER.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/TIMER.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/TIMER.c **** *
 469:Generated_Source\PSoC4/TIMER.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/TIMER.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/TIMER.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/TIMER.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/TIMER.c **** 
 474:Generated_Source\PSoC4/TIMER.c **** *
 475:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 476:Generated_Source\PSoC4/TIMER.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/TIMER.c **** *   Values:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 10


 478:Generated_Source\PSoC4/TIMER.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/TIMER.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/TIMER.c **** *
 481:Generated_Source\PSoC4/TIMER.c **** * Return:
 482:Generated_Source\PSoC4/TIMER.c **** *  None
 483:Generated_Source\PSoC4/TIMER.c **** *
 484:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/TIMER.c **** {
 487:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/TIMER.c **** 
 489:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 490:Generated_Source\PSoC4/TIMER.c **** 
 491:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_PWM_SYNC_KILL_MASK;
 492:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((syncKillEnable & TIMER_1BIT_MASK)  <<
 493:Generated_Source\PSoC4/TIMER.c ****                                                TIMER_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/TIMER.c **** 
 495:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 496:Generated_Source\PSoC4/TIMER.c **** }
 497:Generated_Source\PSoC4/TIMER.c **** 
 498:Generated_Source\PSoC4/TIMER.c **** 
 499:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetPWMStopOnKill
 501:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 502:Generated_Source\PSoC4/TIMER.c **** *
 503:Generated_Source\PSoC4/TIMER.c **** * Summary:
 504:Generated_Source\PSoC4/TIMER.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/TIMER.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/TIMER.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/TIMER.c **** *
 508:Generated_Source\PSoC4/TIMER.c **** *
 509:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 510:Generated_Source\PSoC4/TIMER.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/TIMER.c **** *   Values:
 512:Generated_Source\PSoC4/TIMER.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/TIMER.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/TIMER.c **** *
 515:Generated_Source\PSoC4/TIMER.c **** * Return:
 516:Generated_Source\PSoC4/TIMER.c **** *  None
 517:Generated_Source\PSoC4/TIMER.c **** *
 518:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/TIMER.c **** {
 521:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/TIMER.c **** 
 523:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 524:Generated_Source\PSoC4/TIMER.c **** 
 525:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_PWM_STOP_KILL_MASK;
 526:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((stopOnKillEnable & TIMER_1BIT_MASK)  <<
 527:Generated_Source\PSoC4/TIMER.c ****                                                          TIMER_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/TIMER.c **** 
 529:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 530:Generated_Source\PSoC4/TIMER.c **** }
 531:Generated_Source\PSoC4/TIMER.c **** 
 532:Generated_Source\PSoC4/TIMER.c **** 
 533:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetPWMDeadTime
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 11


 535:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 536:Generated_Source\PSoC4/TIMER.c **** *
 537:Generated_Source\PSoC4/TIMER.c **** * Summary:
 538:Generated_Source\PSoC4/TIMER.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/TIMER.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/TIMER.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/TIMER.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/TIMER.c **** 
 543:Generated_Source\PSoC4/TIMER.c **** *
 544:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 545:Generated_Source\PSoC4/TIMER.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/TIMER.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/TIMER.c **** *
 548:Generated_Source\PSoC4/TIMER.c **** * Return:
 549:Generated_Source\PSoC4/TIMER.c **** *  None
 550:Generated_Source\PSoC4/TIMER.c **** *
 551:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/TIMER.c **** {
 554:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/TIMER.c **** 
 556:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 557:Generated_Source\PSoC4/TIMER.c **** 
 558:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_PRESCALER_MASK;
 559:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((deadTime & TIMER_8BIT_MASK) <<
 560:Generated_Source\PSoC4/TIMER.c ****                                                           TIMER_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/TIMER.c **** 
 562:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 563:Generated_Source\PSoC4/TIMER.c **** }
 564:Generated_Source\PSoC4/TIMER.c **** 
 565:Generated_Source\PSoC4/TIMER.c **** 
 566:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetPWMInvert
 568:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 569:Generated_Source\PSoC4/TIMER.c **** *
 570:Generated_Source\PSoC4/TIMER.c **** * Summary:
 571:Generated_Source\PSoC4/TIMER.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/TIMER.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/TIMER.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/TIMER.c **** *
 575:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 576:Generated_Source\PSoC4/TIMER.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/TIMER.c **** *   Values:
 578:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/TIMER.c **** *         - TIMER_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/TIMER.c **** *
 581:Generated_Source\PSoC4/TIMER.c **** * Return:
 582:Generated_Source\PSoC4/TIMER.c **** *  None
 583:Generated_Source\PSoC4/TIMER.c **** *
 584:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/TIMER.c **** {
 587:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/TIMER.c **** 
 589:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 590:Generated_Source\PSoC4/TIMER.c **** 
 591:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_INV_OUT_MASK;
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 12


 592:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= mask;
 593:Generated_Source\PSoC4/TIMER.c **** 
 594:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 595:Generated_Source\PSoC4/TIMER.c **** }
 596:Generated_Source\PSoC4/TIMER.c **** 
 597:Generated_Source\PSoC4/TIMER.c **** 
 598:Generated_Source\PSoC4/TIMER.c **** 
 599:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_WriteCounter
 601:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 602:Generated_Source\PSoC4/TIMER.c **** *
 603:Generated_Source\PSoC4/TIMER.c **** * Summary:
 604:Generated_Source\PSoC4/TIMER.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/TIMER.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/TIMER.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/TIMER.c **** *
 608:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 609:Generated_Source\PSoC4/TIMER.c **** *  count: value to write
 610:Generated_Source\PSoC4/TIMER.c **** *
 611:Generated_Source\PSoC4/TIMER.c **** * Return:
 612:Generated_Source\PSoC4/TIMER.c **** *  None
 613:Generated_Source\PSoC4/TIMER.c **** *
 614:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/TIMER.c **** void TIMER_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/TIMER.c **** {
 617:Generated_Source\PSoC4/TIMER.c ****     TIMER_COUNTER_REG = (count & TIMER_16BIT_MASK);
  37              		.loc 1 617 0
  38 000a 0B49     		ldr	r1, .L2+4
  39              	.LBE11:
  40              	.LBE10:
  95:Generated_Source\PSoC4/TIMER.c ****             
  41              		.loc 1 95 0
  42 000c 1A60     		str	r2, [r3]
  43              	.LVL0:
  44              	.LBB13:
  45              	.LBB12:
  46              		.loc 1 617 0
  47 000e 0022     		mov	r2, #0
  48 0010 0A60     		str	r2, [r1]
  49              	.LBE12:
  50              	.LBE13:
 112:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (TIMER__PWM == TIMER_PWM_MODE) */
  51              		.loc 1 112 0
  52 0012 1968     		ldr	r1, [r3]
 160:Generated_Source\PSoC4/TIMER.c **** 
  53              		.loc 1 160 0
  54              		@ sp needed
 112:Generated_Source\PSoC4/TIMER.c ****         #endif  /* (TIMER__PWM == TIMER_PWM_MODE) */
  55              		.loc 1 112 0
  56 0014 1960     		str	r1, [r3]
 116:Generated_Source\PSoC4/TIMER.c ****     
  57              		.loc 1 116 0
  58 0016 0C21     		mov	r1, #12
  59 0018 084B     		ldr	r3, .L2+8
  60 001a 1960     		str	r1, [r3]
  61              	.LVL1:
  62              	.LBB14:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 13


  63              	.LBB15:
 618:Generated_Source\PSoC4/TIMER.c **** }
 619:Generated_Source\PSoC4/TIMER.c **** 
 620:Generated_Source\PSoC4/TIMER.c **** 
 621:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadCounter
 623:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 624:Generated_Source\PSoC4/TIMER.c **** *
 625:Generated_Source\PSoC4/TIMER.c **** * Summary:
 626:Generated_Source\PSoC4/TIMER.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/TIMER.c **** *
 628:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 629:Generated_Source\PSoC4/TIMER.c **** *  None
 630:Generated_Source\PSoC4/TIMER.c **** *
 631:Generated_Source\PSoC4/TIMER.c **** * Return:
 632:Generated_Source\PSoC4/TIMER.c **** *  Current counter value
 633:Generated_Source\PSoC4/TIMER.c **** *
 634:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadCounter(void)
 636:Generated_Source\PSoC4/TIMER.c **** {
 637:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_COUNTER_REG & TIMER_16BIT_MASK);
 638:Generated_Source\PSoC4/TIMER.c **** }
 639:Generated_Source\PSoC4/TIMER.c **** 
 640:Generated_Source\PSoC4/TIMER.c **** 
 641:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetCounterMode
 643:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 644:Generated_Source\PSoC4/TIMER.c **** *
 645:Generated_Source\PSoC4/TIMER.c **** * Summary:
 646:Generated_Source\PSoC4/TIMER.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/TIMER.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/TIMER.c **** *
 649:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 650:Generated_Source\PSoC4/TIMER.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/TIMER.c **** *   Values:
 652:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/TIMER.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/TIMER.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/TIMER.c **** *                                         and period
 659:Generated_Source\PSoC4/TIMER.c **** *
 660:Generated_Source\PSoC4/TIMER.c **** * Return:
 661:Generated_Source\PSoC4/TIMER.c **** *  None
 662:Generated_Source\PSoC4/TIMER.c **** *
 663:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/TIMER.c **** {
 666:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/TIMER.c **** 
 668:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 669:Generated_Source\PSoC4/TIMER.c **** 
 670:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_UPDOWN_MASK;
 671:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= counterMode;
 672:Generated_Source\PSoC4/TIMER.c **** 
 673:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 14


 674:Generated_Source\PSoC4/TIMER.c **** }
 675:Generated_Source\PSoC4/TIMER.c **** 
 676:Generated_Source\PSoC4/TIMER.c **** 
 677:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_WritePeriod
 679:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 680:Generated_Source\PSoC4/TIMER.c **** *
 681:Generated_Source\PSoC4/TIMER.c **** * Summary:
 682:Generated_Source\PSoC4/TIMER.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/TIMER.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/TIMER.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/TIMER.c **** *
 686:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 687:Generated_Source\PSoC4/TIMER.c **** *  period: Period value
 688:Generated_Source\PSoC4/TIMER.c **** *
 689:Generated_Source\PSoC4/TIMER.c **** * Return:
 690:Generated_Source\PSoC4/TIMER.c **** *  None
 691:Generated_Source\PSoC4/TIMER.c **** *
 692:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/TIMER.c **** void TIMER_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/TIMER.c **** {
 695:Generated_Source\PSoC4/TIMER.c ****     TIMER_PERIOD_REG = (period & TIMER_16BIT_MASK);
 696:Generated_Source\PSoC4/TIMER.c **** }
 697:Generated_Source\PSoC4/TIMER.c **** 
 698:Generated_Source\PSoC4/TIMER.c **** 
 699:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadPeriod
 701:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 702:Generated_Source\PSoC4/TIMER.c **** *
 703:Generated_Source\PSoC4/TIMER.c **** * Summary:
 704:Generated_Source\PSoC4/TIMER.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/TIMER.c **** *
 706:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 707:Generated_Source\PSoC4/TIMER.c **** *  None
 708:Generated_Source\PSoC4/TIMER.c **** *
 709:Generated_Source\PSoC4/TIMER.c **** * Return:
 710:Generated_Source\PSoC4/TIMER.c **** *  Period value
 711:Generated_Source\PSoC4/TIMER.c **** *
 712:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadPeriod(void)
 714:Generated_Source\PSoC4/TIMER.c **** {
 715:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_PERIOD_REG & TIMER_16BIT_MASK);
 716:Generated_Source\PSoC4/TIMER.c **** }
 717:Generated_Source\PSoC4/TIMER.c **** 
 718:Generated_Source\PSoC4/TIMER.c **** 
 719:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetCompareSwap
 721:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 722:Generated_Source\PSoC4/TIMER.c **** *
 723:Generated_Source\PSoC4/TIMER.c **** * Summary:
 724:Generated_Source\PSoC4/TIMER.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/TIMER.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/TIMER.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/TIMER.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/TIMER.c **** *
 729:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 730:Generated_Source\PSoC4/TIMER.c **** *  swapEnable
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 15


 731:Generated_Source\PSoC4/TIMER.c **** *   Values:
 732:Generated_Source\PSoC4/TIMER.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/TIMER.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/TIMER.c **** *
 735:Generated_Source\PSoC4/TIMER.c **** * Return:
 736:Generated_Source\PSoC4/TIMER.c **** *  None
 737:Generated_Source\PSoC4/TIMER.c **** *
 738:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/TIMER.c **** {
 741:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/TIMER.c **** 
 743:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 744:Generated_Source\PSoC4/TIMER.c **** 
 745:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_RELOAD_CC_MASK;
 746:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= (swapEnable & TIMER_1BIT_MASK);
 747:Generated_Source\PSoC4/TIMER.c **** 
 748:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 749:Generated_Source\PSoC4/TIMER.c **** }
 750:Generated_Source\PSoC4/TIMER.c **** 
 751:Generated_Source\PSoC4/TIMER.c **** 
 752:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_WritePeriodBuf
 754:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 755:Generated_Source\PSoC4/TIMER.c **** *
 756:Generated_Source\PSoC4/TIMER.c **** * Summary:
 757:Generated_Source\PSoC4/TIMER.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/TIMER.c **** *
 759:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 760:Generated_Source\PSoC4/TIMER.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/TIMER.c **** *
 762:Generated_Source\PSoC4/TIMER.c **** * Return:
 763:Generated_Source\PSoC4/TIMER.c **** *  None
 764:Generated_Source\PSoC4/TIMER.c **** *
 765:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/TIMER.c **** void TIMER_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/TIMER.c **** {
 768:Generated_Source\PSoC4/TIMER.c ****     TIMER_PERIOD_BUF_REG = (periodBuf & TIMER_16BIT_MASK);
 769:Generated_Source\PSoC4/TIMER.c **** }
 770:Generated_Source\PSoC4/TIMER.c **** 
 771:Generated_Source\PSoC4/TIMER.c **** 
 772:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadPeriodBuf
 774:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 775:Generated_Source\PSoC4/TIMER.c **** *
 776:Generated_Source\PSoC4/TIMER.c **** * Summary:
 777:Generated_Source\PSoC4/TIMER.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/TIMER.c **** *
 779:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 780:Generated_Source\PSoC4/TIMER.c **** *  None
 781:Generated_Source\PSoC4/TIMER.c **** *
 782:Generated_Source\PSoC4/TIMER.c **** * Return:
 783:Generated_Source\PSoC4/TIMER.c **** *  Period value
 784:Generated_Source\PSoC4/TIMER.c **** *
 785:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/TIMER.c **** {
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 16


 788:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_PERIOD_BUF_REG & TIMER_16BIT_MASK);
 789:Generated_Source\PSoC4/TIMER.c **** }
 790:Generated_Source\PSoC4/TIMER.c **** 
 791:Generated_Source\PSoC4/TIMER.c **** 
 792:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetPeriodSwap
 794:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 795:Generated_Source\PSoC4/TIMER.c **** *
 796:Generated_Source\PSoC4/TIMER.c **** * Summary:
 797:Generated_Source\PSoC4/TIMER.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/TIMER.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/TIMER.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/TIMER.c **** *  switch event.
 801:Generated_Source\PSoC4/TIMER.c **** *
 802:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 803:Generated_Source\PSoC4/TIMER.c **** *  swapEnable
 804:Generated_Source\PSoC4/TIMER.c **** *   Values:
 805:Generated_Source\PSoC4/TIMER.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/TIMER.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/TIMER.c **** *
 808:Generated_Source\PSoC4/TIMER.c **** * Return:
 809:Generated_Source\PSoC4/TIMER.c **** *  None
 810:Generated_Source\PSoC4/TIMER.c **** *
 811:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/TIMER.c **** {
 814:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/TIMER.c **** 
 816:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
 817:Generated_Source\PSoC4/TIMER.c **** 
 818:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG &= (uint32)~TIMER_RELOAD_PERIOD_MASK;
 819:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((swapEnable & TIMER_1BIT_MASK) <<
 820:Generated_Source\PSoC4/TIMER.c ****                                                             TIMER_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/TIMER.c **** 
 822:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 823:Generated_Source\PSoC4/TIMER.c **** }
 824:Generated_Source\PSoC4/TIMER.c **** 
 825:Generated_Source\PSoC4/TIMER.c **** 
 826:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_WriteCompare
 828:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 829:Generated_Source\PSoC4/TIMER.c **** *
 830:Generated_Source\PSoC4/TIMER.c **** * Summary:
 831:Generated_Source\PSoC4/TIMER.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/TIMER.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/TIMER.c **** *
 834:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 835:Generated_Source\PSoC4/TIMER.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/TIMER.c **** *
 837:Generated_Source\PSoC4/TIMER.c **** * Return:
 838:Generated_Source\PSoC4/TIMER.c **** *  None
 839:Generated_Source\PSoC4/TIMER.c **** *
 840:Generated_Source\PSoC4/TIMER.c **** * Note:
 841:Generated_Source\PSoC4/TIMER.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/TIMER.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/TIMER.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/TIMER.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 17


 845:Generated_Source\PSoC4/TIMER.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/TIMER.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/TIMER.c **** *
 848:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/TIMER.c **** void TIMER_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/TIMER.c **** {
 851:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/TIMER.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/TIMER.c **** 
 855:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/TIMER.c ****         currentMode = ((TIMER_CONTROL_REG & TIMER_UPDOWN_MASK) >> TIMER_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/TIMER.c **** 
 858:Generated_Source\PSoC4/TIMER.c ****         if (((uint32)TIMER__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/TIMER.c ****         {
 860:Generated_Source\PSoC4/TIMER.c ****             compare++;
 861:Generated_Source\PSoC4/TIMER.c ****         }
 862:Generated_Source\PSoC4/TIMER.c ****         else if (((uint32)TIMER__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/TIMER.c ****         {
 864:Generated_Source\PSoC4/TIMER.c ****             compare--;
 865:Generated_Source\PSoC4/TIMER.c ****         }
 866:Generated_Source\PSoC4/TIMER.c ****         else
 867:Generated_Source\PSoC4/TIMER.c ****         {
 868:Generated_Source\PSoC4/TIMER.c ****         }
 869:Generated_Source\PSoC4/TIMER.c ****         
 870:Generated_Source\PSoC4/TIMER.c ****     
 871:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/TIMER.c ****     
 873:Generated_Source\PSoC4/TIMER.c ****     TIMER_COMP_CAP_REG = (compare & TIMER_16BIT_MASK);
 874:Generated_Source\PSoC4/TIMER.c **** }
 875:Generated_Source\PSoC4/TIMER.c **** 
 876:Generated_Source\PSoC4/TIMER.c **** 
 877:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadCompare
 879:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 880:Generated_Source\PSoC4/TIMER.c **** *
 881:Generated_Source\PSoC4/TIMER.c **** * Summary:
 882:Generated_Source\PSoC4/TIMER.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/TIMER.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/TIMER.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/TIMER.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/TIMER.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/TIMER.c **** *
 888:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 889:Generated_Source\PSoC4/TIMER.c **** *  None
 890:Generated_Source\PSoC4/TIMER.c **** *
 891:Generated_Source\PSoC4/TIMER.c **** * Return:
 892:Generated_Source\PSoC4/TIMER.c **** *  Compare value
 893:Generated_Source\PSoC4/TIMER.c **** *
 894:Generated_Source\PSoC4/TIMER.c **** * Note:
 895:Generated_Source\PSoC4/TIMER.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/TIMER.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/TIMER.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/TIMER.c **** *
 899:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadCompare(void)
 901:Generated_Source\PSoC4/TIMER.c **** {
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 18


 902:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/TIMER.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/TIMER.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/TIMER.c **** 
 907:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/TIMER.c ****         currentMode = ((TIMER_CONTROL_REG & TIMER_UPDOWN_MASK) >> TIMER_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/TIMER.c ****         
 910:Generated_Source\PSoC4/TIMER.c ****         regVal = TIMER_COMP_CAP_REG;
 911:Generated_Source\PSoC4/TIMER.c ****         
 912:Generated_Source\PSoC4/TIMER.c ****         if (((uint32)TIMER__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/TIMER.c ****         {
 914:Generated_Source\PSoC4/TIMER.c ****             regVal--;
 915:Generated_Source\PSoC4/TIMER.c ****         }
 916:Generated_Source\PSoC4/TIMER.c ****         else if (((uint32)TIMER__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/TIMER.c ****         {
 918:Generated_Source\PSoC4/TIMER.c ****             regVal++;
 919:Generated_Source\PSoC4/TIMER.c ****         }
 920:Generated_Source\PSoC4/TIMER.c ****         else
 921:Generated_Source\PSoC4/TIMER.c ****         {
 922:Generated_Source\PSoC4/TIMER.c ****         }
 923:Generated_Source\PSoC4/TIMER.c **** 
 924:Generated_Source\PSoC4/TIMER.c ****         return (regVal & TIMER_16BIT_MASK);
 925:Generated_Source\PSoC4/TIMER.c ****     #else
 926:Generated_Source\PSoC4/TIMER.c ****         return (TIMER_COMP_CAP_REG & TIMER_16BIT_MASK);
 927:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/TIMER.c **** }
 929:Generated_Source\PSoC4/TIMER.c **** 
 930:Generated_Source\PSoC4/TIMER.c **** 
 931:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_WriteCompareBuf
 933:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 934:Generated_Source\PSoC4/TIMER.c **** *
 935:Generated_Source\PSoC4/TIMER.c **** * Summary:
 936:Generated_Source\PSoC4/TIMER.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/TIMER.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/TIMER.c **** *
 939:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 940:Generated_Source\PSoC4/TIMER.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/TIMER.c **** *
 942:Generated_Source\PSoC4/TIMER.c **** * Return:
 943:Generated_Source\PSoC4/TIMER.c **** *  None
 944:Generated_Source\PSoC4/TIMER.c **** *
 945:Generated_Source\PSoC4/TIMER.c **** * Note:
 946:Generated_Source\PSoC4/TIMER.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/TIMER.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/TIMER.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/TIMER.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/TIMER.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/TIMER.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/TIMER.c **** *
 953:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/TIMER.c **** void TIMER_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/TIMER.c **** {
 956:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/TIMER.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 19


 959:Generated_Source\PSoC4/TIMER.c **** 
 960:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/TIMER.c ****         currentMode = ((TIMER_CONTROL_REG & TIMER_UPDOWN_MASK) >> TIMER_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/TIMER.c **** 
 963:Generated_Source\PSoC4/TIMER.c ****         if (((uint32)TIMER__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/TIMER.c ****         {
 965:Generated_Source\PSoC4/TIMER.c ****             compareBuf++;
 966:Generated_Source\PSoC4/TIMER.c ****         }
 967:Generated_Source\PSoC4/TIMER.c ****         else if (((uint32)TIMER__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/TIMER.c ****         {
 969:Generated_Source\PSoC4/TIMER.c ****             compareBuf --;
 970:Generated_Source\PSoC4/TIMER.c ****         }
 971:Generated_Source\PSoC4/TIMER.c ****         else
 972:Generated_Source\PSoC4/TIMER.c ****         {
 973:Generated_Source\PSoC4/TIMER.c ****         }
 974:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/TIMER.c ****     
 976:Generated_Source\PSoC4/TIMER.c ****     TIMER_COMP_CAP_BUF_REG = (compareBuf & TIMER_16BIT_MASK);
 977:Generated_Source\PSoC4/TIMER.c **** }
 978:Generated_Source\PSoC4/TIMER.c **** 
 979:Generated_Source\PSoC4/TIMER.c **** 
 980:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadCompareBuf
 982:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
 983:Generated_Source\PSoC4/TIMER.c **** *
 984:Generated_Source\PSoC4/TIMER.c **** * Summary:
 985:Generated_Source\PSoC4/TIMER.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/TIMER.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/TIMER.c **** *
 988:Generated_Source\PSoC4/TIMER.c **** * Parameters:
 989:Generated_Source\PSoC4/TIMER.c **** *  None
 990:Generated_Source\PSoC4/TIMER.c **** *
 991:Generated_Source\PSoC4/TIMER.c **** * Return:
 992:Generated_Source\PSoC4/TIMER.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/TIMER.c **** *
 994:Generated_Source\PSoC4/TIMER.c **** * Note:
 995:Generated_Source\PSoC4/TIMER.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/TIMER.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/TIMER.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/TIMER.c **** *
 999:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/TIMER.c **** {
1002:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/TIMER.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/TIMER.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/TIMER.c **** 
1007:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/TIMER.c ****         currentMode = ((TIMER_CONTROL_REG & TIMER_UPDOWN_MASK) >> TIMER_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/TIMER.c **** 
1010:Generated_Source\PSoC4/TIMER.c ****         regVal = TIMER_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/TIMER.c ****         
1012:Generated_Source\PSoC4/TIMER.c ****         if (((uint32)TIMER__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/TIMER.c ****         {
1014:Generated_Source\PSoC4/TIMER.c ****             regVal--;
1015:Generated_Source\PSoC4/TIMER.c ****         }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 20


1016:Generated_Source\PSoC4/TIMER.c ****         else if (((uint32)TIMER__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/TIMER.c ****         {
1018:Generated_Source\PSoC4/TIMER.c ****             regVal++;
1019:Generated_Source\PSoC4/TIMER.c ****         }
1020:Generated_Source\PSoC4/TIMER.c ****         else
1021:Generated_Source\PSoC4/TIMER.c ****         {
1022:Generated_Source\PSoC4/TIMER.c ****         }
1023:Generated_Source\PSoC4/TIMER.c **** 
1024:Generated_Source\PSoC4/TIMER.c ****         return (regVal & TIMER_16BIT_MASK);
1025:Generated_Source\PSoC4/TIMER.c ****     #else
1026:Generated_Source\PSoC4/TIMER.c ****         return (TIMER_COMP_CAP_BUF_REG & TIMER_16BIT_MASK);
1027:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/TIMER.c **** }
1029:Generated_Source\PSoC4/TIMER.c **** 
1030:Generated_Source\PSoC4/TIMER.c **** 
1031:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadCapture
1033:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1034:Generated_Source\PSoC4/TIMER.c **** *
1035:Generated_Source\PSoC4/TIMER.c **** * Summary:
1036:Generated_Source\PSoC4/TIMER.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/TIMER.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/TIMER.c **** *
1039:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1040:Generated_Source\PSoC4/TIMER.c **** *  None
1041:Generated_Source\PSoC4/TIMER.c **** *
1042:Generated_Source\PSoC4/TIMER.c **** * Return:
1043:Generated_Source\PSoC4/TIMER.c **** *  Capture value
1044:Generated_Source\PSoC4/TIMER.c **** *
1045:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadCapture(void)
1047:Generated_Source\PSoC4/TIMER.c **** {
1048:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_COMP_CAP_REG & TIMER_16BIT_MASK);
1049:Generated_Source\PSoC4/TIMER.c **** }
1050:Generated_Source\PSoC4/TIMER.c **** 
1051:Generated_Source\PSoC4/TIMER.c **** 
1052:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadCaptureBuf
1054:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1055:Generated_Source\PSoC4/TIMER.c **** *
1056:Generated_Source\PSoC4/TIMER.c **** * Summary:
1057:Generated_Source\PSoC4/TIMER.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/TIMER.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/TIMER.c **** *
1060:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1061:Generated_Source\PSoC4/TIMER.c **** *  None
1062:Generated_Source\PSoC4/TIMER.c **** *
1063:Generated_Source\PSoC4/TIMER.c **** * Return:
1064:Generated_Source\PSoC4/TIMER.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/TIMER.c **** *
1066:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/TIMER.c **** {
1069:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_COMP_CAP_BUF_REG & TIMER_16BIT_MASK);
1070:Generated_Source\PSoC4/TIMER.c **** }
1071:Generated_Source\PSoC4/TIMER.c **** 
1072:Generated_Source\PSoC4/TIMER.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 21


1073:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetCaptureMode
1075:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1076:Generated_Source\PSoC4/TIMER.c **** *
1077:Generated_Source\PSoC4/TIMER.c **** * Summary:
1078:Generated_Source\PSoC4/TIMER.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/TIMER.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/TIMER.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/TIMER.c **** *
1082:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1083:Generated_Source\PSoC4/TIMER.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/TIMER.c **** *   Values:
1085:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/TIMER.c **** *
1090:Generated_Source\PSoC4/TIMER.c **** * Return:
1091:Generated_Source\PSoC4/TIMER.c **** *  None
1092:Generated_Source\PSoC4/TIMER.c **** *
1093:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/TIMER.c **** {
1096:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/TIMER.c **** 
1098:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
1099:Generated_Source\PSoC4/TIMER.c **** 
1100:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG &= (uint32)~TIMER_CAPTURE_MASK;
1101:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= triggerMode;
1102:Generated_Source\PSoC4/TIMER.c **** 
1103:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
1104:Generated_Source\PSoC4/TIMER.c **** }
1105:Generated_Source\PSoC4/TIMER.c **** 
1106:Generated_Source\PSoC4/TIMER.c **** 
1107:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetReloadMode
1109:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1110:Generated_Source\PSoC4/TIMER.c **** *
1111:Generated_Source\PSoC4/TIMER.c **** * Summary:
1112:Generated_Source\PSoC4/TIMER.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/TIMER.c **** *  input.
1114:Generated_Source\PSoC4/TIMER.c **** *
1115:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1116:Generated_Source\PSoC4/TIMER.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/TIMER.c **** *   Values:
1118:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/TIMER.c **** *
1123:Generated_Source\PSoC4/TIMER.c **** * Return:
1124:Generated_Source\PSoC4/TIMER.c **** *  None
1125:Generated_Source\PSoC4/TIMER.c **** *
1126:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/TIMER.c **** {
1129:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 22


1130:Generated_Source\PSoC4/TIMER.c **** 
1131:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
1132:Generated_Source\PSoC4/TIMER.c **** 
1133:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG &= (uint32)~TIMER_RELOAD_MASK;
1134:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_RELOAD_SHIFT));
1135:Generated_Source\PSoC4/TIMER.c **** 
1136:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
1137:Generated_Source\PSoC4/TIMER.c **** }
1138:Generated_Source\PSoC4/TIMER.c **** 
1139:Generated_Source\PSoC4/TIMER.c **** 
1140:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetStartMode
1142:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1143:Generated_Source\PSoC4/TIMER.c **** *
1144:Generated_Source\PSoC4/TIMER.c **** * Summary:
1145:Generated_Source\PSoC4/TIMER.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/TIMER.c **** *  phiB input.
1147:Generated_Source\PSoC4/TIMER.c **** *
1148:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1149:Generated_Source\PSoC4/TIMER.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/TIMER.c **** *   Values:
1151:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/TIMER.c **** *
1156:Generated_Source\PSoC4/TIMER.c **** * Return:
1157:Generated_Source\PSoC4/TIMER.c **** *  None
1158:Generated_Source\PSoC4/TIMER.c **** *
1159:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/TIMER.c **** {
1162:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/TIMER.c **** 
1164:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
1165:Generated_Source\PSoC4/TIMER.c **** 
1166:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG &= (uint32)~TIMER_START_MASK;
1167:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_START_SHIFT));
1168:Generated_Source\PSoC4/TIMER.c **** 
1169:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
1170:Generated_Source\PSoC4/TIMER.c **** }
1171:Generated_Source\PSoC4/TIMER.c **** 
1172:Generated_Source\PSoC4/TIMER.c **** 
1173:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetStopMode
1175:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1176:Generated_Source\PSoC4/TIMER.c **** *
1177:Generated_Source\PSoC4/TIMER.c **** * Summary:
1178:Generated_Source\PSoC4/TIMER.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/TIMER.c **** *
1180:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1181:Generated_Source\PSoC4/TIMER.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/TIMER.c **** *   Values:
1183:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_BOTH      - Both rising and falling edge
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 23


1187:Generated_Source\PSoC4/TIMER.c **** *
1188:Generated_Source\PSoC4/TIMER.c **** * Return:
1189:Generated_Source\PSoC4/TIMER.c **** *  None
1190:Generated_Source\PSoC4/TIMER.c **** *
1191:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/TIMER.c **** {
1194:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/TIMER.c **** 
1196:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
1197:Generated_Source\PSoC4/TIMER.c **** 
1198:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG &= (uint32)~TIMER_STOP_MASK;
1199:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_STOP_SHIFT));
1200:Generated_Source\PSoC4/TIMER.c **** 
1201:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
1202:Generated_Source\PSoC4/TIMER.c **** }
1203:Generated_Source\PSoC4/TIMER.c **** 
1204:Generated_Source\PSoC4/TIMER.c **** 
1205:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetCountMode
1207:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1208:Generated_Source\PSoC4/TIMER.c **** *
1209:Generated_Source\PSoC4/TIMER.c **** * Summary:
1210:Generated_Source\PSoC4/TIMER.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/TIMER.c **** *  input.
1212:Generated_Source\PSoC4/TIMER.c **** *
1213:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1214:Generated_Source\PSoC4/TIMER.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/TIMER.c **** *   Values:
1216:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/TIMER.c **** *
1221:Generated_Source\PSoC4/TIMER.c **** * Return:
1222:Generated_Source\PSoC4/TIMER.c **** *  None
1223:Generated_Source\PSoC4/TIMER.c **** *
1224:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/TIMER.c **** {
1227:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/TIMER.c **** 
1229:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
1230:Generated_Source\PSoC4/TIMER.c **** 
1231:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG &= (uint32)~TIMER_COUNT_MASK;
1232:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_COUNT_SHIFT));
1233:Generated_Source\PSoC4/TIMER.c **** 
1234:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
1235:Generated_Source\PSoC4/TIMER.c **** }
1236:Generated_Source\PSoC4/TIMER.c **** 
1237:Generated_Source\PSoC4/TIMER.c **** 
1238:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_TriggerCommand
1240:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1241:Generated_Source\PSoC4/TIMER.c **** *
1242:Generated_Source\PSoC4/TIMER.c **** * Summary:
1243:Generated_Source\PSoC4/TIMER.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 24


1244:Generated_Source\PSoC4/TIMER.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/TIMER.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/TIMER.c **** *
1247:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1248:Generated_Source\PSoC4/TIMER.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/TIMER.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/TIMER.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/TIMER.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/TIMER.c **** *        define.
1253:Generated_Source\PSoC4/TIMER.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/TIMER.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/TIMER.c **** *   Values:
1256:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/TIMER.c **** *
1261:Generated_Source\PSoC4/TIMER.c **** * Return:
1262:Generated_Source\PSoC4/TIMER.c **** *  None
1263:Generated_Source\PSoC4/TIMER.c **** *
1264:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/TIMER.c **** void TIMER_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/TIMER.c **** {
1267:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/TIMER.c **** 
1269:Generated_Source\PSoC4/TIMER.c ****     enableInterrupts = CyEnterCriticalSection();
1270:Generated_Source\PSoC4/TIMER.c **** 
1271:Generated_Source\PSoC4/TIMER.c ****     TIMER_COMMAND_REG = ((uint32)(mask << command));
1272:Generated_Source\PSoC4/TIMER.c **** 
1273:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
1274:Generated_Source\PSoC4/TIMER.c **** }
1275:Generated_Source\PSoC4/TIMER.c **** 
1276:Generated_Source\PSoC4/TIMER.c **** 
1277:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ReadStatus
1279:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1280:Generated_Source\PSoC4/TIMER.c **** *
1281:Generated_Source\PSoC4/TIMER.c **** * Summary:
1282:Generated_Source\PSoC4/TIMER.c **** *  Reads the status of the TIMER.
1283:Generated_Source\PSoC4/TIMER.c **** *
1284:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1285:Generated_Source\PSoC4/TIMER.c **** *  None
1286:Generated_Source\PSoC4/TIMER.c **** *
1287:Generated_Source\PSoC4/TIMER.c **** * Return:
1288:Generated_Source\PSoC4/TIMER.c **** *  Status
1289:Generated_Source\PSoC4/TIMER.c **** *   Values:
1290:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/TIMER.c **** *
1293:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_ReadStatus(void)
1295:Generated_Source\PSoC4/TIMER.c **** {
1296:Generated_Source\PSoC4/TIMER.c ****     return ((TIMER_STATUS_REG >> TIMER_RUNNING_STATUS_SHIFT) |
1297:Generated_Source\PSoC4/TIMER.c ****             (TIMER_STATUS_REG & TIMER_STATUS_DOWN));
1298:Generated_Source\PSoC4/TIMER.c **** }
1299:Generated_Source\PSoC4/TIMER.c **** 
1300:Generated_Source\PSoC4/TIMER.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 25


1301:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetInterruptMode
1303:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1304:Generated_Source\PSoC4/TIMER.c **** *
1305:Generated_Source\PSoC4/TIMER.c **** * Summary:
1306:Generated_Source\PSoC4/TIMER.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/TIMER.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/TIMER.c **** *
1309:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1310:Generated_Source\PSoC4/TIMER.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/TIMER.c **** *   Values:
1312:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/TIMER.c **** *
1315:Generated_Source\PSoC4/TIMER.c **** * Return:
1316:Generated_Source\PSoC4/TIMER.c **** *  None
1317:Generated_Source\PSoC4/TIMER.c **** *
1318:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/TIMER.c **** {
1321:Generated_Source\PSoC4/TIMER.c ****     TIMER_INTERRUPT_MASK_REG =  interruptMask;
  64              		.loc 1 1321 0
  65 001c 084B     		ldr	r3, .L2+12
  66 001e 1A60     		str	r2, [r3]
  67              	.LBE15:
  68              	.LBE14:
 129:Generated_Source\PSoC4/TIMER.c ****             #endif  /* ( TIMER_PWM_LEFT == TIMER_PWM_ALIGN) */
  69              		.loc 1 129 0
  70 0020 084B     		ldr	r3, .L2+16
  71 0022 3132     		add	r2, r2, #49
  72 0024 1A60     		str	r2, [r3]
  73              	.LVL2:
  74              	.LBB16:
  75              	.LBB17:
 695:Generated_Source\PSoC4/TIMER.c **** }
  76              		.loc 1 695 0
  77 0026 084A     		ldr	r2, .L2+20
  78 0028 084B     		ldr	r3, .L2+24
  79 002a 1A60     		str	r2, [r3]
  80              	.LVL3:
  81              	.LBE17:
  82              	.LBE16:
  83              	.LBB18:
  84              	.LBB19:
 873:Generated_Source\PSoC4/TIMER.c **** }
  85              		.loc 1 873 0
  86 002c 084A     		ldr	r2, .L2+28
  87 002e 094B     		ldr	r3, .L2+32
  88 0030 1A60     		str	r2, [r3]
  89              	.LBE19:
  90              	.LBE18:
 160:Generated_Source\PSoC4/TIMER.c **** 
  91              		.loc 1 160 0
  92 0032 7047     		bx	lr
  93              	.L3:
  94              		.align	2
  95              	.L2:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 26


  96 0034 00012040 		.word	1075839232
  97 0038 08012040 		.word	1075839240
  98 003c 24012040 		.word	1075839268
  99 0040 38012040 		.word	1075839288
 100 0044 28012040 		.word	1075839272
 101 0048 70170000 		.word	6000
 102 004c 14012040 		.word	1075839252
 103 0050 B80B0000 		.word	3000
 104 0054 0C012040 		.word	1075839244
 105              		.cfi_endproc
 106              	.LFE2:
 107              		.size	TIMER_Init, .-TIMER_Init
 108              		.section	.text.TIMER_Stop,"ax",%progbits
 109              		.align	1
 110              		.global	TIMER_Stop
 111              		.code	16
 112              		.thumb_func
 113              		.type	TIMER_Stop, %function
 114              	TIMER_Stop:
 115              	.LFB5:
 257:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 116              		.loc 1 257 0
 117              		.cfi_startproc
 118 0000 08B5     		push	{r3, lr}
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 3, -8
 121              		.cfi_offset 14, -4
 260:Generated_Source\PSoC4/TIMER.c **** 
 122              		.loc 1 260 0
 123 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 124              	.LVL4:
 262:Generated_Source\PSoC4/TIMER.c **** 
 125              		.loc 1 262 0
 126 0006 0121     		mov	r1, #1
 127 0008 034A     		ldr	r2, .L5
 265:Generated_Source\PSoC4/TIMER.c **** 
 128              		.loc 1 265 0
 129              		@ sp needed
 262:Generated_Source\PSoC4/TIMER.c **** 
 130              		.loc 1 262 0
 131 000a 1368     		ldr	r3, [r2]
 132 000c 8B43     		bic	r3, r1
 133 000e 1360     		str	r3, [r2]
 264:Generated_Source\PSoC4/TIMER.c **** }
 134              		.loc 1 264 0
 135 0010 FFF7FEFF 		bl	CyExitCriticalSection
 136              	.LVL5:
 265:Generated_Source\PSoC4/TIMER.c **** 
 137              		.loc 1 265 0
 138 0014 08BD     		pop	{r3, pc}
 139              	.L6:
 140 0016 C046     		.align	2
 141              	.L5:
 142 0018 00002040 		.word	1075838976
 143              		.cfi_endproc
 144              	.LFE5:
 145              		.size	TIMER_Stop, .-TIMER_Stop
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 27


 146              		.section	.text.TIMER_SetMode,"ax",%progbits
 147              		.align	1
 148              		.global	TIMER_SetMode
 149              		.code	16
 150              		.thumb_func
 151              		.type	TIMER_SetMode, %function
 152              	TIMER_SetMode:
 153              	.LFB6:
 294:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 154              		.loc 1 294 0
 155              		.cfi_startproc
 156              	.LVL6:
 157 0000 10B5     		push	{r4, lr}
 158              		.cfi_def_cfa_offset 8
 159              		.cfi_offset 4, -8
 160              		.cfi_offset 14, -4
 294:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 161              		.loc 1 294 0
 162 0002 041C     		mov	r4, r0
 297:Generated_Source\PSoC4/TIMER.c **** 
 163              		.loc 1 297 0
 164 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 165              	.LVL7:
 299:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= mode;
 166              		.loc 1 299 0
 167 0008 054B     		ldr	r3, .L8
 168 000a 064A     		ldr	r2, .L8+4
 169 000c 1968     		ldr	r1, [r3]
 303:Generated_Source\PSoC4/TIMER.c **** 
 170              		.loc 1 303 0
 171              		@ sp needed
 299:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= mode;
 172              		.loc 1 299 0
 173 000e 0A40     		and	r2, r1
 174 0010 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/TIMER.c **** 
 175              		.loc 1 300 0
 176 0012 1A68     		ldr	r2, [r3]
 177 0014 2243     		orr	r2, r4
 178 0016 1A60     		str	r2, [r3]
 302:Generated_Source\PSoC4/TIMER.c **** }
 179              		.loc 1 302 0
 180 0018 FFF7FEFF 		bl	CyExitCriticalSection
 181              	.LVL8:
 182              	.LVL9:
 303:Generated_Source\PSoC4/TIMER.c **** 
 183              		.loc 1 303 0
 184 001c 10BD     		pop	{r4, pc}
 185              	.L9:
 186 001e C046     		.align	2
 187              	.L8:
 188 0020 00012040 		.word	1075839232
 189 0024 FFFFFFF8 		.word	-117440513
 190              		.cfi_endproc
 191              	.LFE6:
 192              		.size	TIMER_SetMode, .-TIMER_SetMode
 193              		.section	.text.TIMER_SetQDMode,"ax",%progbits
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 28


 194              		.align	1
 195              		.global	TIMER_SetQDMode
 196              		.code	16
 197              		.thumb_func
 198              		.type	TIMER_SetQDMode, %function
 199              	TIMER_SetQDMode:
 200              	.LFB7:
 327:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 201              		.loc 1 327 0
 202              		.cfi_startproc
 203              	.LVL10:
 204 0000 10B5     		push	{r4, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 4, -8
 207              		.cfi_offset 14, -4
 327:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 208              		.loc 1 327 0
 209 0002 041C     		mov	r4, r0
 330:Generated_Source\PSoC4/TIMER.c **** 
 210              		.loc 1 330 0
 211 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 212              	.LVL11:
 332:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= qdMode;
 213              		.loc 1 332 0
 214 0008 054B     		ldr	r3, .L11
 215 000a 064A     		ldr	r2, .L11+4
 216 000c 1968     		ldr	r1, [r3]
 336:Generated_Source\PSoC4/TIMER.c **** 
 217              		.loc 1 336 0
 218              		@ sp needed
 332:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= qdMode;
 219              		.loc 1 332 0
 220 000e 0A40     		and	r2, r1
 221 0010 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/TIMER.c **** 
 222              		.loc 1 333 0
 223 0012 1A68     		ldr	r2, [r3]
 224 0014 2243     		orr	r2, r4
 225 0016 1A60     		str	r2, [r3]
 335:Generated_Source\PSoC4/TIMER.c **** }
 226              		.loc 1 335 0
 227 0018 FFF7FEFF 		bl	CyExitCriticalSection
 228              	.LVL12:
 229              	.LVL13:
 336:Generated_Source\PSoC4/TIMER.c **** 
 230              		.loc 1 336 0
 231 001c 10BD     		pop	{r4, pc}
 232              	.L12:
 233 001e C046     		.align	2
 234              	.L11:
 235 0020 00012040 		.word	1075839232
 236 0024 FFFF8FFF 		.word	-7340033
 237              		.cfi_endproc
 238              	.LFE7:
 239              		.size	TIMER_SetQDMode, .-TIMER_SetQDMode
 240              		.section	.text.TIMER_SetPrescaler,"ax",%progbits
 241              		.align	1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 29


 242              		.global	TIMER_SetPrescaler
 243              		.code	16
 244              		.thumb_func
 245              		.type	TIMER_SetPrescaler, %function
 246              	TIMER_SetPrescaler:
 247              	.LFB8:
 364:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 248              		.loc 1 364 0
 249              		.cfi_startproc
 250              	.LVL14:
 251 0000 10B5     		push	{r4, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 364:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 255              		.loc 1 364 0
 256 0002 041C     		mov	r4, r0
 367:Generated_Source\PSoC4/TIMER.c **** 
 257              		.loc 1 367 0
 258 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 259              	.LVL15:
 369:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= prescaler;
 260              		.loc 1 369 0
 261 0008 054B     		ldr	r3, .L14
 262 000a 064A     		ldr	r2, .L14+4
 263 000c 1968     		ldr	r1, [r3]
 373:Generated_Source\PSoC4/TIMER.c **** 
 264              		.loc 1 373 0
 265              		@ sp needed
 369:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= prescaler;
 266              		.loc 1 369 0
 267 000e 0A40     		and	r2, r1
 268 0010 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/TIMER.c **** 
 269              		.loc 1 370 0
 270 0012 1A68     		ldr	r2, [r3]
 271 0014 2243     		orr	r2, r4
 272 0016 1A60     		str	r2, [r3]
 372:Generated_Source\PSoC4/TIMER.c **** }
 273              		.loc 1 372 0
 274 0018 FFF7FEFF 		bl	CyExitCriticalSection
 275              	.LVL16:
 276              	.LVL17:
 373:Generated_Source\PSoC4/TIMER.c **** 
 277              		.loc 1 373 0
 278 001c 10BD     		pop	{r4, pc}
 279              	.L15:
 280 001e C046     		.align	2
 281              	.L14:
 282 0020 00012040 		.word	1075839232
 283 0024 FF00FFFF 		.word	-65281
 284              		.cfi_endproc
 285              	.LFE8:
 286              		.size	TIMER_SetPrescaler, .-TIMER_SetPrescaler
 287              		.section	.text.TIMER_SetOneShot,"ax",%progbits
 288              		.align	1
 289              		.global	TIMER_SetOneShot
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 30


 290              		.code	16
 291              		.thumb_func
 292              		.type	TIMER_SetOneShot, %function
 293              	TIMER_SetOneShot:
 294              	.LFB9:
 396:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 295              		.loc 1 396 0
 296              		.cfi_startproc
 297              	.LVL18:
 298 0000 10B5     		push	{r4, lr}
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 4, -8
 301              		.cfi_offset 14, -4
 396:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 302              		.loc 1 396 0
 303 0002 041C     		mov	r4, r0
 399:Generated_Source\PSoC4/TIMER.c **** 
 304              		.loc 1 399 0
 305 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 306              	.LVL19:
 401:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((oneShotEnable & TIMER_1BIT_MASK) <<
 307              		.loc 1 401 0
 308 0008 064A     		ldr	r2, .L17
 309 000a 074B     		ldr	r3, .L17+4
 310 000c 1168     		ldr	r1, [r2]
 406:Generated_Source\PSoC4/TIMER.c **** 
 311              		.loc 1 406 0
 312              		@ sp needed
 401:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((oneShotEnable & TIMER_1BIT_MASK) <<
 313              		.loc 1 401 0
 314 000e 0B40     		and	r3, r1
 315 0010 1360     		str	r3, [r2]
 402:Generated_Source\PSoC4/TIMER.c ****                                                                TIMER_ONESHOT_SHIFT));
 316              		.loc 1 402 0
 317 0012 0123     		mov	r3, #1
 318 0014 1168     		ldr	r1, [r2]
 319 0016 2340     		and	r3, r4
 320 0018 9B04     		lsl	r3, r3, #18
 321 001a 0B43     		orr	r3, r1
 322 001c 1360     		str	r3, [r2]
 405:Generated_Source\PSoC4/TIMER.c **** }
 323              		.loc 1 405 0
 324 001e FFF7FEFF 		bl	CyExitCriticalSection
 325              	.LVL20:
 326              	.LVL21:
 406:Generated_Source\PSoC4/TIMER.c **** 
 327              		.loc 1 406 0
 328 0022 10BD     		pop	{r4, pc}
 329              	.L18:
 330              		.align	2
 331              	.L17:
 332 0024 00012040 		.word	1075839232
 333 0028 FFFFFBFF 		.word	-262145
 334              		.cfi_endproc
 335              	.LFE9:
 336              		.size	TIMER_SetOneShot, .-TIMER_SetOneShot
 337              		.section	.text.TIMER_SetPWMMode,"ax",%progbits
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 31


 338              		.align	1
 339              		.global	TIMER_SetPWMMode
 340              		.code	16
 341              		.thumb_func
 342              		.type	TIMER_SetPWMMode, %function
 343              	TIMER_SetPWMMode:
 344              	.LFB10:
 450:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL2_REG = (modeMask & TIMER_6BIT_MASK);
 345              		.loc 1 450 0
 346              		.cfi_startproc
 347              	.LVL22:
 451:Generated_Source\PSoC4/TIMER.c **** }
 348              		.loc 1 451 0
 349 0000 3F23     		mov	r3, #63
 350 0002 1840     		and	r0, r3
 351              	.LVL23:
 352 0004 014B     		ldr	r3, .L20
 452:Generated_Source\PSoC4/TIMER.c **** 
 353              		.loc 1 452 0
 354              		@ sp needed
 451:Generated_Source\PSoC4/TIMER.c **** }
 355              		.loc 1 451 0
 356 0006 1860     		str	r0, [r3]
 452:Generated_Source\PSoC4/TIMER.c **** 
 357              		.loc 1 452 0
 358 0008 7047     		bx	lr
 359              	.L21:
 360 000a C046     		.align	2
 361              	.L20:
 362 000c 28012040 		.word	1075839272
 363              		.cfi_endproc
 364              	.LFE10:
 365              		.size	TIMER_SetPWMMode, .-TIMER_SetPWMMode
 366              		.section	.text.TIMER_SetPWMSyncKill,"ax",%progbits
 367              		.align	1
 368              		.global	TIMER_SetPWMSyncKill
 369              		.code	16
 370              		.thumb_func
 371              		.type	TIMER_SetPWMSyncKill, %function
 372              	TIMER_SetPWMSyncKill:
 373              	.LFB11:
 486:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 374              		.loc 1 486 0
 375              		.cfi_startproc
 376              	.LVL24:
 377 0000 10B5     		push	{r4, lr}
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 4, -8
 380              		.cfi_offset 14, -4
 486:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 381              		.loc 1 486 0
 382 0002 041C     		mov	r4, r0
 489:Generated_Source\PSoC4/TIMER.c **** 
 383              		.loc 1 489 0
 384 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 385              	.LVL25:
 491:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((syncKillEnable & TIMER_1BIT_MASK)  <<
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 32


 386              		.loc 1 491 0
 387 0008 0421     		mov	r1, #4
 388 000a 064A     		ldr	r2, .L23
 496:Generated_Source\PSoC4/TIMER.c **** 
 389              		.loc 1 496 0
 390              		@ sp needed
 491:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((syncKillEnable & TIMER_1BIT_MASK)  <<
 391              		.loc 1 491 0
 392 000c 1368     		ldr	r3, [r2]
 393 000e 8B43     		bic	r3, r1
 394 0010 1360     		str	r3, [r2]
 492:Generated_Source\PSoC4/TIMER.c ****                                                TIMER_PWM_SYNC_KILL_SHIFT));
 395              		.loc 1 492 0
 396 0012 0123     		mov	r3, #1
 397 0014 1168     		ldr	r1, [r2]
 398 0016 2340     		and	r3, r4
 399 0018 9B00     		lsl	r3, r3, #2
 400 001a 0B43     		orr	r3, r1
 401 001c 1360     		str	r3, [r2]
 495:Generated_Source\PSoC4/TIMER.c **** }
 402              		.loc 1 495 0
 403 001e FFF7FEFF 		bl	CyExitCriticalSection
 404              	.LVL26:
 405              	.LVL27:
 496:Generated_Source\PSoC4/TIMER.c **** 
 406              		.loc 1 496 0
 407 0022 10BD     		pop	{r4, pc}
 408              	.L24:
 409              		.align	2
 410              	.L23:
 411 0024 00012040 		.word	1075839232
 412              		.cfi_endproc
 413              	.LFE11:
 414              		.size	TIMER_SetPWMSyncKill, .-TIMER_SetPWMSyncKill
 415              		.section	.text.TIMER_SetPWMStopOnKill,"ax",%progbits
 416              		.align	1
 417              		.global	TIMER_SetPWMStopOnKill
 418              		.code	16
 419              		.thumb_func
 420              		.type	TIMER_SetPWMStopOnKill, %function
 421              	TIMER_SetPWMStopOnKill:
 422              	.LFB12:
 520:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 423              		.loc 1 520 0
 424              		.cfi_startproc
 425              	.LVL28:
 426 0000 10B5     		push	{r4, lr}
 427              		.cfi_def_cfa_offset 8
 428              		.cfi_offset 4, -8
 429              		.cfi_offset 14, -4
 520:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 430              		.loc 1 520 0
 431 0002 041C     		mov	r4, r0
 523:Generated_Source\PSoC4/TIMER.c **** 
 432              		.loc 1 523 0
 433 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 434              	.LVL29:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 33


 525:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((stopOnKillEnable & TIMER_1BIT_MASK)  <<
 435              		.loc 1 525 0
 436 0008 0821     		mov	r1, #8
 437 000a 064A     		ldr	r2, .L26
 530:Generated_Source\PSoC4/TIMER.c **** 
 438              		.loc 1 530 0
 439              		@ sp needed
 525:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((stopOnKillEnable & TIMER_1BIT_MASK)  <<
 440              		.loc 1 525 0
 441 000c 1368     		ldr	r3, [r2]
 442 000e 8B43     		bic	r3, r1
 443 0010 1360     		str	r3, [r2]
 526:Generated_Source\PSoC4/TIMER.c ****                                                          TIMER_PWM_STOP_KILL_SHIFT));
 444              		.loc 1 526 0
 445 0012 0123     		mov	r3, #1
 446 0014 1168     		ldr	r1, [r2]
 447 0016 2340     		and	r3, r4
 448 0018 DB00     		lsl	r3, r3, #3
 449 001a 0B43     		orr	r3, r1
 450 001c 1360     		str	r3, [r2]
 529:Generated_Source\PSoC4/TIMER.c **** }
 451              		.loc 1 529 0
 452 001e FFF7FEFF 		bl	CyExitCriticalSection
 453              	.LVL30:
 454              	.LVL31:
 530:Generated_Source\PSoC4/TIMER.c **** 
 455              		.loc 1 530 0
 456 0022 10BD     		pop	{r4, pc}
 457              	.L27:
 458              		.align	2
 459              	.L26:
 460 0024 00012040 		.word	1075839232
 461              		.cfi_endproc
 462              	.LFE12:
 463              		.size	TIMER_SetPWMStopOnKill, .-TIMER_SetPWMStopOnKill
 464              		.section	.text.TIMER_SetPWMDeadTime,"ax",%progbits
 465              		.align	1
 466              		.global	TIMER_SetPWMDeadTime
 467              		.code	16
 468              		.thumb_func
 469              		.type	TIMER_SetPWMDeadTime, %function
 470              	TIMER_SetPWMDeadTime:
 471              	.LFB13:
 553:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 472              		.loc 1 553 0
 473              		.cfi_startproc
 474              	.LVL32:
 475 0000 10B5     		push	{r4, lr}
 476              		.cfi_def_cfa_offset 8
 477              		.cfi_offset 4, -8
 478              		.cfi_offset 14, -4
 553:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 479              		.loc 1 553 0
 480 0002 041C     		mov	r4, r0
 556:Generated_Source\PSoC4/TIMER.c **** 
 481              		.loc 1 556 0
 482 0004 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 34


 483              	.LVL33:
 558:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((deadTime & TIMER_8BIT_MASK) <<
 484              		.loc 1 558 0
 485 0008 064B     		ldr	r3, .L29
 486 000a 074A     		ldr	r2, .L29+4
 487 000c 1968     		ldr	r1, [r3]
 559:Generated_Source\PSoC4/TIMER.c ****                                                           TIMER_PRESCALER_SHIFT));
 488              		.loc 1 559 0
 489 000e 2406     		lsl	r4, r4, #24
 490              	.LVL34:
 558:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((deadTime & TIMER_8BIT_MASK) <<
 491              		.loc 1 558 0
 492 0010 0A40     		and	r2, r1
 493 0012 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/TIMER.c ****                                                           TIMER_PRESCALER_SHIFT));
 494              		.loc 1 559 0
 495 0014 1A68     		ldr	r2, [r3]
 496 0016 240C     		lsr	r4, r4, #16
 497 0018 1443     		orr	r4, r2
 498 001a 1C60     		str	r4, [r3]
 562:Generated_Source\PSoC4/TIMER.c **** }
 499              		.loc 1 562 0
 500 001c FFF7FEFF 		bl	CyExitCriticalSection
 501              	.LVL35:
 563:Generated_Source\PSoC4/TIMER.c **** 
 502              		.loc 1 563 0
 503              		@ sp needed
 504 0020 10BD     		pop	{r4, pc}
 505              	.L30:
 506 0022 C046     		.align	2
 507              	.L29:
 508 0024 00012040 		.word	1075839232
 509 0028 FF00FFFF 		.word	-65281
 510              		.cfi_endproc
 511              	.LFE13:
 512              		.size	TIMER_SetPWMDeadTime, .-TIMER_SetPWMDeadTime
 513              		.section	.text.TIMER_SetPWMInvert,"ax",%progbits
 514              		.align	1
 515              		.global	TIMER_SetPWMInvert
 516              		.code	16
 517              		.thumb_func
 518              		.type	TIMER_SetPWMInvert, %function
 519              	TIMER_SetPWMInvert:
 520              	.LFB14:
 586:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 521              		.loc 1 586 0
 522              		.cfi_startproc
 523              	.LVL36:
 524 0000 10B5     		push	{r4, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 4, -8
 527              		.cfi_offset 14, -4
 586:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 528              		.loc 1 586 0
 529 0002 041C     		mov	r4, r0
 589:Generated_Source\PSoC4/TIMER.c **** 
 530              		.loc 1 589 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 35


 531 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 532              	.LVL37:
 591:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= mask;
 533              		.loc 1 591 0
 534 0008 054B     		ldr	r3, .L32
 535 000a 064A     		ldr	r2, .L32+4
 536 000c 1968     		ldr	r1, [r3]
 595:Generated_Source\PSoC4/TIMER.c **** 
 537              		.loc 1 595 0
 538              		@ sp needed
 591:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= mask;
 539              		.loc 1 591 0
 540 000e 0A40     		and	r2, r1
 541 0010 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/TIMER.c **** 
 542              		.loc 1 592 0
 543 0012 1A68     		ldr	r2, [r3]
 544 0014 2243     		orr	r2, r4
 545 0016 1A60     		str	r2, [r3]
 594:Generated_Source\PSoC4/TIMER.c **** }
 546              		.loc 1 594 0
 547 0018 FFF7FEFF 		bl	CyExitCriticalSection
 548              	.LVL38:
 549              	.LVL39:
 595:Generated_Source\PSoC4/TIMER.c **** 
 550              		.loc 1 595 0
 551 001c 10BD     		pop	{r4, pc}
 552              	.L33:
 553 001e C046     		.align	2
 554              	.L32:
 555 0020 00012040 		.word	1075839232
 556 0024 FFFFCFFF 		.word	-3145729
 557              		.cfi_endproc
 558              	.LFE14:
 559              		.size	TIMER_SetPWMInvert, .-TIMER_SetPWMInvert
 560              		.section	.text.TIMER_WriteCounter,"ax",%progbits
 561              		.align	1
 562              		.global	TIMER_WriteCounter
 563              		.code	16
 564              		.thumb_func
 565              		.type	TIMER_WriteCounter, %function
 566              	TIMER_WriteCounter:
 567              	.LFB15:
 616:Generated_Source\PSoC4/TIMER.c ****     TIMER_COUNTER_REG = (count & TIMER_16BIT_MASK);
 568              		.loc 1 616 0
 569              		.cfi_startproc
 570              	.LVL40:
 617:Generated_Source\PSoC4/TIMER.c **** }
 571              		.loc 1 617 0
 572 0000 014B     		ldr	r3, .L35
 573 0002 80B2     		uxth	r0, r0
 574              	.LVL41:
 575 0004 1860     		str	r0, [r3]
 618:Generated_Source\PSoC4/TIMER.c **** 
 576              		.loc 1 618 0
 577              		@ sp needed
 578 0006 7047     		bx	lr
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 36


 579              	.L36:
 580              		.align	2
 581              	.L35:
 582 0008 08012040 		.word	1075839240
 583              		.cfi_endproc
 584              	.LFE15:
 585              		.size	TIMER_WriteCounter, .-TIMER_WriteCounter
 586              		.section	.text.TIMER_ReadCounter,"ax",%progbits
 587              		.align	1
 588              		.global	TIMER_ReadCounter
 589              		.code	16
 590              		.thumb_func
 591              		.type	TIMER_ReadCounter, %function
 592              	TIMER_ReadCounter:
 593              	.LFB16:
 636:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_COUNTER_REG & TIMER_16BIT_MASK);
 594              		.loc 1 636 0
 595              		.cfi_startproc
 637:Generated_Source\PSoC4/TIMER.c **** }
 596              		.loc 1 637 0
 597 0000 014B     		ldr	r3, .L38
 638:Generated_Source\PSoC4/TIMER.c **** 
 598              		.loc 1 638 0
 599              		@ sp needed
 637:Generated_Source\PSoC4/TIMER.c **** }
 600              		.loc 1 637 0
 601 0002 1868     		ldr	r0, [r3]
 602 0004 80B2     		uxth	r0, r0
 638:Generated_Source\PSoC4/TIMER.c **** 
 603              		.loc 1 638 0
 604 0006 7047     		bx	lr
 605              	.L39:
 606              		.align	2
 607              	.L38:
 608 0008 08012040 		.word	1075839240
 609              		.cfi_endproc
 610              	.LFE16:
 611              		.size	TIMER_ReadCounter, .-TIMER_ReadCounter
 612              		.section	.text.TIMER_SetCounterMode,"ax",%progbits
 613              		.align	1
 614              		.global	TIMER_SetCounterMode
 615              		.code	16
 616              		.thumb_func
 617              		.type	TIMER_SetCounterMode, %function
 618              	TIMER_SetCounterMode:
 619              	.LFB17:
 665:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 620              		.loc 1 665 0
 621              		.cfi_startproc
 622              	.LVL42:
 623 0000 10B5     		push	{r4, lr}
 624              		.cfi_def_cfa_offset 8
 625              		.cfi_offset 4, -8
 626              		.cfi_offset 14, -4
 665:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 627              		.loc 1 665 0
 628 0002 041C     		mov	r4, r0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 37


 668:Generated_Source\PSoC4/TIMER.c **** 
 629              		.loc 1 668 0
 630 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 631              	.LVL43:
 670:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= counterMode;
 632              		.loc 1 670 0
 633 0008 054B     		ldr	r3, .L41
 634 000a 064A     		ldr	r2, .L41+4
 635 000c 1968     		ldr	r1, [r3]
 674:Generated_Source\PSoC4/TIMER.c **** 
 636              		.loc 1 674 0
 637              		@ sp needed
 670:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= counterMode;
 638              		.loc 1 670 0
 639 000e 0A40     		and	r2, r1
 640 0010 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/TIMER.c **** 
 641              		.loc 1 671 0
 642 0012 1A68     		ldr	r2, [r3]
 643 0014 2243     		orr	r2, r4
 644 0016 1A60     		str	r2, [r3]
 673:Generated_Source\PSoC4/TIMER.c **** }
 645              		.loc 1 673 0
 646 0018 FFF7FEFF 		bl	CyExitCriticalSection
 647              	.LVL44:
 648              	.LVL45:
 674:Generated_Source\PSoC4/TIMER.c **** 
 649              		.loc 1 674 0
 650 001c 10BD     		pop	{r4, pc}
 651              	.L42:
 652 001e C046     		.align	2
 653              	.L41:
 654 0020 00012040 		.word	1075839232
 655 0024 FFFFFCFF 		.word	-196609
 656              		.cfi_endproc
 657              	.LFE17:
 658              		.size	TIMER_SetCounterMode, .-TIMER_SetCounterMode
 659              		.section	.text.TIMER_WritePeriod,"ax",%progbits
 660              		.align	1
 661              		.global	TIMER_WritePeriod
 662              		.code	16
 663              		.thumb_func
 664              		.type	TIMER_WritePeriod, %function
 665              	TIMER_WritePeriod:
 666              	.LFB18:
 694:Generated_Source\PSoC4/TIMER.c ****     TIMER_PERIOD_REG = (period & TIMER_16BIT_MASK);
 667              		.loc 1 694 0
 668              		.cfi_startproc
 669              	.LVL46:
 695:Generated_Source\PSoC4/TIMER.c **** }
 670              		.loc 1 695 0
 671 0000 014B     		ldr	r3, .L44
 672 0002 80B2     		uxth	r0, r0
 673              	.LVL47:
 674 0004 1860     		str	r0, [r3]
 696:Generated_Source\PSoC4/TIMER.c **** 
 675              		.loc 1 696 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 38


 676              		@ sp needed
 677 0006 7047     		bx	lr
 678              	.L45:
 679              		.align	2
 680              	.L44:
 681 0008 14012040 		.word	1075839252
 682              		.cfi_endproc
 683              	.LFE18:
 684              		.size	TIMER_WritePeriod, .-TIMER_WritePeriod
 685              		.section	.text.TIMER_ReadPeriod,"ax",%progbits
 686              		.align	1
 687              		.global	TIMER_ReadPeriod
 688              		.code	16
 689              		.thumb_func
 690              		.type	TIMER_ReadPeriod, %function
 691              	TIMER_ReadPeriod:
 692              	.LFB19:
 714:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_PERIOD_REG & TIMER_16BIT_MASK);
 693              		.loc 1 714 0
 694              		.cfi_startproc
 715:Generated_Source\PSoC4/TIMER.c **** }
 695              		.loc 1 715 0
 696 0000 014B     		ldr	r3, .L47
 716:Generated_Source\PSoC4/TIMER.c **** 
 697              		.loc 1 716 0
 698              		@ sp needed
 715:Generated_Source\PSoC4/TIMER.c **** }
 699              		.loc 1 715 0
 700 0002 1868     		ldr	r0, [r3]
 701 0004 80B2     		uxth	r0, r0
 716:Generated_Source\PSoC4/TIMER.c **** 
 702              		.loc 1 716 0
 703 0006 7047     		bx	lr
 704              	.L48:
 705              		.align	2
 706              	.L47:
 707 0008 14012040 		.word	1075839252
 708              		.cfi_endproc
 709              	.LFE19:
 710              		.size	TIMER_ReadPeriod, .-TIMER_ReadPeriod
 711              		.section	.text.TIMER_SetCompareSwap,"ax",%progbits
 712              		.align	1
 713              		.global	TIMER_SetCompareSwap
 714              		.code	16
 715              		.thumb_func
 716              		.type	TIMER_SetCompareSwap, %function
 717              	TIMER_SetCompareSwap:
 718              	.LFB20:
 740:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 719              		.loc 1 740 0
 720              		.cfi_startproc
 721              	.LVL48:
 722 0000 10B5     		push	{r4, lr}
 723              		.cfi_def_cfa_offset 8
 724              		.cfi_offset 4, -8
 725              		.cfi_offset 14, -4
 740:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 39


 726              		.loc 1 740 0
 727 0002 041C     		mov	r4, r0
 743:Generated_Source\PSoC4/TIMER.c **** 
 728              		.loc 1 743 0
 729 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 730              	.LVL49:
 745:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= (swapEnable & TIMER_1BIT_MASK);
 731              		.loc 1 745 0
 732 0008 0122     		mov	r2, #1
 733 000a 054B     		ldr	r3, .L50
 749:Generated_Source\PSoC4/TIMER.c **** 
 734              		.loc 1 749 0
 735              		@ sp needed
 745:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= (swapEnable & TIMER_1BIT_MASK);
 736              		.loc 1 745 0
 737 000c 1968     		ldr	r1, [r3]
 738 000e 9143     		bic	r1, r2
 739 0010 1960     		str	r1, [r3]
 746:Generated_Source\PSoC4/TIMER.c **** 
 740              		.loc 1 746 0
 741 0012 1968     		ldr	r1, [r3]
 742 0014 2240     		and	r2, r4
 743 0016 0A43     		orr	r2, r1
 744 0018 1A60     		str	r2, [r3]
 748:Generated_Source\PSoC4/TIMER.c **** }
 745              		.loc 1 748 0
 746 001a FFF7FEFF 		bl	CyExitCriticalSection
 747              	.LVL50:
 748              	.LVL51:
 749:Generated_Source\PSoC4/TIMER.c **** 
 749              		.loc 1 749 0
 750 001e 10BD     		pop	{r4, pc}
 751              	.L51:
 752              		.align	2
 753              	.L50:
 754 0020 00012040 		.word	1075839232
 755              		.cfi_endproc
 756              	.LFE20:
 757              		.size	TIMER_SetCompareSwap, .-TIMER_SetCompareSwap
 758              		.section	.text.TIMER_WritePeriodBuf,"ax",%progbits
 759              		.align	1
 760              		.global	TIMER_WritePeriodBuf
 761              		.code	16
 762              		.thumb_func
 763              		.type	TIMER_WritePeriodBuf, %function
 764              	TIMER_WritePeriodBuf:
 765              	.LFB21:
 767:Generated_Source\PSoC4/TIMER.c ****     TIMER_PERIOD_BUF_REG = (periodBuf & TIMER_16BIT_MASK);
 766              		.loc 1 767 0
 767              		.cfi_startproc
 768              	.LVL52:
 768:Generated_Source\PSoC4/TIMER.c **** }
 769              		.loc 1 768 0
 770 0000 014B     		ldr	r3, .L53
 771 0002 80B2     		uxth	r0, r0
 772              	.LVL53:
 773 0004 1860     		str	r0, [r3]
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 40


 769:Generated_Source\PSoC4/TIMER.c **** 
 774              		.loc 1 769 0
 775              		@ sp needed
 776 0006 7047     		bx	lr
 777              	.L54:
 778              		.align	2
 779              	.L53:
 780 0008 18012040 		.word	1075839256
 781              		.cfi_endproc
 782              	.LFE21:
 783              		.size	TIMER_WritePeriodBuf, .-TIMER_WritePeriodBuf
 784              		.section	.text.TIMER_ReadPeriodBuf,"ax",%progbits
 785              		.align	1
 786              		.global	TIMER_ReadPeriodBuf
 787              		.code	16
 788              		.thumb_func
 789              		.type	TIMER_ReadPeriodBuf, %function
 790              	TIMER_ReadPeriodBuf:
 791              	.LFB22:
 787:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_PERIOD_BUF_REG & TIMER_16BIT_MASK);
 792              		.loc 1 787 0
 793              		.cfi_startproc
 788:Generated_Source\PSoC4/TIMER.c **** }
 794              		.loc 1 788 0
 795 0000 014B     		ldr	r3, .L56
 789:Generated_Source\PSoC4/TIMER.c **** 
 796              		.loc 1 789 0
 797              		@ sp needed
 788:Generated_Source\PSoC4/TIMER.c **** }
 798              		.loc 1 788 0
 799 0002 1868     		ldr	r0, [r3]
 800 0004 80B2     		uxth	r0, r0
 789:Generated_Source\PSoC4/TIMER.c **** 
 801              		.loc 1 789 0
 802 0006 7047     		bx	lr
 803              	.L57:
 804              		.align	2
 805              	.L56:
 806 0008 18012040 		.word	1075839256
 807              		.cfi_endproc
 808              	.LFE22:
 809              		.size	TIMER_ReadPeriodBuf, .-TIMER_ReadPeriodBuf
 810              		.section	.text.TIMER_SetPeriodSwap,"ax",%progbits
 811              		.align	1
 812              		.global	TIMER_SetPeriodSwap
 813              		.code	16
 814              		.thumb_func
 815              		.type	TIMER_SetPeriodSwap, %function
 816              	TIMER_SetPeriodSwap:
 817              	.LFB23:
 813:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 818              		.loc 1 813 0
 819              		.cfi_startproc
 820              	.LVL54:
 821 0000 10B5     		push	{r4, lr}
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 4, -8
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 41


 824              		.cfi_offset 14, -4
 813:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 825              		.loc 1 813 0
 826 0002 041C     		mov	r4, r0
 816:Generated_Source\PSoC4/TIMER.c **** 
 827              		.loc 1 816 0
 828 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 829              	.LVL55:
 818:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((swapEnable & TIMER_1BIT_MASK) <<
 830              		.loc 1 818 0
 831 0008 0221     		mov	r1, #2
 832 000a 064A     		ldr	r2, .L59
 823:Generated_Source\PSoC4/TIMER.c **** 
 833              		.loc 1 823 0
 834              		@ sp needed
 818:Generated_Source\PSoC4/TIMER.c ****     TIMER_CONTROL_REG |= ((uint32)((swapEnable & TIMER_1BIT_MASK) <<
 835              		.loc 1 818 0
 836 000c 1368     		ldr	r3, [r2]
 837 000e 8B43     		bic	r3, r1
 838 0010 1360     		str	r3, [r2]
 819:Generated_Source\PSoC4/TIMER.c ****                                                             TIMER_RELOAD_PERIOD_SHIFT));
 839              		.loc 1 819 0
 840 0012 0123     		mov	r3, #1
 841 0014 1168     		ldr	r1, [r2]
 842 0016 2340     		and	r3, r4
 843 0018 5B00     		lsl	r3, r3, #1
 844 001a 0B43     		orr	r3, r1
 845 001c 1360     		str	r3, [r2]
 822:Generated_Source\PSoC4/TIMER.c **** }
 846              		.loc 1 822 0
 847 001e FFF7FEFF 		bl	CyExitCriticalSection
 848              	.LVL56:
 849              	.LVL57:
 823:Generated_Source\PSoC4/TIMER.c **** 
 850              		.loc 1 823 0
 851 0022 10BD     		pop	{r4, pc}
 852              	.L60:
 853              		.align	2
 854              	.L59:
 855 0024 00012040 		.word	1075839232
 856              		.cfi_endproc
 857              	.LFE23:
 858              		.size	TIMER_SetPeriodSwap, .-TIMER_SetPeriodSwap
 859              		.section	.text.TIMER_WriteCompare,"ax",%progbits
 860              		.align	1
 861              		.global	TIMER_WriteCompare
 862              		.code	16
 863              		.thumb_func
 864              		.type	TIMER_WriteCompare, %function
 865              	TIMER_WriteCompare:
 866              	.LFB24:
 850:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 867              		.loc 1 850 0
 868              		.cfi_startproc
 869              	.LVL58:
 873:Generated_Source\PSoC4/TIMER.c **** }
 870              		.loc 1 873 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 42


 871 0000 014B     		ldr	r3, .L62
 872 0002 80B2     		uxth	r0, r0
 873              	.LVL59:
 874 0004 1860     		str	r0, [r3]
 874:Generated_Source\PSoC4/TIMER.c **** 
 875              		.loc 1 874 0
 876              		@ sp needed
 877 0006 7047     		bx	lr
 878              	.L63:
 879              		.align	2
 880              	.L62:
 881 0008 0C012040 		.word	1075839244
 882              		.cfi_endproc
 883              	.LFE24:
 884              		.size	TIMER_WriteCompare, .-TIMER_WriteCompare
 885              		.section	.text.TIMER_ReadCompare,"ax",%progbits
 886              		.align	1
 887              		.global	TIMER_ReadCompare
 888              		.code	16
 889              		.thumb_func
 890              		.type	TIMER_ReadCompare, %function
 891              	TIMER_ReadCompare:
 892              	.LFB25:
 901:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 893              		.loc 1 901 0
 894              		.cfi_startproc
 926:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 895              		.loc 1 926 0
 896 0000 014B     		ldr	r3, .L65
 928:Generated_Source\PSoC4/TIMER.c **** 
 897              		.loc 1 928 0
 898              		@ sp needed
 926:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 899              		.loc 1 926 0
 900 0002 1868     		ldr	r0, [r3]
 901 0004 80B2     		uxth	r0, r0
 928:Generated_Source\PSoC4/TIMER.c **** 
 902              		.loc 1 928 0
 903 0006 7047     		bx	lr
 904              	.L66:
 905              		.align	2
 906              	.L65:
 907 0008 0C012040 		.word	1075839244
 908              		.cfi_endproc
 909              	.LFE25:
 910              		.size	TIMER_ReadCompare, .-TIMER_ReadCompare
 911              		.section	.text.TIMER_WriteCompareBuf,"ax",%progbits
 912              		.align	1
 913              		.global	TIMER_WriteCompareBuf
 914              		.code	16
 915              		.thumb_func
 916              		.type	TIMER_WriteCompareBuf, %function
 917              	TIMER_WriteCompareBuf:
 918              	.LFB26:
 955:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 919              		.loc 1 955 0
 920              		.cfi_startproc
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 43


 921              	.LVL60:
 976:Generated_Source\PSoC4/TIMER.c **** }
 922              		.loc 1 976 0
 923 0000 014B     		ldr	r3, .L68
 924 0002 80B2     		uxth	r0, r0
 925              	.LVL61:
 926 0004 1860     		str	r0, [r3]
 977:Generated_Source\PSoC4/TIMER.c **** 
 927              		.loc 1 977 0
 928              		@ sp needed
 929 0006 7047     		bx	lr
 930              	.L69:
 931              		.align	2
 932              	.L68:
 933 0008 10012040 		.word	1075839248
 934              		.cfi_endproc
 935              	.LFE26:
 936              		.size	TIMER_WriteCompareBuf, .-TIMER_WriteCompareBuf
 937              		.section	.text.TIMER_ReadCompareBuf,"ax",%progbits
 938              		.align	1
 939              		.global	TIMER_ReadCompareBuf
 940              		.code	16
 941              		.thumb_func
 942              		.type	TIMER_ReadCompareBuf, %function
 943              	TIMER_ReadCompareBuf:
 944              	.LFB27:
1001:Generated_Source\PSoC4/TIMER.c ****     #if (TIMER_CY_TCPWM_4000)
 945              		.loc 1 1001 0
 946              		.cfi_startproc
1026:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 947              		.loc 1 1026 0
 948 0000 014B     		ldr	r3, .L71
1028:Generated_Source\PSoC4/TIMER.c **** 
 949              		.loc 1 1028 0
 950              		@ sp needed
1026:Generated_Source\PSoC4/TIMER.c ****     #endif /* (TIMER_CY_TCPWM_4000) */
 951              		.loc 1 1026 0
 952 0002 1868     		ldr	r0, [r3]
 953 0004 80B2     		uxth	r0, r0
1028:Generated_Source\PSoC4/TIMER.c **** 
 954              		.loc 1 1028 0
 955 0006 7047     		bx	lr
 956              	.L72:
 957              		.align	2
 958              	.L71:
 959 0008 10012040 		.word	1075839248
 960              		.cfi_endproc
 961              	.LFE27:
 962              		.size	TIMER_ReadCompareBuf, .-TIMER_ReadCompareBuf
 963              		.section	.text.TIMER_ReadCapture,"ax",%progbits
 964              		.align	1
 965              		.global	TIMER_ReadCapture
 966              		.code	16
 967              		.thumb_func
 968              		.type	TIMER_ReadCapture, %function
 969              	TIMER_ReadCapture:
 970              	.LFB28:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 44


1047:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_COMP_CAP_REG & TIMER_16BIT_MASK);
 971              		.loc 1 1047 0
 972              		.cfi_startproc
1048:Generated_Source\PSoC4/TIMER.c **** }
 973              		.loc 1 1048 0
 974 0000 014B     		ldr	r3, .L74
1049:Generated_Source\PSoC4/TIMER.c **** 
 975              		.loc 1 1049 0
 976              		@ sp needed
1048:Generated_Source\PSoC4/TIMER.c **** }
 977              		.loc 1 1048 0
 978 0002 1868     		ldr	r0, [r3]
 979 0004 80B2     		uxth	r0, r0
1049:Generated_Source\PSoC4/TIMER.c **** 
 980              		.loc 1 1049 0
 981 0006 7047     		bx	lr
 982              	.L75:
 983              		.align	2
 984              	.L74:
 985 0008 0C012040 		.word	1075839244
 986              		.cfi_endproc
 987              	.LFE28:
 988              		.size	TIMER_ReadCapture, .-TIMER_ReadCapture
 989              		.section	.text.TIMER_ReadCaptureBuf,"ax",%progbits
 990              		.align	1
 991              		.global	TIMER_ReadCaptureBuf
 992              		.code	16
 993              		.thumb_func
 994              		.type	TIMER_ReadCaptureBuf, %function
 995              	TIMER_ReadCaptureBuf:
 996              	.LFB29:
1068:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_COMP_CAP_BUF_REG & TIMER_16BIT_MASK);
 997              		.loc 1 1068 0
 998              		.cfi_startproc
1069:Generated_Source\PSoC4/TIMER.c **** }
 999              		.loc 1 1069 0
 1000 0000 014B     		ldr	r3, .L77
1070:Generated_Source\PSoC4/TIMER.c **** 
 1001              		.loc 1 1070 0
 1002              		@ sp needed
1069:Generated_Source\PSoC4/TIMER.c **** }
 1003              		.loc 1 1069 0
 1004 0002 1868     		ldr	r0, [r3]
 1005 0004 80B2     		uxth	r0, r0
1070:Generated_Source\PSoC4/TIMER.c **** 
 1006              		.loc 1 1070 0
 1007 0006 7047     		bx	lr
 1008              	.L78:
 1009              		.align	2
 1010              	.L77:
 1011 0008 10012040 		.word	1075839248
 1012              		.cfi_endproc
 1013              	.LFE29:
 1014              		.size	TIMER_ReadCaptureBuf, .-TIMER_ReadCaptureBuf
 1015              		.section	.text.TIMER_SetCaptureMode,"ax",%progbits
 1016              		.align	1
 1017              		.global	TIMER_SetCaptureMode
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 45


 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	TIMER_SetCaptureMode, %function
 1021              	TIMER_SetCaptureMode:
 1022              	.LFB30:
1095:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1023              		.loc 1 1095 0
 1024              		.cfi_startproc
 1025              	.LVL62:
 1026 0000 10B5     		push	{r4, lr}
 1027              		.cfi_def_cfa_offset 8
 1028              		.cfi_offset 4, -8
 1029              		.cfi_offset 14, -4
1095:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1030              		.loc 1 1095 0
 1031 0002 041C     		mov	r4, r0
1098:Generated_Source\PSoC4/TIMER.c **** 
 1032              		.loc 1 1098 0
 1033 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1034              	.LVL63:
1100:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= triggerMode;
 1035              		.loc 1 1100 0
 1036 0008 0321     		mov	r1, #3
 1037 000a 054B     		ldr	r3, .L80
1104:Generated_Source\PSoC4/TIMER.c **** 
 1038              		.loc 1 1104 0
 1039              		@ sp needed
1100:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= triggerMode;
 1040              		.loc 1 1100 0
 1041 000c 1A68     		ldr	r2, [r3]
 1042 000e 8A43     		bic	r2, r1
 1043 0010 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/TIMER.c **** 
 1044              		.loc 1 1101 0
 1045 0012 1A68     		ldr	r2, [r3]
 1046 0014 2243     		orr	r2, r4
 1047 0016 1A60     		str	r2, [r3]
1103:Generated_Source\PSoC4/TIMER.c **** }
 1048              		.loc 1 1103 0
 1049 0018 FFF7FEFF 		bl	CyExitCriticalSection
 1050              	.LVL64:
 1051              	.LVL65:
1104:Generated_Source\PSoC4/TIMER.c **** 
 1052              		.loc 1 1104 0
 1053 001c 10BD     		pop	{r4, pc}
 1054              	.L81:
 1055 001e C046     		.align	2
 1056              	.L80:
 1057 0020 24012040 		.word	1075839268
 1058              		.cfi_endproc
 1059              	.LFE30:
 1060              		.size	TIMER_SetCaptureMode, .-TIMER_SetCaptureMode
 1061              		.section	.text.TIMER_SetReloadMode,"ax",%progbits
 1062              		.align	1
 1063              		.global	TIMER_SetReloadMode
 1064              		.code	16
 1065              		.thumb_func
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 46


 1066              		.type	TIMER_SetReloadMode, %function
 1067              	TIMER_SetReloadMode:
 1068              	.LFB31:
1128:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1069              		.loc 1 1128 0
 1070              		.cfi_startproc
 1071              	.LVL66:
 1072 0000 10B5     		push	{r4, lr}
 1073              		.cfi_def_cfa_offset 8
 1074              		.cfi_offset 4, -8
 1075              		.cfi_offset 14, -4
1128:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1076              		.loc 1 1128 0
 1077 0002 041C     		mov	r4, r0
1131:Generated_Source\PSoC4/TIMER.c **** 
 1078              		.loc 1 1131 0
 1079 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1080              	.LVL67:
1133:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_RELOAD_SHIFT));
 1081              		.loc 1 1133 0
 1082 0008 3021     		mov	r1, #48
 1083 000a 054B     		ldr	r3, .L83
1137:Generated_Source\PSoC4/TIMER.c **** 
 1084              		.loc 1 1137 0
 1085              		@ sp needed
1133:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_RELOAD_SHIFT));
 1086              		.loc 1 1133 0
 1087 000c 1A68     		ldr	r2, [r3]
 1088 000e 8A43     		bic	r2, r1
 1089 0010 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/TIMER.c **** 
 1090              		.loc 1 1134 0
 1091 0012 1968     		ldr	r1, [r3]
 1092 0014 2201     		lsl	r2, r4, #4
 1093 0016 0A43     		orr	r2, r1
 1094 0018 1A60     		str	r2, [r3]
1136:Generated_Source\PSoC4/TIMER.c **** }
 1095              		.loc 1 1136 0
 1096 001a FFF7FEFF 		bl	CyExitCriticalSection
 1097              	.LVL68:
 1098              	.LVL69:
1137:Generated_Source\PSoC4/TIMER.c **** 
 1099              		.loc 1 1137 0
 1100 001e 10BD     		pop	{r4, pc}
 1101              	.L84:
 1102              		.align	2
 1103              	.L83:
 1104 0020 24012040 		.word	1075839268
 1105              		.cfi_endproc
 1106              	.LFE31:
 1107              		.size	TIMER_SetReloadMode, .-TIMER_SetReloadMode
 1108              		.section	.text.TIMER_SetStartMode,"ax",%progbits
 1109              		.align	1
 1110              		.global	TIMER_SetStartMode
 1111              		.code	16
 1112              		.thumb_func
 1113              		.type	TIMER_SetStartMode, %function
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 47


 1114              	TIMER_SetStartMode:
 1115              	.LFB32:
1161:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1116              		.loc 1 1161 0
 1117              		.cfi_startproc
 1118              	.LVL70:
 1119 0000 10B5     		push	{r4, lr}
 1120              		.cfi_def_cfa_offset 8
 1121              		.cfi_offset 4, -8
 1122              		.cfi_offset 14, -4
1161:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1123              		.loc 1 1161 0
 1124 0002 041C     		mov	r4, r0
1164:Generated_Source\PSoC4/TIMER.c **** 
 1125              		.loc 1 1164 0
 1126 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1127              	.LVL71:
1166:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_START_SHIFT));
 1128              		.loc 1 1166 0
 1129 0008 054B     		ldr	r3, .L86
 1130 000a 064A     		ldr	r2, .L86+4
 1131 000c 1968     		ldr	r1, [r3]
1170:Generated_Source\PSoC4/TIMER.c **** 
 1132              		.loc 1 1170 0
 1133              		@ sp needed
1166:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_START_SHIFT));
 1134              		.loc 1 1166 0
 1135 000e 0A40     		and	r2, r1
 1136 0010 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/TIMER.c **** 
 1137              		.loc 1 1167 0
 1138 0012 1968     		ldr	r1, [r3]
 1139 0014 2202     		lsl	r2, r4, #8
 1140 0016 0A43     		orr	r2, r1
 1141 0018 1A60     		str	r2, [r3]
1169:Generated_Source\PSoC4/TIMER.c **** }
 1142              		.loc 1 1169 0
 1143 001a FFF7FEFF 		bl	CyExitCriticalSection
 1144              	.LVL72:
 1145              	.LVL73:
1170:Generated_Source\PSoC4/TIMER.c **** 
 1146              		.loc 1 1170 0
 1147 001e 10BD     		pop	{r4, pc}
 1148              	.L87:
 1149              		.align	2
 1150              	.L86:
 1151 0020 24012040 		.word	1075839268
 1152 0024 FFFCFFFF 		.word	-769
 1153              		.cfi_endproc
 1154              	.LFE32:
 1155              		.size	TIMER_SetStartMode, .-TIMER_SetStartMode
 1156              		.section	.text.TIMER_SetStopMode,"ax",%progbits
 1157              		.align	1
 1158              		.global	TIMER_SetStopMode
 1159              		.code	16
 1160              		.thumb_func
 1161              		.type	TIMER_SetStopMode, %function
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 48


 1162              	TIMER_SetStopMode:
 1163              	.LFB33:
1193:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1164              		.loc 1 1193 0
 1165              		.cfi_startproc
 1166              	.LVL74:
 1167 0000 10B5     		push	{r4, lr}
 1168              		.cfi_def_cfa_offset 8
 1169              		.cfi_offset 4, -8
 1170              		.cfi_offset 14, -4
1193:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1171              		.loc 1 1193 0
 1172 0002 041C     		mov	r4, r0
1196:Generated_Source\PSoC4/TIMER.c **** 
 1173              		.loc 1 1196 0
 1174 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1175              	.LVL75:
1198:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_STOP_SHIFT));
 1176              		.loc 1 1198 0
 1177 0008 C021     		mov	r1, #192
 1178 000a 054B     		ldr	r3, .L89
1202:Generated_Source\PSoC4/TIMER.c **** 
 1179              		.loc 1 1202 0
 1180              		@ sp needed
1198:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_STOP_SHIFT));
 1181              		.loc 1 1198 0
 1182 000c 1A68     		ldr	r2, [r3]
 1183 000e 8A43     		bic	r2, r1
 1184 0010 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/TIMER.c **** 
 1185              		.loc 1 1199 0
 1186 0012 1968     		ldr	r1, [r3]
 1187 0014 A201     		lsl	r2, r4, #6
 1188 0016 0A43     		orr	r2, r1
 1189 0018 1A60     		str	r2, [r3]
1201:Generated_Source\PSoC4/TIMER.c **** }
 1190              		.loc 1 1201 0
 1191 001a FFF7FEFF 		bl	CyExitCriticalSection
 1192              	.LVL76:
 1193              	.LVL77:
1202:Generated_Source\PSoC4/TIMER.c **** 
 1194              		.loc 1 1202 0
 1195 001e 10BD     		pop	{r4, pc}
 1196              	.L90:
 1197              		.align	2
 1198              	.L89:
 1199 0020 24012040 		.word	1075839268
 1200              		.cfi_endproc
 1201              	.LFE33:
 1202              		.size	TIMER_SetStopMode, .-TIMER_SetStopMode
 1203              		.section	.text.TIMER_SetCountMode,"ax",%progbits
 1204              		.align	1
 1205              		.global	TIMER_SetCountMode
 1206              		.code	16
 1207              		.thumb_func
 1208              		.type	TIMER_SetCountMode, %function
 1209              	TIMER_SetCountMode:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 49


 1210              	.LFB34:
1226:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1211              		.loc 1 1226 0
 1212              		.cfi_startproc
 1213              	.LVL78:
 1214 0000 10B5     		push	{r4, lr}
 1215              		.cfi_def_cfa_offset 8
 1216              		.cfi_offset 4, -8
 1217              		.cfi_offset 14, -4
1226:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1218              		.loc 1 1226 0
 1219 0002 041C     		mov	r4, r0
1229:Generated_Source\PSoC4/TIMER.c **** 
 1220              		.loc 1 1229 0
 1221 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1222              	.LVL79:
1231:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_COUNT_SHIFT));
 1223              		.loc 1 1231 0
 1224 0008 0C21     		mov	r1, #12
 1225 000a 054B     		ldr	r3, .L92
1235:Generated_Source\PSoC4/TIMER.c **** 
 1226              		.loc 1 1235 0
 1227              		@ sp needed
1231:Generated_Source\PSoC4/TIMER.c ****     TIMER_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TIMER_COUNT_SHIFT));
 1228              		.loc 1 1231 0
 1229 000c 1A68     		ldr	r2, [r3]
 1230 000e 8A43     		bic	r2, r1
 1231 0010 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/TIMER.c **** 
 1232              		.loc 1 1232 0
 1233 0012 1968     		ldr	r1, [r3]
 1234 0014 A200     		lsl	r2, r4, #2
 1235 0016 0A43     		orr	r2, r1
 1236 0018 1A60     		str	r2, [r3]
1234:Generated_Source\PSoC4/TIMER.c **** }
 1237              		.loc 1 1234 0
 1238 001a FFF7FEFF 		bl	CyExitCriticalSection
 1239              	.LVL80:
 1240              	.LVL81:
1235:Generated_Source\PSoC4/TIMER.c **** 
 1241              		.loc 1 1235 0
 1242 001e 10BD     		pop	{r4, pc}
 1243              	.L93:
 1244              		.align	2
 1245              	.L92:
 1246 0020 24012040 		.word	1075839268
 1247              		.cfi_endproc
 1248              	.LFE34:
 1249              		.size	TIMER_SetCountMode, .-TIMER_SetCountMode
 1250              		.section	.text.TIMER_TriggerCommand,"ax",%progbits
 1251              		.align	1
 1252              		.global	TIMER_TriggerCommand
 1253              		.code	16
 1254              		.thumb_func
 1255              		.type	TIMER_TriggerCommand, %function
 1256              	TIMER_TriggerCommand:
 1257              	.LFB35:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 50


1266:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1258              		.loc 1 1266 0
 1259              		.cfi_startproc
 1260              	.LVL82:
 1261 0000 38B5     		push	{r3, r4, r5, lr}
 1262              		.cfi_def_cfa_offset 16
 1263              		.cfi_offset 3, -16
 1264              		.cfi_offset 4, -12
 1265              		.cfi_offset 5, -8
 1266              		.cfi_offset 14, -4
1266:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1267              		.loc 1 1266 0
 1268 0002 0D1C     		mov	r5, r1
 1269 0004 041C     		mov	r4, r0
1271:Generated_Source\PSoC4/TIMER.c **** 
 1270              		.loc 1 1271 0
 1271 0006 AC40     		lsl	r4, r4, r5
1269:Generated_Source\PSoC4/TIMER.c **** 
 1272              		.loc 1 1269 0
 1273 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1274              	.LVL83:
1271:Generated_Source\PSoC4/TIMER.c **** 
 1275              		.loc 1 1271 0
 1276 000c 024B     		ldr	r3, .L95
1274:Generated_Source\PSoC4/TIMER.c **** 
 1277              		.loc 1 1274 0
 1278              		@ sp needed
1271:Generated_Source\PSoC4/TIMER.c **** 
 1279              		.loc 1 1271 0
 1280 000e 1C60     		str	r4, [r3]
1273:Generated_Source\PSoC4/TIMER.c **** }
 1281              		.loc 1 1273 0
 1282 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1283              	.LVL84:
 1284              	.LVL85:
1274:Generated_Source\PSoC4/TIMER.c **** 
 1285              		.loc 1 1274 0
 1286 0014 38BD     		pop	{r3, r4, r5, pc}
 1287              	.L96:
 1288 0016 C046     		.align	2
 1289              	.L95:
 1290 0018 08002040 		.word	1075838984
 1291              		.cfi_endproc
 1292              	.LFE35:
 1293              		.size	TIMER_TriggerCommand, .-TIMER_TriggerCommand
 1294              		.section	.text.TIMER_Enable,"ax",%progbits
 1295              		.align	1
 1296              		.global	TIMER_Enable
 1297              		.code	16
 1298              		.thumb_func
 1299              		.type	TIMER_Enable, %function
 1300              	TIMER_Enable:
 1301              	.LFB3:
 178:Generated_Source\PSoC4/TIMER.c ****     uint8 enableInterrupts;
 1302              		.loc 1 178 0
 1303              		.cfi_startproc
 1304 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 51


 1305              		.cfi_def_cfa_offset 8
 1306              		.cfi_offset 4, -8
 1307              		.cfi_offset 14, -4
 182:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 1308              		.loc 1 182 0
 1309 0002 0124     		mov	r4, #1
 181:Generated_Source\PSoC4/TIMER.c ****     TIMER_BLOCK_CONTROL_REG |= TIMER_MASK;
 1310              		.loc 1 181 0
 1311 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 1312              	.LVL86:
 182:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 1313              		.loc 1 182 0
 1314 0008 054A     		ldr	r2, .L98
 203:Generated_Source\PSoC4/TIMER.c **** 
 1315              		.loc 1 203 0
 1316              		@ sp needed
 182:Generated_Source\PSoC4/TIMER.c ****     CyExitCriticalSection(enableInterrupts);
 1317              		.loc 1 182 0
 1318 000a 1368     		ldr	r3, [r2]
 1319 000c 2343     		orr	r3, r4
 1320 000e 1360     		str	r3, [r2]
 183:Generated_Source\PSoC4/TIMER.c **** 
 1321              		.loc 1 183 0
 1322 0010 FFF7FEFF 		bl	CyExitCriticalSection
 1323              	.LVL87:
 188:Generated_Source\PSoC4/TIMER.c ****         #endif /* (0u == TIMER_PWM_START_SIGNAL_PRESENT) */
 1324              		.loc 1 188 0
 1325 0014 201C     		mov	r0, r4
 1326 0016 1821     		mov	r1, #24
 1327 0018 FFF7FEFF 		bl	TIMER_TriggerCommand
 1328              	.LVL88:
 203:Generated_Source\PSoC4/TIMER.c **** 
 1329              		.loc 1 203 0
 1330 001c 10BD     		pop	{r4, pc}
 1331              	.L99:
 1332 001e C046     		.align	2
 1333              	.L98:
 1334 0020 00002040 		.word	1075838976
 1335              		.cfi_endproc
 1336              	.LFE3:
 1337              		.size	TIMER_Enable, .-TIMER_Enable
 1338              		.section	.text.TIMER_Start,"ax",%progbits
 1339              		.align	1
 1340              		.global	TIMER_Start
 1341              		.code	16
 1342              		.thumb_func
 1343              		.type	TIMER_Start, %function
 1344              	TIMER_Start:
 1345              	.LFB4:
 231:Generated_Source\PSoC4/TIMER.c ****     if (0u == TIMER_initVar)
 1346              		.loc 1 231 0
 1347              		.cfi_startproc
 1348 0000 10B5     		push	{r4, lr}
 1349              		.cfi_def_cfa_offset 8
 1350              		.cfi_offset 4, -8
 1351              		.cfi_offset 14, -4
 232:Generated_Source\PSoC4/TIMER.c ****     {
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 52


 1352              		.loc 1 232 0
 1353 0002 054C     		ldr	r4, .L103
 1354 0004 2378     		ldrb	r3, [r4]
 1355 0006 002B     		cmp	r3, #0
 1356 0008 03D1     		bne	.L101
 234:Generated_Source\PSoC4/TIMER.c ****         TIMER_initVar = 1u;
 1357              		.loc 1 234 0
 1358 000a FFF7FEFF 		bl	TIMER_Init
 1359              	.LVL89:
 235:Generated_Source\PSoC4/TIMER.c ****     }
 1360              		.loc 1 235 0
 1361 000e 0123     		mov	r3, #1
 1362 0010 2370     		strb	r3, [r4]
 1363              	.L101:
 238:Generated_Source\PSoC4/TIMER.c **** }
 1364              		.loc 1 238 0
 1365 0012 FFF7FEFF 		bl	TIMER_Enable
 1366              	.LVL90:
 239:Generated_Source\PSoC4/TIMER.c **** 
 1367              		.loc 1 239 0
 1368              		@ sp needed
 1369 0016 10BD     		pop	{r4, pc}
 1370              	.L104:
 1371              		.align	2
 1372              	.L103:
 1373 0018 00000000 		.word	.LANCHOR0
 1374              		.cfi_endproc
 1375              	.LFE4:
 1376              		.size	TIMER_Start, .-TIMER_Start
 1377              		.section	.text.TIMER_ReadStatus,"ax",%progbits
 1378              		.align	1
 1379              		.global	TIMER_ReadStatus
 1380              		.code	16
 1381              		.thumb_func
 1382              		.type	TIMER_ReadStatus, %function
 1383              	TIMER_ReadStatus:
 1384              	.LFB36:
1295:Generated_Source\PSoC4/TIMER.c ****     return ((TIMER_STATUS_REG >> TIMER_RUNNING_STATUS_SHIFT) |
 1385              		.loc 1 1295 0
 1386              		.cfi_startproc
1296:Generated_Source\PSoC4/TIMER.c ****             (TIMER_STATUS_REG & TIMER_STATUS_DOWN));
 1387              		.loc 1 1296 0
 1388 0000 034A     		ldr	r2, .L106
1298:Generated_Source\PSoC4/TIMER.c **** 
 1389              		.loc 1 1298 0
 1390              		@ sp needed
1296:Generated_Source\PSoC4/TIMER.c ****             (TIMER_STATUS_REG & TIMER_STATUS_DOWN));
 1391              		.loc 1 1296 0
 1392 0002 1368     		ldr	r3, [r2]
1297:Generated_Source\PSoC4/TIMER.c **** }
 1393              		.loc 1 1297 0
 1394 0004 1068     		ldr	r0, [r2]
 1395 0006 0122     		mov	r2, #1
1296:Generated_Source\PSoC4/TIMER.c ****             (TIMER_STATUS_REG & TIMER_STATUS_DOWN));
 1396              		.loc 1 1296 0
 1397 0008 9B0F     		lsr	r3, r3, #30
1297:Generated_Source\PSoC4/TIMER.c **** }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 53


 1398              		.loc 1 1297 0
 1399 000a 1040     		and	r0, r2
1296:Generated_Source\PSoC4/TIMER.c ****             (TIMER_STATUS_REG & TIMER_STATUS_DOWN));
 1400              		.loc 1 1296 0
 1401 000c 1843     		orr	r0, r3
1298:Generated_Source\PSoC4/TIMER.c **** 
 1402              		.loc 1 1298 0
 1403 000e 7047     		bx	lr
 1404              	.L107:
 1405              		.align	2
 1406              	.L106:
 1407 0010 04012040 		.word	1075839236
 1408              		.cfi_endproc
 1409              	.LFE36:
 1410              		.size	TIMER_ReadStatus, .-TIMER_ReadStatus
 1411              		.section	.text.TIMER_SetInterruptMode,"ax",%progbits
 1412              		.align	1
 1413              		.global	TIMER_SetInterruptMode
 1414              		.code	16
 1415              		.thumb_func
 1416              		.type	TIMER_SetInterruptMode, %function
 1417              	TIMER_SetInterruptMode:
 1418              	.LFB37:
1320:Generated_Source\PSoC4/TIMER.c ****     TIMER_INTERRUPT_MASK_REG =  interruptMask;
 1419              		.loc 1 1320 0
 1420              		.cfi_startproc
 1421              	.LVL91:
 1422              		.loc 1 1321 0
 1423 0000 014B     		ldr	r3, .L109
1322:Generated_Source\PSoC4/TIMER.c **** }
 1424              		.loc 1 1322 0
 1425              		@ sp needed
1321:Generated_Source\PSoC4/TIMER.c **** }
 1426              		.loc 1 1321 0
 1427 0002 1860     		str	r0, [r3]
 1428              		.loc 1 1322 0
 1429 0004 7047     		bx	lr
 1430              	.L110:
 1431 0006 C046     		.align	2
 1432              	.L109:
 1433 0008 38012040 		.word	1075839288
 1434              		.cfi_endproc
 1435              	.LFE37:
 1436              		.size	TIMER_SetInterruptMode, .-TIMER_SetInterruptMode
 1437              		.section	.text.TIMER_GetInterruptSourceMasked,"ax",%progbits
 1438              		.align	1
 1439              		.global	TIMER_GetInterruptSourceMasked
 1440              		.code	16
 1441              		.thumb_func
 1442              		.type	TIMER_GetInterruptSourceMasked, %function
 1443              	TIMER_GetInterruptSourceMasked:
 1444              	.LFB38:
1323:Generated_Source\PSoC4/TIMER.c **** 
1324:Generated_Source\PSoC4/TIMER.c **** 
1325:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 54


1328:Generated_Source\PSoC4/TIMER.c **** *
1329:Generated_Source\PSoC4/TIMER.c **** * Summary:
1330:Generated_Source\PSoC4/TIMER.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/TIMER.c **** *
1332:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1333:Generated_Source\PSoC4/TIMER.c **** *   None
1334:Generated_Source\PSoC4/TIMER.c **** *
1335:Generated_Source\PSoC4/TIMER.c **** * Return:
1336:Generated_Source\PSoC4/TIMER.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/TIMER.c **** *   Values:
1338:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/TIMER.c **** *
1341:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/TIMER.c **** {
 1445              		.loc 1 1343 0
 1446              		.cfi_startproc
1344:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_INTERRUPT_MASKED_REG);
 1447              		.loc 1 1344 0
 1448 0000 014B     		ldr	r3, .L112
1345:Generated_Source\PSoC4/TIMER.c **** }
 1449              		.loc 1 1345 0
 1450              		@ sp needed
1344:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_INTERRUPT_MASKED_REG);
 1451              		.loc 1 1344 0
 1452 0002 1868     		ldr	r0, [r3]
 1453              		.loc 1 1345 0
 1454 0004 7047     		bx	lr
 1455              	.L113:
 1456 0006 C046     		.align	2
 1457              	.L112:
 1458 0008 3C012040 		.word	1075839292
 1459              		.cfi_endproc
 1460              	.LFE38:
 1461              		.size	TIMER_GetInterruptSourceMasked, .-TIMER_GetInterruptSourceMasked
 1462              		.section	.text.TIMER_GetInterruptSource,"ax",%progbits
 1463              		.align	1
 1464              		.global	TIMER_GetInterruptSource
 1465              		.code	16
 1466              		.thumb_func
 1467              		.type	TIMER_GetInterruptSource, %function
 1468              	TIMER_GetInterruptSource:
 1469              	.LFB39:
1346:Generated_Source\PSoC4/TIMER.c **** 
1347:Generated_Source\PSoC4/TIMER.c **** 
1348:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_GetInterruptSource
1350:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1351:Generated_Source\PSoC4/TIMER.c **** *
1352:Generated_Source\PSoC4/TIMER.c **** * Summary:
1353:Generated_Source\PSoC4/TIMER.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/TIMER.c **** *
1355:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1356:Generated_Source\PSoC4/TIMER.c **** *  None
1357:Generated_Source\PSoC4/TIMER.c **** *
1358:Generated_Source\PSoC4/TIMER.c **** * Return:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 55


1359:Generated_Source\PSoC4/TIMER.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/TIMER.c **** *   Values:
1361:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/TIMER.c **** *
1364:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/TIMER.c **** uint32 TIMER_GetInterruptSource(void)
1366:Generated_Source\PSoC4/TIMER.c **** {
 1470              		.loc 1 1366 0
 1471              		.cfi_startproc
1367:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_INTERRUPT_REQ_REG);
 1472              		.loc 1 1367 0
 1473 0000 014B     		ldr	r3, .L115
1368:Generated_Source\PSoC4/TIMER.c **** }
 1474              		.loc 1 1368 0
 1475              		@ sp needed
1367:Generated_Source\PSoC4/TIMER.c ****     return (TIMER_INTERRUPT_REQ_REG);
 1476              		.loc 1 1367 0
 1477 0002 1868     		ldr	r0, [r3]
 1478              		.loc 1 1368 0
 1479 0004 7047     		bx	lr
 1480              	.L116:
 1481 0006 C046     		.align	2
 1482              	.L115:
 1483 0008 30012040 		.word	1075839280
 1484              		.cfi_endproc
 1485              	.LFE39:
 1486              		.size	TIMER_GetInterruptSource, .-TIMER_GetInterruptSource
 1487              		.section	.text.TIMER_ClearInterrupt,"ax",%progbits
 1488              		.align	1
 1489              		.global	TIMER_ClearInterrupt
 1490              		.code	16
 1491              		.thumb_func
 1492              		.type	TIMER_ClearInterrupt, %function
 1493              	TIMER_ClearInterrupt:
 1494              	.LFB40:
1369:Generated_Source\PSoC4/TIMER.c **** 
1370:Generated_Source\PSoC4/TIMER.c **** 
1371:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_ClearInterrupt
1373:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1374:Generated_Source\PSoC4/TIMER.c **** *
1375:Generated_Source\PSoC4/TIMER.c **** * Summary:
1376:Generated_Source\PSoC4/TIMER.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/TIMER.c **** *
1378:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1379:Generated_Source\PSoC4/TIMER.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/TIMER.c **** *   Values:
1381:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/TIMER.c **** *
1384:Generated_Source\PSoC4/TIMER.c **** * Return:
1385:Generated_Source\PSoC4/TIMER.c **** *  None
1386:Generated_Source\PSoC4/TIMER.c **** *
1387:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/TIMER.c **** void TIMER_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/TIMER.c **** {
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 56


 1495              		.loc 1 1389 0
 1496              		.cfi_startproc
 1497              	.LVL92:
1390:Generated_Source\PSoC4/TIMER.c ****     TIMER_INTERRUPT_REQ_REG = interruptMask;
 1498              		.loc 1 1390 0
 1499 0000 014B     		ldr	r3, .L118
1391:Generated_Source\PSoC4/TIMER.c **** }
 1500              		.loc 1 1391 0
 1501              		@ sp needed
1390:Generated_Source\PSoC4/TIMER.c ****     TIMER_INTERRUPT_REQ_REG = interruptMask;
 1502              		.loc 1 1390 0
 1503 0002 1860     		str	r0, [r3]
 1504              		.loc 1 1391 0
 1505 0004 7047     		bx	lr
 1506              	.L119:
 1507 0006 C046     		.align	2
 1508              	.L118:
 1509 0008 30012040 		.word	1075839280
 1510              		.cfi_endproc
 1511              	.LFE40:
 1512              		.size	TIMER_ClearInterrupt, .-TIMER_ClearInterrupt
 1513              		.section	.text.TIMER_SetInterrupt,"ax",%progbits
 1514              		.align	1
 1515              		.global	TIMER_SetInterrupt
 1516              		.code	16
 1517              		.thumb_func
 1518              		.type	TIMER_SetInterrupt, %function
 1519              	TIMER_SetInterrupt:
 1520              	.LFB41:
1392:Generated_Source\PSoC4/TIMER.c **** 
1393:Generated_Source\PSoC4/TIMER.c **** 
1394:Generated_Source\PSoC4/TIMER.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/TIMER.c **** * Function Name: TIMER_SetInterrupt
1396:Generated_Source\PSoC4/TIMER.c **** ********************************************************************************
1397:Generated_Source\PSoC4/TIMER.c **** *
1398:Generated_Source\PSoC4/TIMER.c **** * Summary:
1399:Generated_Source\PSoC4/TIMER.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/TIMER.c **** *
1401:Generated_Source\PSoC4/TIMER.c **** * Parameters:
1402:Generated_Source\PSoC4/TIMER.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/TIMER.c **** *   Values:
1404:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/TIMER.c **** *     - TIMER_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/TIMER.c **** *
1407:Generated_Source\PSoC4/TIMER.c **** * Return:
1408:Generated_Source\PSoC4/TIMER.c **** *  None
1409:Generated_Source\PSoC4/TIMER.c **** *
1410:Generated_Source\PSoC4/TIMER.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/TIMER.c **** void TIMER_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/TIMER.c **** {
 1521              		.loc 1 1412 0
 1522              		.cfi_startproc
 1523              	.LVL93:
1413:Generated_Source\PSoC4/TIMER.c ****     TIMER_INTERRUPT_SET_REG = interruptMask;
 1524              		.loc 1 1413 0
 1525 0000 014B     		ldr	r3, .L121
1414:Generated_Source\PSoC4/TIMER.c **** }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 57


 1526              		.loc 1 1414 0
 1527              		@ sp needed
1413:Generated_Source\PSoC4/TIMER.c ****     TIMER_INTERRUPT_SET_REG = interruptMask;
 1528              		.loc 1 1413 0
 1529 0002 1860     		str	r0, [r3]
 1530              		.loc 1 1414 0
 1531 0004 7047     		bx	lr
 1532              	.L122:
 1533 0006 C046     		.align	2
 1534              	.L121:
 1535 0008 34012040 		.word	1075839284
 1536              		.cfi_endproc
 1537              	.LFE41:
 1538              		.size	TIMER_SetInterrupt, .-TIMER_SetInterrupt
 1539              		.global	TIMER_initVar
 1540              		.bss
 1541              		.set	.LANCHOR0,. + 0
 1542              		.type	TIMER_initVar, %object
 1543              		.size	TIMER_initVar, 1
 1544              	TIMER_initVar:
 1545 0000 00       		.space	1
 1546              		.text
 1547              	.Letext0:
 1548              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1549              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 1550              		.section	.debug_info,"",%progbits
 1551              	.Ldebug_info0:
 1552 0000 5D090000 		.4byte	0x95d
 1553 0004 0400     		.2byte	0x4
 1554 0006 00000000 		.4byte	.Ldebug_abbrev0
 1555 000a 04       		.byte	0x4
 1556 000b 01       		.uleb128 0x1
 1557 000c 06000000 		.4byte	.LASF76
 1558 0010 01       		.byte	0x1
 1559 0011 80010000 		.4byte	.LASF77
 1560 0015 F5000000 		.4byte	.LASF78
 1561 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1562 001d 00000000 		.4byte	0
 1563 0021 00000000 		.4byte	.Ldebug_line0
 1564 0025 02       		.uleb128 0x2
 1565 0026 01       		.byte	0x1
 1566 0027 06       		.byte	0x6
 1567 0028 B4010000 		.4byte	.LASF0
 1568 002c 02       		.uleb128 0x2
 1569 002d 01       		.byte	0x1
 1570 002e 08       		.byte	0x8
 1571 002f 25040000 		.4byte	.LASF1
 1572 0033 02       		.uleb128 0x2
 1573 0034 02       		.byte	0x2
 1574 0035 05       		.byte	0x5
 1575 0036 57040000 		.4byte	.LASF2
 1576 003a 02       		.uleb128 0x2
 1577 003b 02       		.byte	0x2
 1578 003c 07       		.byte	0x7
 1579 003d 14030000 		.4byte	.LASF3
 1580 0041 02       		.uleb128 0x2
 1581 0042 04       		.byte	0x4
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 58


 1582 0043 05       		.byte	0x5
 1583 0044 15020000 		.4byte	.LASF4
 1584 0048 02       		.uleb128 0x2
 1585 0049 04       		.byte	0x4
 1586 004a 07       		.byte	0x7
 1587 004b E2020000 		.4byte	.LASF5
 1588 004f 02       		.uleb128 0x2
 1589 0050 08       		.byte	0x8
 1590 0051 05       		.byte	0x5
 1591 0052 A6010000 		.4byte	.LASF6
 1592 0056 02       		.uleb128 0x2
 1593 0057 08       		.byte	0x8
 1594 0058 07       		.byte	0x7
 1595 0059 DE000000 		.4byte	.LASF7
 1596 005d 03       		.uleb128 0x3
 1597 005e 04       		.byte	0x4
 1598 005f 05       		.byte	0x5
 1599 0060 696E7400 		.ascii	"int\000"
 1600 0064 02       		.uleb128 0x2
 1601 0065 04       		.byte	0x4
 1602 0066 07       		.byte	0x7
 1603 0067 CD020000 		.4byte	.LASF8
 1604 006b 04       		.uleb128 0x4
 1605 006c 30020000 		.4byte	.LASF9
 1606 0070 02       		.byte	0x2
 1607 0071 B901     		.2byte	0x1b9
 1608 0073 2C000000 		.4byte	0x2c
 1609 0077 04       		.uleb128 0x4
 1610 0078 53020000 		.4byte	.LASF10
 1611 007c 02       		.byte	0x2
 1612 007d BB01     		.2byte	0x1bb
 1613 007f 48000000 		.4byte	0x48
 1614 0083 02       		.uleb128 0x2
 1615 0084 04       		.byte	0x4
 1616 0085 04       		.byte	0x4
 1617 0086 F6030000 		.4byte	.LASF11
 1618 008a 02       		.uleb128 0x2
 1619 008b 08       		.byte	0x8
 1620 008c 04       		.byte	0x4
 1621 008d 4C020000 		.4byte	.LASF12
 1622 0091 02       		.uleb128 0x2
 1623 0092 01       		.byte	0x1
 1624 0093 08       		.byte	0x8
 1625 0094 E3040000 		.4byte	.LASF13
 1626 0098 04       		.uleb128 0x4
 1627 0099 86030000 		.4byte	.LASF14
 1628 009d 02       		.byte	0x2
 1629 009e 6502     		.2byte	0x265
 1630 00a0 A4000000 		.4byte	0xa4
 1631 00a4 05       		.uleb128 0x5
 1632 00a5 77000000 		.4byte	0x77
 1633 00a9 02       		.uleb128 0x2
 1634 00aa 04       		.byte	0x4
 1635 00ab 07       		.byte	0x7
 1636 00ac 99030000 		.4byte	.LASF15
 1637 00b0 06       		.uleb128 0x6
 1638 00b1 B1030000 		.4byte	.LASF16
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 59


 1639 00b5 01       		.byte	0x1
 1640 00b6 6702     		.2byte	0x267
 1641 00b8 01       		.byte	0x1
 1642 00b9 CA000000 		.4byte	0xca
 1643 00bd 07       		.uleb128 0x7
 1644 00be 00000000 		.4byte	.LASF18
 1645 00c2 01       		.byte	0x1
 1646 00c3 6702     		.2byte	0x267
 1647 00c5 77000000 		.4byte	0x77
 1648 00c9 00       		.byte	0
 1649 00ca 06       		.uleb128 0x6
 1650 00cb 9A040000 		.4byte	.LASF17
 1651 00cf 01       		.byte	0x1
 1652 00d0 2705     		.2byte	0x527
 1653 00d2 01       		.byte	0x1
 1654 00d3 E4000000 		.4byte	0xe4
 1655 00d7 07       		.uleb128 0x7
 1656 00d8 FC030000 		.4byte	.LASF19
 1657 00dc 01       		.byte	0x1
 1658 00dd 2705     		.2byte	0x527
 1659 00df 77000000 		.4byte	0x77
 1660 00e3 00       		.byte	0
 1661 00e4 06       		.uleb128 0x6
 1662 00e5 B0000000 		.4byte	.LASF20
 1663 00e9 01       		.byte	0x1
 1664 00ea B502     		.2byte	0x2b5
 1665 00ec 01       		.byte	0x1
 1666 00ed FE000000 		.4byte	0xfe
 1667 00f1 07       		.uleb128 0x7
 1668 00f2 C2000000 		.4byte	.LASF21
 1669 00f6 01       		.byte	0x1
 1670 00f7 B502     		.2byte	0x2b5
 1671 00f9 77000000 		.4byte	0x77
 1672 00fd 00       		.byte	0
 1673 00fe 06       		.uleb128 0x6
 1674 00ff 37030000 		.4byte	.LASF22
 1675 0103 01       		.byte	0x1
 1676 0104 5103     		.2byte	0x351
 1677 0106 01       		.byte	0x1
 1678 0107 18010000 		.4byte	0x118
 1679 010b 07       		.uleb128 0x7
 1680 010c C4030000 		.4byte	.LASF23
 1681 0110 01       		.byte	0x1
 1682 0111 5103     		.2byte	0x351
 1683 0113 77000000 		.4byte	0x77
 1684 0117 00       		.byte	0
 1685 0118 08       		.uleb128 0x8
 1686 0119 58030000 		.4byte	.LASF24
 1687 011d 01       		.byte	0x1
 1688 011e 26       		.byte	0x26
 1689 011f 00000000 		.4byte	.LFB2
 1690 0123 58000000 		.4byte	.LFE2-.LFB2
 1691 0127 01       		.uleb128 0x1
 1692 0128 9C       		.byte	0x9c
 1693 0129 94010000 		.4byte	0x194
 1694 012d 09       		.uleb128 0x9
 1695 012e B0000000 		.4byte	0xb0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 60


 1696 0132 0A000000 		.4byte	.LBB10
 1697 0136 00000000 		.4byte	.Ldebug_ranges0+0
 1698 013a 01       		.byte	0x1
 1699 013b 67       		.byte	0x67
 1700 013c 47010000 		.4byte	0x147
 1701 0140 0A       		.uleb128 0xa
 1702 0141 BD000000 		.4byte	0xbd
 1703 0145 00       		.byte	0
 1704 0146 00       		.byte	0
 1705 0147 0B       		.uleb128 0xb
 1706 0148 CA000000 		.4byte	0xca
 1707 014c 1C000000 		.4byte	.LBB14
 1708 0150 04000000 		.4byte	.LBE14-.LBB14
 1709 0154 01       		.byte	0x1
 1710 0155 77       		.byte	0x77
 1711 0156 61010000 		.4byte	0x161
 1712 015a 0A       		.uleb128 0xa
 1713 015b D7000000 		.4byte	0xd7
 1714 015f 00       		.byte	0
 1715 0160 00       		.byte	0
 1716 0161 0B       		.uleb128 0xb
 1717 0162 E4000000 		.4byte	0xe4
 1718 0166 26000000 		.4byte	.LBB16
 1719 016a 06000000 		.4byte	.LBE16-.LBB16
 1720 016e 01       		.byte	0x1
 1721 016f 92       		.byte	0x92
 1722 0170 7C010000 		.4byte	0x17c
 1723 0174 0C       		.uleb128 0xc
 1724 0175 F1000000 		.4byte	0xf1
 1725 0179 7017     		.2byte	0x1770
 1726 017b 00       		.byte	0
 1727 017c 0D       		.uleb128 0xd
 1728 017d FE000000 		.4byte	0xfe
 1729 0181 2C000000 		.4byte	.LBB18
 1730 0185 06000000 		.4byte	.LBE18-.LBB18
 1731 0189 01       		.byte	0x1
 1732 018a 93       		.byte	0x93
 1733 018b 0C       		.uleb128 0xc
 1734 018c 0B010000 		.4byte	0x10b
 1735 0190 B80B     		.2byte	0xbb8
 1736 0192 00       		.byte	0
 1737 0193 00       		.byte	0
 1738 0194 0E       		.uleb128 0xe
 1739 0195 94000000 		.4byte	.LASF25
 1740 0199 01       		.byte	0x1
 1741 019a 0001     		.2byte	0x100
 1742 019c 00000000 		.4byte	.LFB5
 1743 01a0 1C000000 		.4byte	.LFE5-.LFB5
 1744 01a4 01       		.uleb128 0x1
 1745 01a5 9C       		.byte	0x9c
 1746 01a6 CD010000 		.4byte	0x1cd
 1747 01aa 0F       		.uleb128 0xf
 1748 01ab 7C050000 		.4byte	.LASF27
 1749 01af 01       		.byte	0x1
 1750 01b0 0201     		.2byte	0x102
 1751 01b2 6B000000 		.4byte	0x6b
 1752 01b6 00000000 		.4byte	.LLST0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 61


 1753 01ba 10       		.uleb128 0x10
 1754 01bb 06000000 		.4byte	.LVL4
 1755 01bf 48090000 		.4byte	0x948
 1756 01c3 10       		.uleb128 0x10
 1757 01c4 14000000 		.4byte	.LVL5
 1758 01c8 53090000 		.4byte	0x953
 1759 01cc 00       		.byte	0
 1760 01cd 0E       		.uleb128 0xe
 1761 01ce 6E050000 		.4byte	.LASF26
 1762 01d2 01       		.byte	0x1
 1763 01d3 2501     		.2byte	0x125
 1764 01d5 00000000 		.4byte	.LFB6
 1765 01d9 28000000 		.4byte	.LFE6-.LFB6
 1766 01dd 01       		.uleb128 0x1
 1767 01de 9C       		.byte	0x9c
 1768 01df 16020000 		.4byte	0x216
 1769 01e3 11       		.uleb128 0x11
 1770 01e4 E8040000 		.4byte	.LASF29
 1771 01e8 01       		.byte	0x1
 1772 01e9 2501     		.2byte	0x125
 1773 01eb 77000000 		.4byte	0x77
 1774 01ef 13000000 		.4byte	.LLST1
 1775 01f3 0F       		.uleb128 0xf
 1776 01f4 7C050000 		.4byte	.LASF27
 1777 01f8 01       		.byte	0x1
 1778 01f9 2701     		.2byte	0x127
 1779 01fb 6B000000 		.4byte	0x6b
 1780 01ff 3F000000 		.4byte	.LLST2
 1781 0203 10       		.uleb128 0x10
 1782 0204 08000000 		.4byte	.LVL7
 1783 0208 48090000 		.4byte	0x948
 1784 020c 10       		.uleb128 0x10
 1785 020d 1C000000 		.4byte	.LVL8
 1786 0211 53090000 		.4byte	0x953
 1787 0215 00       		.byte	0
 1788 0216 0E       		.uleb128 0xe
 1789 0217 27030000 		.4byte	.LASF28
 1790 021b 01       		.byte	0x1
 1791 021c 4601     		.2byte	0x146
 1792 021e 00000000 		.4byte	.LFB7
 1793 0222 28000000 		.4byte	.LFE7-.LFB7
 1794 0226 01       		.uleb128 0x1
 1795 0227 9C       		.byte	0x9c
 1796 0228 5F020000 		.4byte	0x25f
 1797 022c 11       		.uleb128 0x11
 1798 022d 9F010000 		.4byte	.LASF30
 1799 0231 01       		.byte	0x1
 1800 0232 4601     		.2byte	0x146
 1801 0234 77000000 		.4byte	0x77
 1802 0238 52000000 		.4byte	.LLST3
 1803 023c 0F       		.uleb128 0xf
 1804 023d 7C050000 		.4byte	.LASF27
 1805 0241 01       		.byte	0x1
 1806 0242 4801     		.2byte	0x148
 1807 0244 6B000000 		.4byte	0x6b
 1808 0248 7E000000 		.4byte	.LLST4
 1809 024c 10       		.uleb128 0x10
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 62


 1810 024d 08000000 		.4byte	.LVL11
 1811 0251 48090000 		.4byte	0x948
 1812 0255 10       		.uleb128 0x10
 1813 0256 1C000000 		.4byte	.LVL12
 1814 025a 53090000 		.4byte	0x953
 1815 025e 00       		.byte	0
 1816 025f 0E       		.uleb128 0xe
 1817 0260 50050000 		.4byte	.LASF31
 1818 0264 01       		.byte	0x1
 1819 0265 6B01     		.2byte	0x16b
 1820 0267 00000000 		.4byte	.LFB8
 1821 026b 28000000 		.4byte	.LFE8-.LFB8
 1822 026f 01       		.uleb128 0x1
 1823 0270 9C       		.byte	0x9c
 1824 0271 A8020000 		.4byte	0x2a8
 1825 0275 11       		.uleb128 0x11
 1826 0276 0A040000 		.4byte	.LASF32
 1827 027a 01       		.byte	0x1
 1828 027b 6B01     		.2byte	0x16b
 1829 027d 77000000 		.4byte	0x77
 1830 0281 91000000 		.4byte	.LLST5
 1831 0285 0F       		.uleb128 0xf
 1832 0286 7C050000 		.4byte	.LASF27
 1833 028a 01       		.byte	0x1
 1834 028b 6D01     		.2byte	0x16d
 1835 028d 6B000000 		.4byte	0x6b
 1836 0291 BD000000 		.4byte	.LLST6
 1837 0295 10       		.uleb128 0x10
 1838 0296 08000000 		.4byte	.LVL15
 1839 029a 48090000 		.4byte	0x948
 1840 029e 10       		.uleb128 0x10
 1841 029f 1C000000 		.4byte	.LVL16
 1842 02a3 53090000 		.4byte	0x953
 1843 02a7 00       		.byte	0
 1844 02a8 0E       		.uleb128 0xe
 1845 02a9 14040000 		.4byte	.LASF33
 1846 02ad 01       		.byte	0x1
 1847 02ae 8B01     		.2byte	0x18b
 1848 02b0 00000000 		.4byte	.LFB9
 1849 02b4 2C000000 		.4byte	.LFE9-.LFB9
 1850 02b8 01       		.uleb128 0x1
 1851 02b9 9C       		.byte	0x9c
 1852 02ba F1020000 		.4byte	0x2f1
 1853 02be 11       		.uleb128 0x11
 1854 02bf 63030000 		.4byte	.LASF34
 1855 02c3 01       		.byte	0x1
 1856 02c4 8B01     		.2byte	0x18b
 1857 02c6 77000000 		.4byte	0x77
 1858 02ca D0000000 		.4byte	.LLST7
 1859 02ce 0F       		.uleb128 0xf
 1860 02cf 7C050000 		.4byte	.LASF27
 1861 02d3 01       		.byte	0x1
 1862 02d4 8D01     		.2byte	0x18d
 1863 02d6 6B000000 		.4byte	0x6b
 1864 02da FC000000 		.4byte	.LLST8
 1865 02de 10       		.uleb128 0x10
 1866 02df 08000000 		.4byte	.LVL19
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 63


 1867 02e3 48090000 		.4byte	0x948
 1868 02e7 10       		.uleb128 0x10
 1869 02e8 22000000 		.4byte	.LVL20
 1870 02ec 53090000 		.4byte	0x953
 1871 02f0 00       		.byte	0
 1872 02f1 0E       		.uleb128 0xe
 1873 02f2 9F000000 		.4byte	.LASF35
 1874 02f6 01       		.byte	0x1
 1875 02f7 C101     		.2byte	0x1c1
 1876 02f9 00000000 		.4byte	.LFB10
 1877 02fd 10000000 		.4byte	.LFE10-.LFB10
 1878 0301 01       		.uleb128 0x1
 1879 0302 9C       		.byte	0x9c
 1880 0303 18030000 		.4byte	0x318
 1881 0307 11       		.uleb128 0x11
 1882 0308 F4020000 		.4byte	.LASF36
 1883 030c 01       		.byte	0x1
 1884 030d C101     		.2byte	0x1c1
 1885 030f 77000000 		.4byte	0x77
 1886 0313 0F010000 		.4byte	.LLST9
 1887 0317 00       		.byte	0
 1888 0318 0E       		.uleb128 0xe
 1889 0319 61040000 		.4byte	.LASF37
 1890 031d 01       		.byte	0x1
 1891 031e E501     		.2byte	0x1e5
 1892 0320 00000000 		.4byte	.LFB11
 1893 0324 28000000 		.4byte	.LFE11-.LFB11
 1894 0328 01       		.uleb128 0x1
 1895 0329 9C       		.byte	0x9c
 1896 032a 61030000 		.4byte	0x361
 1897 032e 11       		.uleb128 0x11
 1898 032f A2030000 		.4byte	.LASF38
 1899 0333 01       		.byte	0x1
 1900 0334 E501     		.2byte	0x1e5
 1901 0336 77000000 		.4byte	0x77
 1902 033a 30010000 		.4byte	.LLST10
 1903 033e 0F       		.uleb128 0xf
 1904 033f 7C050000 		.4byte	.LASF27
 1905 0343 01       		.byte	0x1
 1906 0344 E701     		.2byte	0x1e7
 1907 0346 6B000000 		.4byte	0x6b
 1908 034a 5C010000 		.4byte	.LLST11
 1909 034e 10       		.uleb128 0x10
 1910 034f 08000000 		.4byte	.LVL25
 1911 0353 48090000 		.4byte	0x948
 1912 0357 10       		.uleb128 0x10
 1913 0358 22000000 		.4byte	.LVL26
 1914 035c 53090000 		.4byte	0x953
 1915 0360 00       		.byte	0
 1916 0361 0E       		.uleb128 0xe
 1917 0362 C0010000 		.4byte	.LASF39
 1918 0366 01       		.byte	0x1
 1919 0367 0702     		.2byte	0x207
 1920 0369 00000000 		.4byte	.LFB12
 1921 036d 28000000 		.4byte	.LFE12-.LFB12
 1922 0371 01       		.uleb128 0x1
 1923 0372 9C       		.byte	0x9c
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 64


 1924 0373 AA030000 		.4byte	0x3aa
 1925 0377 11       		.uleb128 0x11
 1926 0378 33040000 		.4byte	.LASF40
 1927 037c 01       		.byte	0x1
 1928 037d 0702     		.2byte	0x207
 1929 037f 77000000 		.4byte	0x77
 1930 0383 6F010000 		.4byte	.LLST12
 1931 0387 0F       		.uleb128 0xf
 1932 0388 7C050000 		.4byte	.LASF27
 1933 038c 01       		.byte	0x1
 1934 038d 0902     		.2byte	0x209
 1935 038f 6B000000 		.4byte	0x6b
 1936 0393 9B010000 		.4byte	.LLST13
 1937 0397 10       		.uleb128 0x10
 1938 0398 08000000 		.4byte	.LVL29
 1939 039c 48090000 		.4byte	0x948
 1940 03a0 10       		.uleb128 0x10
 1941 03a1 22000000 		.4byte	.LVL30
 1942 03a5 53090000 		.4byte	0x953
 1943 03a9 00       		.byte	0
 1944 03aa 0E       		.uleb128 0xe
 1945 03ab CF050000 		.4byte	.LASF41
 1946 03af 01       		.byte	0x1
 1947 03b0 2802     		.2byte	0x228
 1948 03b2 00000000 		.4byte	.LFB13
 1949 03b6 2C000000 		.4byte	.LFE13-.LFB13
 1950 03ba 01       		.uleb128 0x1
 1951 03bb 9C       		.byte	0x9c
 1952 03bc F3030000 		.4byte	0x3f3
 1953 03c0 11       		.uleb128 0x11
 1954 03c1 7D020000 		.4byte	.LASF42
 1955 03c5 01       		.byte	0x1
 1956 03c6 2802     		.2byte	0x228
 1957 03c8 77000000 		.4byte	0x77
 1958 03cc AE010000 		.4byte	.LLST14
 1959 03d0 0F       		.uleb128 0xf
 1960 03d1 7C050000 		.4byte	.LASF27
 1961 03d5 01       		.byte	0x1
 1962 03d6 2A02     		.2byte	0x22a
 1963 03d8 6B000000 		.4byte	0x6b
 1964 03dc DA010000 		.4byte	.LLST15
 1965 03e0 10       		.uleb128 0x10
 1966 03e1 08000000 		.4byte	.LVL33
 1967 03e5 48090000 		.4byte	0x948
 1968 03e9 10       		.uleb128 0x10
 1969 03ea 20000000 		.4byte	.LVL35
 1970 03ee 53090000 		.4byte	0x953
 1971 03f2 00       		.byte	0
 1972 03f3 0E       		.uleb128 0xe
 1973 03f4 44040000 		.4byte	.LASF43
 1974 03f8 01       		.byte	0x1
 1975 03f9 4902     		.2byte	0x249
 1976 03fb 00000000 		.4byte	.LFB14
 1977 03ff 28000000 		.4byte	.LFE14-.LFB14
 1978 0403 01       		.uleb128 0x1
 1979 0404 9C       		.byte	0x9c
 1980 0405 3C040000 		.4byte	0x43c
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 65


 1981 0409 11       		.uleb128 0x11
 1982 040a 66020000 		.4byte	.LASF44
 1983 040e 01       		.byte	0x1
 1984 040f 4902     		.2byte	0x249
 1985 0411 77000000 		.4byte	0x77
 1986 0415 ED010000 		.4byte	.LLST16
 1987 0419 0F       		.uleb128 0xf
 1988 041a 7C050000 		.4byte	.LASF27
 1989 041e 01       		.byte	0x1
 1990 041f 4B02     		.2byte	0x24b
 1991 0421 6B000000 		.4byte	0x6b
 1992 0425 19020000 		.4byte	.LLST17
 1993 0429 10       		.uleb128 0x10
 1994 042a 08000000 		.4byte	.LVL37
 1995 042e 48090000 		.4byte	0x948
 1996 0432 10       		.uleb128 0x10
 1997 0433 1C000000 		.4byte	.LVL38
 1998 0437 53090000 		.4byte	0x953
 1999 043b 00       		.byte	0
 2000 043c 12       		.uleb128 0x12
 2001 043d B0000000 		.4byte	0xb0
 2002 0441 00000000 		.4byte	.LFB15
 2003 0445 0C000000 		.4byte	.LFE15-.LFB15
 2004 0449 01       		.uleb128 0x1
 2005 044a 9C       		.byte	0x9c
 2006 044b 59040000 		.4byte	0x459
 2007 044f 13       		.uleb128 0x13
 2008 0450 BD000000 		.4byte	0xbd
 2009 0454 2C020000 		.4byte	.LLST18
 2010 0458 00       		.byte	0
 2011 0459 14       		.uleb128 0x14
 2012 045a C5040000 		.4byte	.LASF47
 2013 045e 01       		.byte	0x1
 2014 045f 7B02     		.2byte	0x27b
 2015 0461 77000000 		.4byte	0x77
 2016 0465 00000000 		.4byte	.LFB16
 2017 0469 0C000000 		.4byte	.LFE16-.LFB16
 2018 046d 01       		.uleb128 0x1
 2019 046e 9C       		.byte	0x9c
 2020 046f 0E       		.uleb128 0xe
 2021 0470 B8020000 		.4byte	.LASF45
 2022 0474 01       		.byte	0x1
 2023 0475 9802     		.2byte	0x298
 2024 0477 00000000 		.4byte	.LFB17
 2025 047b 28000000 		.4byte	.LFE17-.LFB17
 2026 047f 01       		.uleb128 0x1
 2027 0480 9C       		.byte	0x9c
 2028 0481 B8040000 		.4byte	0x4b8
 2029 0485 11       		.uleb128 0x11
 2030 0486 2B050000 		.4byte	.LASF46
 2031 048a 01       		.byte	0x1
 2032 048b 9802     		.2byte	0x298
 2033 048d 77000000 		.4byte	0x77
 2034 0491 4D020000 		.4byte	.LLST19
 2035 0495 0F       		.uleb128 0xf
 2036 0496 7C050000 		.4byte	.LASF27
 2037 049a 01       		.byte	0x1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 66


 2038 049b 9A02     		.2byte	0x29a
 2039 049d 6B000000 		.4byte	0x6b
 2040 04a1 79020000 		.4byte	.LLST20
 2041 04a5 10       		.uleb128 0x10
 2042 04a6 08000000 		.4byte	.LVL43
 2043 04aa 48090000 		.4byte	0x948
 2044 04ae 10       		.uleb128 0x10
 2045 04af 1C000000 		.4byte	.LVL44
 2046 04b3 53090000 		.4byte	0x953
 2047 04b7 00       		.byte	0
 2048 04b8 12       		.uleb128 0x12
 2049 04b9 E4000000 		.4byte	0xe4
 2050 04bd 00000000 		.4byte	.LFB18
 2051 04c1 0C000000 		.4byte	.LFE18-.LFB18
 2052 04c5 01       		.uleb128 0x1
 2053 04c6 9C       		.byte	0x9c
 2054 04c7 D5040000 		.4byte	0x4d5
 2055 04cb 13       		.uleb128 0x13
 2056 04cc F1000000 		.4byte	0xf1
 2057 04d0 8C020000 		.4byte	.LLST21
 2058 04d4 00       		.byte	0
 2059 04d5 14       		.uleb128 0x14
 2060 04d6 8D050000 		.4byte	.LASF48
 2061 04da 01       		.byte	0x1
 2062 04db C902     		.2byte	0x2c9
 2063 04dd 77000000 		.4byte	0x77
 2064 04e1 00000000 		.4byte	.LFB19
 2065 04e5 0C000000 		.4byte	.LFE19-.LFB19
 2066 04e9 01       		.uleb128 0x1
 2067 04ea 9C       		.byte	0x9c
 2068 04eb 0E       		.uleb128 0xe
 2069 04ec E1030000 		.4byte	.LASF49
 2070 04f0 01       		.byte	0x1
 2071 04f1 E302     		.2byte	0x2e3
 2072 04f3 00000000 		.4byte	.LFB20
 2073 04f7 24000000 		.4byte	.LFE20-.LFB20
 2074 04fb 01       		.uleb128 0x1
 2075 04fc 9C       		.byte	0x9c
 2076 04fd 34050000 		.4byte	0x534
 2077 0501 11       		.uleb128 0x11
 2078 0502 B0050000 		.4byte	.LASF50
 2079 0506 01       		.byte	0x1
 2080 0507 E302     		.2byte	0x2e3
 2081 0509 77000000 		.4byte	0x77
 2082 050d AD020000 		.4byte	.LLST22
 2083 0511 0F       		.uleb128 0xf
 2084 0512 7C050000 		.4byte	.LASF27
 2085 0516 01       		.byte	0x1
 2086 0517 E502     		.2byte	0x2e5
 2087 0519 6B000000 		.4byte	0x6b
 2088 051d D9020000 		.4byte	.LLST23
 2089 0521 10       		.uleb128 0x10
 2090 0522 08000000 		.4byte	.LVL49
 2091 0526 48090000 		.4byte	0x948
 2092 052a 10       		.uleb128 0x10
 2093 052b 1E000000 		.4byte	.LVL50
 2094 052f 53090000 		.4byte	0x953
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 67


 2095 0533 00       		.byte	0
 2096 0534 0E       		.uleb128 0xe
 2097 0535 C9000000 		.4byte	.LASF51
 2098 0539 01       		.byte	0x1
 2099 053a FE02     		.2byte	0x2fe
 2100 053c 00000000 		.4byte	.LFB21
 2101 0540 0C000000 		.4byte	.LFE21-.LFB21
 2102 0544 01       		.uleb128 0x1
 2103 0545 9C       		.byte	0x9c
 2104 0546 5B050000 		.4byte	0x55b
 2105 054a 11       		.uleb128 0x11
 2106 054b E4050000 		.4byte	.LASF52
 2107 054f 01       		.byte	0x1
 2108 0550 FE02     		.2byte	0x2fe
 2109 0552 77000000 		.4byte	0x77
 2110 0556 EC020000 		.4byte	.LLST24
 2111 055a 00       		.byte	0
 2112 055b 14       		.uleb128 0x14
 2113 055c B1040000 		.4byte	.LASF53
 2114 0560 01       		.byte	0x1
 2115 0561 1203     		.2byte	0x312
 2116 0563 77000000 		.4byte	0x77
 2117 0567 00000000 		.4byte	.LFB22
 2118 056b 0C000000 		.4byte	.LFE22-.LFB22
 2119 056f 01       		.uleb128 0x1
 2120 0570 9C       		.byte	0x9c
 2121 0571 0E       		.uleb128 0xe
 2122 0572 02050000 		.4byte	.LASF54
 2123 0576 01       		.byte	0x1
 2124 0577 2C03     		.2byte	0x32c
 2125 0579 00000000 		.4byte	.LFB23
 2126 057d 28000000 		.4byte	.LFE23-.LFB23
 2127 0581 01       		.uleb128 0x1
 2128 0582 9C       		.byte	0x9c
 2129 0583 BA050000 		.4byte	0x5ba
 2130 0587 11       		.uleb128 0x11
 2131 0588 B0050000 		.4byte	.LASF50
 2132 058c 01       		.byte	0x1
 2133 058d 2C03     		.2byte	0x32c
 2134 058f 77000000 		.4byte	0x77
 2135 0593 0D030000 		.4byte	.LLST25
 2136 0597 0F       		.uleb128 0xf
 2137 0598 7C050000 		.4byte	.LASF27
 2138 059c 01       		.byte	0x1
 2139 059d 2E03     		.2byte	0x32e
 2140 059f 6B000000 		.4byte	0x6b
 2141 05a3 39030000 		.4byte	.LLST26
 2142 05a7 10       		.uleb128 0x10
 2143 05a8 08000000 		.4byte	.LVL55
 2144 05ac 48090000 		.4byte	0x948
 2145 05b0 10       		.uleb128 0x10
 2146 05b1 22000000 		.4byte	.LVL56
 2147 05b5 53090000 		.4byte	0x953
 2148 05b9 00       		.byte	0
 2149 05ba 12       		.uleb128 0x12
 2150 05bb FE000000 		.4byte	0xfe
 2151 05bf 00000000 		.4byte	.LFB24
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 68


 2152 05c3 0C000000 		.4byte	.LFE24-.LFB24
 2153 05c7 01       		.uleb128 0x1
 2154 05c8 9C       		.byte	0x9c
 2155 05c9 D7050000 		.4byte	0x5d7
 2156 05cd 13       		.uleb128 0x13
 2157 05ce 0B010000 		.4byte	0x10b
 2158 05d2 4C030000 		.4byte	.LLST27
 2159 05d6 00       		.byte	0
 2160 05d7 14       		.uleb128 0x14
 2161 05d8 6B020000 		.4byte	.LASF55
 2162 05dc 01       		.byte	0x1
 2163 05dd 8403     		.2byte	0x384
 2164 05df 77000000 		.4byte	0x77
 2165 05e3 00000000 		.4byte	.LFB25
 2166 05e7 0C000000 		.4byte	.LFE25-.LFB25
 2167 05eb 01       		.uleb128 0x1
 2168 05ec 9C       		.byte	0x9c
 2169 05ed 0E       		.uleb128 0xe
 2170 05ee 36020000 		.4byte	.LASF56
 2171 05f2 01       		.byte	0x1
 2172 05f3 BA03     		.2byte	0x3ba
 2173 05f5 00000000 		.4byte	.LFB26
 2174 05f9 0C000000 		.4byte	.LFE26-.LFB26
 2175 05fd 01       		.uleb128 0x1
 2176 05fe 9C       		.byte	0x9c
 2177 05ff 14060000 		.4byte	0x614
 2178 0603 11       		.uleb128 0x11
 2179 0604 63050000 		.4byte	.LASF57
 2180 0608 01       		.byte	0x1
 2181 0609 BA03     		.2byte	0x3ba
 2182 060b 77000000 		.4byte	0x77
 2183 060f 6D030000 		.4byte	.LLST28
 2184 0613 00       		.byte	0
 2185 0614 14       		.uleb128 0x14
 2186 0615 CC030000 		.4byte	.LASF58
 2187 0619 01       		.byte	0x1
 2188 061a E803     		.2byte	0x3e8
 2189 061c 77000000 		.4byte	0x77
 2190 0620 00000000 		.4byte	.LFB27
 2191 0624 0C000000 		.4byte	.LFE27-.LFB27
 2192 0628 01       		.uleb128 0x1
 2193 0629 9C       		.byte	0x9c
 2194 062a 14       		.uleb128 0x14
 2195 062b 1E020000 		.4byte	.LASF59
 2196 062f 01       		.byte	0x1
 2197 0630 1604     		.2byte	0x416
 2198 0632 77000000 		.4byte	0x77
 2199 0636 00000000 		.4byte	.LFB28
 2200 063a 0C000000 		.4byte	.LFE28-.LFB28
 2201 063e 01       		.uleb128 0x1
 2202 063f 9C       		.byte	0x9c
 2203 0640 14       		.uleb128 0x14
 2204 0641 00020000 		.4byte	.LASF60
 2205 0645 01       		.byte	0x1
 2206 0646 2B04     		.2byte	0x42b
 2207 0648 77000000 		.4byte	0x77
 2208 064c 00000000 		.4byte	.LFB29
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 69


 2209 0650 0C000000 		.4byte	.LFE29-.LFB29
 2210 0654 01       		.uleb128 0x1
 2211 0655 9C       		.byte	0x9c
 2212 0656 0E       		.uleb128 0xe
 2213 0657 71030000 		.4byte	.LASF61
 2214 065b 01       		.byte	0x1
 2215 065c 4604     		.2byte	0x446
 2216 065e 00000000 		.4byte	.LFB30
 2217 0662 24000000 		.4byte	.LFE30-.LFB30
 2218 0666 01       		.uleb128 0x1
 2219 0667 9C       		.byte	0x9c
 2220 0668 9F060000 		.4byte	0x69f
 2221 066c 11       		.uleb128 0x11
 2222 066d 5A020000 		.4byte	.LASF62
 2223 0671 01       		.byte	0x1
 2224 0672 4604     		.2byte	0x446
 2225 0674 77000000 		.4byte	0x77
 2226 0678 8E030000 		.4byte	.LLST29
 2227 067c 0F       		.uleb128 0xf
 2228 067d 7C050000 		.4byte	.LASF27
 2229 0681 01       		.byte	0x1
 2230 0682 4804     		.2byte	0x448
 2231 0684 6B000000 		.4byte	0x6b
 2232 0688 BA030000 		.4byte	.LLST30
 2233 068c 10       		.uleb128 0x10
 2234 068d 08000000 		.4byte	.LVL63
 2235 0691 48090000 		.4byte	0x948
 2236 0695 10       		.uleb128 0x10
 2237 0696 1C000000 		.4byte	.LVL64
 2238 069a 53090000 		.4byte	0x953
 2239 069e 00       		.byte	0
 2240 069f 0E       		.uleb128 0xe
 2241 06a0 BB050000 		.4byte	.LASF63
 2242 06a4 01       		.byte	0x1
 2243 06a5 6704     		.2byte	0x467
 2244 06a7 00000000 		.4byte	.LFB31
 2245 06ab 24000000 		.4byte	.LFE31-.LFB31
 2246 06af 01       		.uleb128 0x1
 2247 06b0 9C       		.byte	0x9c
 2248 06b1 E8060000 		.4byte	0x6e8
 2249 06b5 11       		.uleb128 0x11
 2250 06b6 5A020000 		.4byte	.LASF62
 2251 06ba 01       		.byte	0x1
 2252 06bb 6704     		.2byte	0x467
 2253 06bd 77000000 		.4byte	0x77
 2254 06c1 CD030000 		.4byte	.LLST31
 2255 06c5 0F       		.uleb128 0xf
 2256 06c6 7C050000 		.4byte	.LASF27
 2257 06ca 01       		.byte	0x1
 2258 06cb 6904     		.2byte	0x469
 2259 06cd 6B000000 		.4byte	0x6b
 2260 06d1 F9030000 		.4byte	.LLST32
 2261 06d5 10       		.uleb128 0x10
 2262 06d6 08000000 		.4byte	.LVL67
 2263 06da 48090000 		.4byte	0x948
 2264 06de 10       		.uleb128 0x10
 2265 06df 1E000000 		.4byte	.LVL68
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 70


 2266 06e3 53090000 		.4byte	0x953
 2267 06e7 00       		.byte	0
 2268 06e8 0E       		.uleb128 0xe
 2269 06e9 87040000 		.4byte	.LASF64
 2270 06ed 01       		.byte	0x1
 2271 06ee 8804     		.2byte	0x488
 2272 06f0 00000000 		.4byte	.LFB32
 2273 06f4 28000000 		.4byte	.LFE32-.LFB32
 2274 06f8 01       		.uleb128 0x1
 2275 06f9 9C       		.byte	0x9c
 2276 06fa 31070000 		.4byte	0x731
 2277 06fe 11       		.uleb128 0x11
 2278 06ff 5A020000 		.4byte	.LASF62
 2279 0703 01       		.byte	0x1
 2280 0704 8804     		.2byte	0x488
 2281 0706 77000000 		.4byte	0x77
 2282 070a 0C040000 		.4byte	.LLST33
 2283 070e 0F       		.uleb128 0xf
 2284 070f 7C050000 		.4byte	.LASF27
 2285 0713 01       		.byte	0x1
 2286 0714 8A04     		.2byte	0x48a
 2287 0716 6B000000 		.4byte	0x6b
 2288 071a 38040000 		.4byte	.LLST34
 2289 071e 10       		.uleb128 0x10
 2290 071f 08000000 		.4byte	.LVL71
 2291 0723 48090000 		.4byte	0x948
 2292 0727 10       		.uleb128 0x10
 2293 0728 1E000000 		.4byte	.LVL72
 2294 072c 53090000 		.4byte	0x953
 2295 0730 00       		.byte	0
 2296 0731 0E       		.uleb128 0xe
 2297 0732 9E050000 		.4byte	.LASF65
 2298 0736 01       		.byte	0x1
 2299 0737 A804     		.2byte	0x4a8
 2300 0739 00000000 		.4byte	.LFB33
 2301 073d 24000000 		.4byte	.LFE33-.LFB33
 2302 0741 01       		.uleb128 0x1
 2303 0742 9C       		.byte	0x9c
 2304 0743 7A070000 		.4byte	0x77a
 2305 0747 11       		.uleb128 0x11
 2306 0748 5A020000 		.4byte	.LASF62
 2307 074c 01       		.byte	0x1
 2308 074d A804     		.2byte	0x4a8
 2309 074f 77000000 		.4byte	0x77
 2310 0753 4B040000 		.4byte	.LLST35
 2311 0757 0F       		.uleb128 0xf
 2312 0758 7C050000 		.4byte	.LASF27
 2313 075c 01       		.byte	0x1
 2314 075d AA04     		.2byte	0x4aa
 2315 075f 6B000000 		.4byte	0x6b
 2316 0763 77040000 		.4byte	.LLST36
 2317 0767 10       		.uleb128 0x10
 2318 0768 08000000 		.4byte	.LVL75
 2319 076c 48090000 		.4byte	0x948
 2320 0770 10       		.uleb128 0x10
 2321 0771 1E000000 		.4byte	.LVL76
 2322 0775 53090000 		.4byte	0x953
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 71


 2323 0779 00       		.byte	0
 2324 077a 0E       		.uleb128 0xe
 2325 077b 86020000 		.4byte	.LASF66
 2326 077f 01       		.byte	0x1
 2327 0780 C904     		.2byte	0x4c9
 2328 0782 00000000 		.4byte	.LFB34
 2329 0786 24000000 		.4byte	.LFE34-.LFB34
 2330 078a 01       		.uleb128 0x1
 2331 078b 9C       		.byte	0x9c
 2332 078c C3070000 		.4byte	0x7c3
 2333 0790 11       		.uleb128 0x11
 2334 0791 5A020000 		.4byte	.LASF62
 2335 0795 01       		.byte	0x1
 2336 0796 C904     		.2byte	0x4c9
 2337 0798 77000000 		.4byte	0x77
 2338 079c 8A040000 		.4byte	.LLST37
 2339 07a0 0F       		.uleb128 0xf
 2340 07a1 7C050000 		.4byte	.LASF27
 2341 07a5 01       		.byte	0x1
 2342 07a6 CB04     		.2byte	0x4cb
 2343 07a8 6B000000 		.4byte	0x6b
 2344 07ac B6040000 		.4byte	.LLST38
 2345 07b0 10       		.uleb128 0x10
 2346 07b1 08000000 		.4byte	.LVL79
 2347 07b5 48090000 		.4byte	0x948
 2348 07b9 10       		.uleb128 0x10
 2349 07ba 1E000000 		.4byte	.LVL80
 2350 07be 53090000 		.4byte	0x953
 2351 07c2 00       		.byte	0
 2352 07c3 0E       		.uleb128 0xe
 2353 07c4 ED040000 		.4byte	.LASF67
 2354 07c8 01       		.byte	0x1
 2355 07c9 F104     		.2byte	0x4f1
 2356 07cb 00000000 		.4byte	.LFB35
 2357 07cf 1C000000 		.4byte	.LFE35-.LFB35
 2358 07d3 01       		.uleb128 0x1
 2359 07d4 9C       		.byte	0x9c
 2360 07d5 1C080000 		.4byte	0x81c
 2361 07d9 11       		.uleb128 0x11
 2362 07da 66020000 		.4byte	.LASF44
 2363 07de 01       		.byte	0x1
 2364 07df F104     		.2byte	0x4f1
 2365 07e1 77000000 		.4byte	0x77
 2366 07e5 C9040000 		.4byte	.LLST39
 2367 07e9 11       		.uleb128 0x11
 2368 07ea DA020000 		.4byte	.LASF68
 2369 07ee 01       		.byte	0x1
 2370 07ef F104     		.2byte	0x4f1
 2371 07f1 77000000 		.4byte	0x77
 2372 07f5 EA040000 		.4byte	.LLST40
 2373 07f9 0F       		.uleb128 0xf
 2374 07fa 7C050000 		.4byte	.LASF27
 2375 07fe 01       		.byte	0x1
 2376 07ff F304     		.2byte	0x4f3
 2377 0801 6B000000 		.4byte	0x6b
 2378 0805 16050000 		.4byte	.LLST41
 2379 0809 10       		.uleb128 0x10
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 72


 2380 080a 0C000000 		.4byte	.LVL83
 2381 080e 48090000 		.4byte	0x948
 2382 0812 10       		.uleb128 0x10
 2383 0813 14000000 		.4byte	.LVL84
 2384 0817 53090000 		.4byte	0x953
 2385 081b 00       		.byte	0
 2386 081c 08       		.uleb128 0x8
 2387 081d 8C030000 		.4byte	.LASF69
 2388 0821 01       		.byte	0x1
 2389 0822 B1       		.byte	0xb1
 2390 0823 00000000 		.4byte	.LFB3
 2391 0827 24000000 		.4byte	.LFE3-.LFB3
 2392 082b 01       		.uleb128 0x1
 2393 082c 9C       		.byte	0x9c
 2394 082d 68080000 		.4byte	0x868
 2395 0831 15       		.uleb128 0x15
 2396 0832 7C050000 		.4byte	.LASF27
 2397 0836 01       		.byte	0x1
 2398 0837 B3       		.byte	0xb3
 2399 0838 6B000000 		.4byte	0x6b
 2400 083c 29050000 		.4byte	.LLST42
 2401 0840 10       		.uleb128 0x10
 2402 0841 08000000 		.4byte	.LVL86
 2403 0845 48090000 		.4byte	0x948
 2404 0849 10       		.uleb128 0x10
 2405 084a 14000000 		.4byte	.LVL87
 2406 084e 53090000 		.4byte	0x953
 2407 0852 16       		.uleb128 0x16
 2408 0853 1C000000 		.4byte	.LVL88
 2409 0857 C3070000 		.4byte	0x7c3
 2410 085b 17       		.uleb128 0x17
 2411 085c 01       		.uleb128 0x1
 2412 085d 51       		.byte	0x51
 2413 085e 01       		.uleb128 0x1
 2414 085f 48       		.byte	0x48
 2415 0860 17       		.uleb128 0x17
 2416 0861 01       		.uleb128 0x1
 2417 0862 50       		.byte	0x50
 2418 0863 02       		.uleb128 0x2
 2419 0864 74       		.byte	0x74
 2420 0865 00       		.sleb128 0
 2421 0866 00       		.byte	0
 2422 0867 00       		.byte	0
 2423 0868 08       		.uleb128 0x8
 2424 0869 D7040000 		.4byte	.LASF70
 2425 086d 01       		.byte	0x1
 2426 086e E6       		.byte	0xe6
 2427 086f 00000000 		.4byte	.LFB4
 2428 0873 1C000000 		.4byte	.LFE4-.LFB4
 2429 0877 01       		.uleb128 0x1
 2430 0878 9C       		.byte	0x9c
 2431 0879 90080000 		.4byte	0x890
 2432 087d 10       		.uleb128 0x10
 2433 087e 0E000000 		.4byte	.LVL89
 2434 0882 18010000 		.4byte	0x118
 2435 0886 10       		.uleb128 0x10
 2436 0887 16000000 		.4byte	.LVL90
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 73


 2437 088b 1C080000 		.4byte	0x81c
 2438 088f 00       		.byte	0
 2439 0890 14       		.uleb128 0x14
 2440 0891 76040000 		.4byte	.LASF71
 2441 0895 01       		.byte	0x1
 2442 0896 0E05     		.2byte	0x50e
 2443 0898 77000000 		.4byte	0x77
 2444 089c 00000000 		.4byte	.LFB36
 2445 08a0 14000000 		.4byte	.LFE36-.LFB36
 2446 08a4 01       		.uleb128 0x1
 2447 08a5 9C       		.byte	0x9c
 2448 08a6 12       		.uleb128 0x12
 2449 08a7 CA000000 		.4byte	0xca
 2450 08ab 00000000 		.4byte	.LFB37
 2451 08af 0C000000 		.4byte	.LFE37-.LFB37
 2452 08b3 01       		.uleb128 0x1
 2453 08b4 9C       		.byte	0x9c
 2454 08b5 C1080000 		.4byte	0x8c1
 2455 08b9 18       		.uleb128 0x18
 2456 08ba D7000000 		.4byte	0xd7
 2457 08be 01       		.uleb128 0x1
 2458 08bf 50       		.byte	0x50
 2459 08c0 00       		.byte	0
 2460 08c1 14       		.uleb128 0x14
 2461 08c2 99020000 		.4byte	.LASF72
 2462 08c6 01       		.byte	0x1
 2463 08c7 3E05     		.2byte	0x53e
 2464 08c9 77000000 		.4byte	0x77
 2465 08cd 00000000 		.4byte	.LFB38
 2466 08d1 0C000000 		.4byte	.LFE38-.LFB38
 2467 08d5 01       		.uleb128 0x1
 2468 08d6 9C       		.byte	0x9c
 2469 08d7 14       		.uleb128 0x14
 2470 08d8 37050000 		.4byte	.LASF73
 2471 08dc 01       		.byte	0x1
 2472 08dd 5505     		.2byte	0x555
 2473 08df 77000000 		.4byte	0x77
 2474 08e3 00000000 		.4byte	.LFB39
 2475 08e7 0C000000 		.4byte	.LFE39-.LFB39
 2476 08eb 01       		.uleb128 0x1
 2477 08ec 9C       		.byte	0x9c
 2478 08ed 0E       		.uleb128 0xe
 2479 08ee 16050000 		.4byte	.LASF74
 2480 08f2 01       		.byte	0x1
 2481 08f3 6C05     		.2byte	0x56c
 2482 08f5 00000000 		.4byte	.LFB40
 2483 08f9 0C000000 		.4byte	.LFE40-.LFB40
 2484 08fd 01       		.uleb128 0x1
 2485 08fe 9C       		.byte	0x9c
 2486 08ff 12090000 		.4byte	0x912
 2487 0903 19       		.uleb128 0x19
 2488 0904 FC030000 		.4byte	.LASF19
 2489 0908 01       		.byte	0x1
 2490 0909 6C05     		.2byte	0x56c
 2491 090b 77000000 		.4byte	0x77
 2492 090f 01       		.uleb128 0x1
 2493 0910 50       		.byte	0x50
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 74


 2494 0911 00       		.byte	0
 2495 0912 0E       		.uleb128 0xe
 2496 0913 ED010000 		.4byte	.LASF75
 2497 0917 01       		.byte	0x1
 2498 0918 8305     		.2byte	0x583
 2499 091a 00000000 		.4byte	.LFB41
 2500 091e 0C000000 		.4byte	.LFE41-.LFB41
 2501 0922 01       		.uleb128 0x1
 2502 0923 9C       		.byte	0x9c
 2503 0924 37090000 		.4byte	0x937
 2504 0928 19       		.uleb128 0x19
 2505 0929 FC030000 		.4byte	.LASF19
 2506 092d 01       		.byte	0x1
 2507 092e 8305     		.2byte	0x583
 2508 0930 77000000 		.4byte	0x77
 2509 0934 01       		.uleb128 0x1
 2510 0935 50       		.byte	0x50
 2511 0936 00       		.byte	0
 2512 0937 1A       		.uleb128 0x1a
 2513 0938 4A030000 		.4byte	.LASF79
 2514 093c 01       		.byte	0x1
 2515 093d 15       		.byte	0x15
 2516 093e 6B000000 		.4byte	0x6b
 2517 0942 05       		.uleb128 0x5
 2518 0943 03       		.byte	0x3
 2519 0944 00000000 		.4byte	TIMER_initVar
 2520 0948 1B       		.uleb128 0x1b
 2521 0949 FD020000 		.4byte	.LASF80
 2522 094d 03       		.byte	0x3
 2523 094e E5       		.byte	0xe5
 2524 094f 6B000000 		.4byte	0x6b
 2525 0953 1C       		.uleb128 0x1c
 2526 0954 D7010000 		.4byte	.LASF81
 2527 0958 03       		.byte	0x3
 2528 0959 E6       		.byte	0xe6
 2529 095a 1D       		.uleb128 0x1d
 2530 095b 6B000000 		.4byte	0x6b
 2531 095f 00       		.byte	0
 2532 0960 00       		.byte	0
 2533              		.section	.debug_abbrev,"",%progbits
 2534              	.Ldebug_abbrev0:
 2535 0000 01       		.uleb128 0x1
 2536 0001 11       		.uleb128 0x11
 2537 0002 01       		.byte	0x1
 2538 0003 25       		.uleb128 0x25
 2539 0004 0E       		.uleb128 0xe
 2540 0005 13       		.uleb128 0x13
 2541 0006 0B       		.uleb128 0xb
 2542 0007 03       		.uleb128 0x3
 2543 0008 0E       		.uleb128 0xe
 2544 0009 1B       		.uleb128 0x1b
 2545 000a 0E       		.uleb128 0xe
 2546 000b 55       		.uleb128 0x55
 2547 000c 17       		.uleb128 0x17
 2548 000d 11       		.uleb128 0x11
 2549 000e 01       		.uleb128 0x1
 2550 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 75


 2551 0010 17       		.uleb128 0x17
 2552 0011 00       		.byte	0
 2553 0012 00       		.byte	0
 2554 0013 02       		.uleb128 0x2
 2555 0014 24       		.uleb128 0x24
 2556 0015 00       		.byte	0
 2557 0016 0B       		.uleb128 0xb
 2558 0017 0B       		.uleb128 0xb
 2559 0018 3E       		.uleb128 0x3e
 2560 0019 0B       		.uleb128 0xb
 2561 001a 03       		.uleb128 0x3
 2562 001b 0E       		.uleb128 0xe
 2563 001c 00       		.byte	0
 2564 001d 00       		.byte	0
 2565 001e 03       		.uleb128 0x3
 2566 001f 24       		.uleb128 0x24
 2567 0020 00       		.byte	0
 2568 0021 0B       		.uleb128 0xb
 2569 0022 0B       		.uleb128 0xb
 2570 0023 3E       		.uleb128 0x3e
 2571 0024 0B       		.uleb128 0xb
 2572 0025 03       		.uleb128 0x3
 2573 0026 08       		.uleb128 0x8
 2574 0027 00       		.byte	0
 2575 0028 00       		.byte	0
 2576 0029 04       		.uleb128 0x4
 2577 002a 16       		.uleb128 0x16
 2578 002b 00       		.byte	0
 2579 002c 03       		.uleb128 0x3
 2580 002d 0E       		.uleb128 0xe
 2581 002e 3A       		.uleb128 0x3a
 2582 002f 0B       		.uleb128 0xb
 2583 0030 3B       		.uleb128 0x3b
 2584 0031 05       		.uleb128 0x5
 2585 0032 49       		.uleb128 0x49
 2586 0033 13       		.uleb128 0x13
 2587 0034 00       		.byte	0
 2588 0035 00       		.byte	0
 2589 0036 05       		.uleb128 0x5
 2590 0037 35       		.uleb128 0x35
 2591 0038 00       		.byte	0
 2592 0039 49       		.uleb128 0x49
 2593 003a 13       		.uleb128 0x13
 2594 003b 00       		.byte	0
 2595 003c 00       		.byte	0
 2596 003d 06       		.uleb128 0x6
 2597 003e 2E       		.uleb128 0x2e
 2598 003f 01       		.byte	0x1
 2599 0040 3F       		.uleb128 0x3f
 2600 0041 19       		.uleb128 0x19
 2601 0042 03       		.uleb128 0x3
 2602 0043 0E       		.uleb128 0xe
 2603 0044 3A       		.uleb128 0x3a
 2604 0045 0B       		.uleb128 0xb
 2605 0046 3B       		.uleb128 0x3b
 2606 0047 05       		.uleb128 0x5
 2607 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 76


 2608 0049 19       		.uleb128 0x19
 2609 004a 20       		.uleb128 0x20
 2610 004b 0B       		.uleb128 0xb
 2611 004c 01       		.uleb128 0x1
 2612 004d 13       		.uleb128 0x13
 2613 004e 00       		.byte	0
 2614 004f 00       		.byte	0
 2615 0050 07       		.uleb128 0x7
 2616 0051 05       		.uleb128 0x5
 2617 0052 00       		.byte	0
 2618 0053 03       		.uleb128 0x3
 2619 0054 0E       		.uleb128 0xe
 2620 0055 3A       		.uleb128 0x3a
 2621 0056 0B       		.uleb128 0xb
 2622 0057 3B       		.uleb128 0x3b
 2623 0058 05       		.uleb128 0x5
 2624 0059 49       		.uleb128 0x49
 2625 005a 13       		.uleb128 0x13
 2626 005b 00       		.byte	0
 2627 005c 00       		.byte	0
 2628 005d 08       		.uleb128 0x8
 2629 005e 2E       		.uleb128 0x2e
 2630 005f 01       		.byte	0x1
 2631 0060 3F       		.uleb128 0x3f
 2632 0061 19       		.uleb128 0x19
 2633 0062 03       		.uleb128 0x3
 2634 0063 0E       		.uleb128 0xe
 2635 0064 3A       		.uleb128 0x3a
 2636 0065 0B       		.uleb128 0xb
 2637 0066 3B       		.uleb128 0x3b
 2638 0067 0B       		.uleb128 0xb
 2639 0068 27       		.uleb128 0x27
 2640 0069 19       		.uleb128 0x19
 2641 006a 11       		.uleb128 0x11
 2642 006b 01       		.uleb128 0x1
 2643 006c 12       		.uleb128 0x12
 2644 006d 06       		.uleb128 0x6
 2645 006e 40       		.uleb128 0x40
 2646 006f 18       		.uleb128 0x18
 2647 0070 9742     		.uleb128 0x2117
 2648 0072 19       		.uleb128 0x19
 2649 0073 01       		.uleb128 0x1
 2650 0074 13       		.uleb128 0x13
 2651 0075 00       		.byte	0
 2652 0076 00       		.byte	0
 2653 0077 09       		.uleb128 0x9
 2654 0078 1D       		.uleb128 0x1d
 2655 0079 01       		.byte	0x1
 2656 007a 31       		.uleb128 0x31
 2657 007b 13       		.uleb128 0x13
 2658 007c 52       		.uleb128 0x52
 2659 007d 01       		.uleb128 0x1
 2660 007e 55       		.uleb128 0x55
 2661 007f 17       		.uleb128 0x17
 2662 0080 58       		.uleb128 0x58
 2663 0081 0B       		.uleb128 0xb
 2664 0082 59       		.uleb128 0x59
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 77


 2665 0083 0B       		.uleb128 0xb
 2666 0084 01       		.uleb128 0x1
 2667 0085 13       		.uleb128 0x13
 2668 0086 00       		.byte	0
 2669 0087 00       		.byte	0
 2670 0088 0A       		.uleb128 0xa
 2671 0089 05       		.uleb128 0x5
 2672 008a 00       		.byte	0
 2673 008b 31       		.uleb128 0x31
 2674 008c 13       		.uleb128 0x13
 2675 008d 1C       		.uleb128 0x1c
 2676 008e 0B       		.uleb128 0xb
 2677 008f 00       		.byte	0
 2678 0090 00       		.byte	0
 2679 0091 0B       		.uleb128 0xb
 2680 0092 1D       		.uleb128 0x1d
 2681 0093 01       		.byte	0x1
 2682 0094 31       		.uleb128 0x31
 2683 0095 13       		.uleb128 0x13
 2684 0096 11       		.uleb128 0x11
 2685 0097 01       		.uleb128 0x1
 2686 0098 12       		.uleb128 0x12
 2687 0099 06       		.uleb128 0x6
 2688 009a 58       		.uleb128 0x58
 2689 009b 0B       		.uleb128 0xb
 2690 009c 59       		.uleb128 0x59
 2691 009d 0B       		.uleb128 0xb
 2692 009e 01       		.uleb128 0x1
 2693 009f 13       		.uleb128 0x13
 2694 00a0 00       		.byte	0
 2695 00a1 00       		.byte	0
 2696 00a2 0C       		.uleb128 0xc
 2697 00a3 05       		.uleb128 0x5
 2698 00a4 00       		.byte	0
 2699 00a5 31       		.uleb128 0x31
 2700 00a6 13       		.uleb128 0x13
 2701 00a7 1C       		.uleb128 0x1c
 2702 00a8 05       		.uleb128 0x5
 2703 00a9 00       		.byte	0
 2704 00aa 00       		.byte	0
 2705 00ab 0D       		.uleb128 0xd
 2706 00ac 1D       		.uleb128 0x1d
 2707 00ad 01       		.byte	0x1
 2708 00ae 31       		.uleb128 0x31
 2709 00af 13       		.uleb128 0x13
 2710 00b0 11       		.uleb128 0x11
 2711 00b1 01       		.uleb128 0x1
 2712 00b2 12       		.uleb128 0x12
 2713 00b3 06       		.uleb128 0x6
 2714 00b4 58       		.uleb128 0x58
 2715 00b5 0B       		.uleb128 0xb
 2716 00b6 59       		.uleb128 0x59
 2717 00b7 0B       		.uleb128 0xb
 2718 00b8 00       		.byte	0
 2719 00b9 00       		.byte	0
 2720 00ba 0E       		.uleb128 0xe
 2721 00bb 2E       		.uleb128 0x2e
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 78


 2722 00bc 01       		.byte	0x1
 2723 00bd 3F       		.uleb128 0x3f
 2724 00be 19       		.uleb128 0x19
 2725 00bf 03       		.uleb128 0x3
 2726 00c0 0E       		.uleb128 0xe
 2727 00c1 3A       		.uleb128 0x3a
 2728 00c2 0B       		.uleb128 0xb
 2729 00c3 3B       		.uleb128 0x3b
 2730 00c4 05       		.uleb128 0x5
 2731 00c5 27       		.uleb128 0x27
 2732 00c6 19       		.uleb128 0x19
 2733 00c7 11       		.uleb128 0x11
 2734 00c8 01       		.uleb128 0x1
 2735 00c9 12       		.uleb128 0x12
 2736 00ca 06       		.uleb128 0x6
 2737 00cb 40       		.uleb128 0x40
 2738 00cc 18       		.uleb128 0x18
 2739 00cd 9742     		.uleb128 0x2117
 2740 00cf 19       		.uleb128 0x19
 2741 00d0 01       		.uleb128 0x1
 2742 00d1 13       		.uleb128 0x13
 2743 00d2 00       		.byte	0
 2744 00d3 00       		.byte	0
 2745 00d4 0F       		.uleb128 0xf
 2746 00d5 34       		.uleb128 0x34
 2747 00d6 00       		.byte	0
 2748 00d7 03       		.uleb128 0x3
 2749 00d8 0E       		.uleb128 0xe
 2750 00d9 3A       		.uleb128 0x3a
 2751 00da 0B       		.uleb128 0xb
 2752 00db 3B       		.uleb128 0x3b
 2753 00dc 05       		.uleb128 0x5
 2754 00dd 49       		.uleb128 0x49
 2755 00de 13       		.uleb128 0x13
 2756 00df 02       		.uleb128 0x2
 2757 00e0 17       		.uleb128 0x17
 2758 00e1 00       		.byte	0
 2759 00e2 00       		.byte	0
 2760 00e3 10       		.uleb128 0x10
 2761 00e4 898201   		.uleb128 0x4109
 2762 00e7 00       		.byte	0
 2763 00e8 11       		.uleb128 0x11
 2764 00e9 01       		.uleb128 0x1
 2765 00ea 31       		.uleb128 0x31
 2766 00eb 13       		.uleb128 0x13
 2767 00ec 00       		.byte	0
 2768 00ed 00       		.byte	0
 2769 00ee 11       		.uleb128 0x11
 2770 00ef 05       		.uleb128 0x5
 2771 00f0 00       		.byte	0
 2772 00f1 03       		.uleb128 0x3
 2773 00f2 0E       		.uleb128 0xe
 2774 00f3 3A       		.uleb128 0x3a
 2775 00f4 0B       		.uleb128 0xb
 2776 00f5 3B       		.uleb128 0x3b
 2777 00f6 05       		.uleb128 0x5
 2778 00f7 49       		.uleb128 0x49
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 79


 2779 00f8 13       		.uleb128 0x13
 2780 00f9 02       		.uleb128 0x2
 2781 00fa 17       		.uleb128 0x17
 2782 00fb 00       		.byte	0
 2783 00fc 00       		.byte	0
 2784 00fd 12       		.uleb128 0x12
 2785 00fe 2E       		.uleb128 0x2e
 2786 00ff 01       		.byte	0x1
 2787 0100 31       		.uleb128 0x31
 2788 0101 13       		.uleb128 0x13
 2789 0102 11       		.uleb128 0x11
 2790 0103 01       		.uleb128 0x1
 2791 0104 12       		.uleb128 0x12
 2792 0105 06       		.uleb128 0x6
 2793 0106 40       		.uleb128 0x40
 2794 0107 18       		.uleb128 0x18
 2795 0108 9742     		.uleb128 0x2117
 2796 010a 19       		.uleb128 0x19
 2797 010b 01       		.uleb128 0x1
 2798 010c 13       		.uleb128 0x13
 2799 010d 00       		.byte	0
 2800 010e 00       		.byte	0
 2801 010f 13       		.uleb128 0x13
 2802 0110 05       		.uleb128 0x5
 2803 0111 00       		.byte	0
 2804 0112 31       		.uleb128 0x31
 2805 0113 13       		.uleb128 0x13
 2806 0114 02       		.uleb128 0x2
 2807 0115 17       		.uleb128 0x17
 2808 0116 00       		.byte	0
 2809 0117 00       		.byte	0
 2810 0118 14       		.uleb128 0x14
 2811 0119 2E       		.uleb128 0x2e
 2812 011a 00       		.byte	0
 2813 011b 3F       		.uleb128 0x3f
 2814 011c 19       		.uleb128 0x19
 2815 011d 03       		.uleb128 0x3
 2816 011e 0E       		.uleb128 0xe
 2817 011f 3A       		.uleb128 0x3a
 2818 0120 0B       		.uleb128 0xb
 2819 0121 3B       		.uleb128 0x3b
 2820 0122 05       		.uleb128 0x5
 2821 0123 27       		.uleb128 0x27
 2822 0124 19       		.uleb128 0x19
 2823 0125 49       		.uleb128 0x49
 2824 0126 13       		.uleb128 0x13
 2825 0127 11       		.uleb128 0x11
 2826 0128 01       		.uleb128 0x1
 2827 0129 12       		.uleb128 0x12
 2828 012a 06       		.uleb128 0x6
 2829 012b 40       		.uleb128 0x40
 2830 012c 18       		.uleb128 0x18
 2831 012d 9742     		.uleb128 0x2117
 2832 012f 19       		.uleb128 0x19
 2833 0130 00       		.byte	0
 2834 0131 00       		.byte	0
 2835 0132 15       		.uleb128 0x15
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 80


 2836 0133 34       		.uleb128 0x34
 2837 0134 00       		.byte	0
 2838 0135 03       		.uleb128 0x3
 2839 0136 0E       		.uleb128 0xe
 2840 0137 3A       		.uleb128 0x3a
 2841 0138 0B       		.uleb128 0xb
 2842 0139 3B       		.uleb128 0x3b
 2843 013a 0B       		.uleb128 0xb
 2844 013b 49       		.uleb128 0x49
 2845 013c 13       		.uleb128 0x13
 2846 013d 02       		.uleb128 0x2
 2847 013e 17       		.uleb128 0x17
 2848 013f 00       		.byte	0
 2849 0140 00       		.byte	0
 2850 0141 16       		.uleb128 0x16
 2851 0142 898201   		.uleb128 0x4109
 2852 0145 01       		.byte	0x1
 2853 0146 11       		.uleb128 0x11
 2854 0147 01       		.uleb128 0x1
 2855 0148 31       		.uleb128 0x31
 2856 0149 13       		.uleb128 0x13
 2857 014a 00       		.byte	0
 2858 014b 00       		.byte	0
 2859 014c 17       		.uleb128 0x17
 2860 014d 8A8201   		.uleb128 0x410a
 2861 0150 00       		.byte	0
 2862 0151 02       		.uleb128 0x2
 2863 0152 18       		.uleb128 0x18
 2864 0153 9142     		.uleb128 0x2111
 2865 0155 18       		.uleb128 0x18
 2866 0156 00       		.byte	0
 2867 0157 00       		.byte	0
 2868 0158 18       		.uleb128 0x18
 2869 0159 05       		.uleb128 0x5
 2870 015a 00       		.byte	0
 2871 015b 31       		.uleb128 0x31
 2872 015c 13       		.uleb128 0x13
 2873 015d 02       		.uleb128 0x2
 2874 015e 18       		.uleb128 0x18
 2875 015f 00       		.byte	0
 2876 0160 00       		.byte	0
 2877 0161 19       		.uleb128 0x19
 2878 0162 05       		.uleb128 0x5
 2879 0163 00       		.byte	0
 2880 0164 03       		.uleb128 0x3
 2881 0165 0E       		.uleb128 0xe
 2882 0166 3A       		.uleb128 0x3a
 2883 0167 0B       		.uleb128 0xb
 2884 0168 3B       		.uleb128 0x3b
 2885 0169 05       		.uleb128 0x5
 2886 016a 49       		.uleb128 0x49
 2887 016b 13       		.uleb128 0x13
 2888 016c 02       		.uleb128 0x2
 2889 016d 18       		.uleb128 0x18
 2890 016e 00       		.byte	0
 2891 016f 00       		.byte	0
 2892 0170 1A       		.uleb128 0x1a
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 81


 2893 0171 34       		.uleb128 0x34
 2894 0172 00       		.byte	0
 2895 0173 03       		.uleb128 0x3
 2896 0174 0E       		.uleb128 0xe
 2897 0175 3A       		.uleb128 0x3a
 2898 0176 0B       		.uleb128 0xb
 2899 0177 3B       		.uleb128 0x3b
 2900 0178 0B       		.uleb128 0xb
 2901 0179 49       		.uleb128 0x49
 2902 017a 13       		.uleb128 0x13
 2903 017b 3F       		.uleb128 0x3f
 2904 017c 19       		.uleb128 0x19
 2905 017d 02       		.uleb128 0x2
 2906 017e 18       		.uleb128 0x18
 2907 017f 00       		.byte	0
 2908 0180 00       		.byte	0
 2909 0181 1B       		.uleb128 0x1b
 2910 0182 2E       		.uleb128 0x2e
 2911 0183 00       		.byte	0
 2912 0184 3F       		.uleb128 0x3f
 2913 0185 19       		.uleb128 0x19
 2914 0186 03       		.uleb128 0x3
 2915 0187 0E       		.uleb128 0xe
 2916 0188 3A       		.uleb128 0x3a
 2917 0189 0B       		.uleb128 0xb
 2918 018a 3B       		.uleb128 0x3b
 2919 018b 0B       		.uleb128 0xb
 2920 018c 27       		.uleb128 0x27
 2921 018d 19       		.uleb128 0x19
 2922 018e 49       		.uleb128 0x49
 2923 018f 13       		.uleb128 0x13
 2924 0190 3C       		.uleb128 0x3c
 2925 0191 19       		.uleb128 0x19
 2926 0192 00       		.byte	0
 2927 0193 00       		.byte	0
 2928 0194 1C       		.uleb128 0x1c
 2929 0195 2E       		.uleb128 0x2e
 2930 0196 01       		.byte	0x1
 2931 0197 3F       		.uleb128 0x3f
 2932 0198 19       		.uleb128 0x19
 2933 0199 03       		.uleb128 0x3
 2934 019a 0E       		.uleb128 0xe
 2935 019b 3A       		.uleb128 0x3a
 2936 019c 0B       		.uleb128 0xb
 2937 019d 3B       		.uleb128 0x3b
 2938 019e 0B       		.uleb128 0xb
 2939 019f 27       		.uleb128 0x27
 2940 01a0 19       		.uleb128 0x19
 2941 01a1 3C       		.uleb128 0x3c
 2942 01a2 19       		.uleb128 0x19
 2943 01a3 00       		.byte	0
 2944 01a4 00       		.byte	0
 2945 01a5 1D       		.uleb128 0x1d
 2946 01a6 05       		.uleb128 0x5
 2947 01a7 00       		.byte	0
 2948 01a8 49       		.uleb128 0x49
 2949 01a9 13       		.uleb128 0x13
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 82


 2950 01aa 00       		.byte	0
 2951 01ab 00       		.byte	0
 2952 01ac 00       		.byte	0
 2953              		.section	.debug_loc,"",%progbits
 2954              	.Ldebug_loc0:
 2955              	.LLST0:
 2956 0000 06000000 		.4byte	.LVL4
 2957 0004 13000000 		.4byte	.LVL5-1
 2958 0008 0100     		.2byte	0x1
 2959 000a 50       		.byte	0x50
 2960 000b 00000000 		.4byte	0
 2961 000f 00000000 		.4byte	0
 2962              	.LLST1:
 2963 0013 00000000 		.4byte	.LVL6
 2964 0017 07000000 		.4byte	.LVL7-1
 2965 001b 0100     		.2byte	0x1
 2966 001d 50       		.byte	0x50
 2967 001e 07000000 		.4byte	.LVL7-1
 2968 0022 1C000000 		.4byte	.LVL9
 2969 0026 0100     		.2byte	0x1
 2970 0028 54       		.byte	0x54
 2971 0029 1C000000 		.4byte	.LVL9
 2972 002d 28000000 		.4byte	.LFE6
 2973 0031 0400     		.2byte	0x4
 2974 0033 F3       		.byte	0xf3
 2975 0034 01       		.uleb128 0x1
 2976 0035 50       		.byte	0x50
 2977 0036 9F       		.byte	0x9f
 2978 0037 00000000 		.4byte	0
 2979 003b 00000000 		.4byte	0
 2980              	.LLST2:
 2981 003f 08000000 		.4byte	.LVL7
 2982 0043 1B000000 		.4byte	.LVL8-1
 2983 0047 0100     		.2byte	0x1
 2984 0049 50       		.byte	0x50
 2985 004a 00000000 		.4byte	0
 2986 004e 00000000 		.4byte	0
 2987              	.LLST3:
 2988 0052 00000000 		.4byte	.LVL10
 2989 0056 07000000 		.4byte	.LVL11-1
 2990 005a 0100     		.2byte	0x1
 2991 005c 50       		.byte	0x50
 2992 005d 07000000 		.4byte	.LVL11-1
 2993 0061 1C000000 		.4byte	.LVL13
 2994 0065 0100     		.2byte	0x1
 2995 0067 54       		.byte	0x54
 2996 0068 1C000000 		.4byte	.LVL13
 2997 006c 28000000 		.4byte	.LFE7
 2998 0070 0400     		.2byte	0x4
 2999 0072 F3       		.byte	0xf3
 3000 0073 01       		.uleb128 0x1
 3001 0074 50       		.byte	0x50
 3002 0075 9F       		.byte	0x9f
 3003 0076 00000000 		.4byte	0
 3004 007a 00000000 		.4byte	0
 3005              	.LLST4:
 3006 007e 08000000 		.4byte	.LVL11
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 83


 3007 0082 1B000000 		.4byte	.LVL12-1
 3008 0086 0100     		.2byte	0x1
 3009 0088 50       		.byte	0x50
 3010 0089 00000000 		.4byte	0
 3011 008d 00000000 		.4byte	0
 3012              	.LLST5:
 3013 0091 00000000 		.4byte	.LVL14
 3014 0095 07000000 		.4byte	.LVL15-1
 3015 0099 0100     		.2byte	0x1
 3016 009b 50       		.byte	0x50
 3017 009c 07000000 		.4byte	.LVL15-1
 3018 00a0 1C000000 		.4byte	.LVL17
 3019 00a4 0100     		.2byte	0x1
 3020 00a6 54       		.byte	0x54
 3021 00a7 1C000000 		.4byte	.LVL17
 3022 00ab 28000000 		.4byte	.LFE8
 3023 00af 0400     		.2byte	0x4
 3024 00b1 F3       		.byte	0xf3
 3025 00b2 01       		.uleb128 0x1
 3026 00b3 50       		.byte	0x50
 3027 00b4 9F       		.byte	0x9f
 3028 00b5 00000000 		.4byte	0
 3029 00b9 00000000 		.4byte	0
 3030              	.LLST6:
 3031 00bd 08000000 		.4byte	.LVL15
 3032 00c1 1B000000 		.4byte	.LVL16-1
 3033 00c5 0100     		.2byte	0x1
 3034 00c7 50       		.byte	0x50
 3035 00c8 00000000 		.4byte	0
 3036 00cc 00000000 		.4byte	0
 3037              	.LLST7:
 3038 00d0 00000000 		.4byte	.LVL18
 3039 00d4 07000000 		.4byte	.LVL19-1
 3040 00d8 0100     		.2byte	0x1
 3041 00da 50       		.byte	0x50
 3042 00db 07000000 		.4byte	.LVL19-1
 3043 00df 22000000 		.4byte	.LVL21
 3044 00e3 0100     		.2byte	0x1
 3045 00e5 54       		.byte	0x54
 3046 00e6 22000000 		.4byte	.LVL21
 3047 00ea 2C000000 		.4byte	.LFE9
 3048 00ee 0400     		.2byte	0x4
 3049 00f0 F3       		.byte	0xf3
 3050 00f1 01       		.uleb128 0x1
 3051 00f2 50       		.byte	0x50
 3052 00f3 9F       		.byte	0x9f
 3053 00f4 00000000 		.4byte	0
 3054 00f8 00000000 		.4byte	0
 3055              	.LLST8:
 3056 00fc 08000000 		.4byte	.LVL19
 3057 0100 21000000 		.4byte	.LVL20-1
 3058 0104 0100     		.2byte	0x1
 3059 0106 50       		.byte	0x50
 3060 0107 00000000 		.4byte	0
 3061 010b 00000000 		.4byte	0
 3062              	.LLST9:
 3063 010f 00000000 		.4byte	.LVL22
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 84


 3064 0113 04000000 		.4byte	.LVL23
 3065 0117 0100     		.2byte	0x1
 3066 0119 50       		.byte	0x50
 3067 011a 04000000 		.4byte	.LVL23
 3068 011e 10000000 		.4byte	.LFE10
 3069 0122 0400     		.2byte	0x4
 3070 0124 F3       		.byte	0xf3
 3071 0125 01       		.uleb128 0x1
 3072 0126 50       		.byte	0x50
 3073 0127 9F       		.byte	0x9f
 3074 0128 00000000 		.4byte	0
 3075 012c 00000000 		.4byte	0
 3076              	.LLST10:
 3077 0130 00000000 		.4byte	.LVL24
 3078 0134 07000000 		.4byte	.LVL25-1
 3079 0138 0100     		.2byte	0x1
 3080 013a 50       		.byte	0x50
 3081 013b 07000000 		.4byte	.LVL25-1
 3082 013f 22000000 		.4byte	.LVL27
 3083 0143 0100     		.2byte	0x1
 3084 0145 54       		.byte	0x54
 3085 0146 22000000 		.4byte	.LVL27
 3086 014a 28000000 		.4byte	.LFE11
 3087 014e 0400     		.2byte	0x4
 3088 0150 F3       		.byte	0xf3
 3089 0151 01       		.uleb128 0x1
 3090 0152 50       		.byte	0x50
 3091 0153 9F       		.byte	0x9f
 3092 0154 00000000 		.4byte	0
 3093 0158 00000000 		.4byte	0
 3094              	.LLST11:
 3095 015c 08000000 		.4byte	.LVL25
 3096 0160 21000000 		.4byte	.LVL26-1
 3097 0164 0100     		.2byte	0x1
 3098 0166 50       		.byte	0x50
 3099 0167 00000000 		.4byte	0
 3100 016b 00000000 		.4byte	0
 3101              	.LLST12:
 3102 016f 00000000 		.4byte	.LVL28
 3103 0173 07000000 		.4byte	.LVL29-1
 3104 0177 0100     		.2byte	0x1
 3105 0179 50       		.byte	0x50
 3106 017a 07000000 		.4byte	.LVL29-1
 3107 017e 22000000 		.4byte	.LVL31
 3108 0182 0100     		.2byte	0x1
 3109 0184 54       		.byte	0x54
 3110 0185 22000000 		.4byte	.LVL31
 3111 0189 28000000 		.4byte	.LFE12
 3112 018d 0400     		.2byte	0x4
 3113 018f F3       		.byte	0xf3
 3114 0190 01       		.uleb128 0x1
 3115 0191 50       		.byte	0x50
 3116 0192 9F       		.byte	0x9f
 3117 0193 00000000 		.4byte	0
 3118 0197 00000000 		.4byte	0
 3119              	.LLST13:
 3120 019b 08000000 		.4byte	.LVL29
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 85


 3121 019f 21000000 		.4byte	.LVL30-1
 3122 01a3 0100     		.2byte	0x1
 3123 01a5 50       		.byte	0x50
 3124 01a6 00000000 		.4byte	0
 3125 01aa 00000000 		.4byte	0
 3126              	.LLST14:
 3127 01ae 00000000 		.4byte	.LVL32
 3128 01b2 07000000 		.4byte	.LVL33-1
 3129 01b6 0100     		.2byte	0x1
 3130 01b8 50       		.byte	0x50
 3131 01b9 07000000 		.4byte	.LVL33-1
 3132 01bd 10000000 		.4byte	.LVL34
 3133 01c1 0100     		.2byte	0x1
 3134 01c3 54       		.byte	0x54
 3135 01c4 10000000 		.4byte	.LVL34
 3136 01c8 2C000000 		.4byte	.LFE13
 3137 01cc 0400     		.2byte	0x4
 3138 01ce F3       		.byte	0xf3
 3139 01cf 01       		.uleb128 0x1
 3140 01d0 50       		.byte	0x50
 3141 01d1 9F       		.byte	0x9f
 3142 01d2 00000000 		.4byte	0
 3143 01d6 00000000 		.4byte	0
 3144              	.LLST15:
 3145 01da 08000000 		.4byte	.LVL33
 3146 01de 1F000000 		.4byte	.LVL35-1
 3147 01e2 0100     		.2byte	0x1
 3148 01e4 50       		.byte	0x50
 3149 01e5 00000000 		.4byte	0
 3150 01e9 00000000 		.4byte	0
 3151              	.LLST16:
 3152 01ed 00000000 		.4byte	.LVL36
 3153 01f1 07000000 		.4byte	.LVL37-1
 3154 01f5 0100     		.2byte	0x1
 3155 01f7 50       		.byte	0x50
 3156 01f8 07000000 		.4byte	.LVL37-1
 3157 01fc 1C000000 		.4byte	.LVL39
 3158 0200 0100     		.2byte	0x1
 3159 0202 54       		.byte	0x54
 3160 0203 1C000000 		.4byte	.LVL39
 3161 0207 28000000 		.4byte	.LFE14
 3162 020b 0400     		.2byte	0x4
 3163 020d F3       		.byte	0xf3
 3164 020e 01       		.uleb128 0x1
 3165 020f 50       		.byte	0x50
 3166 0210 9F       		.byte	0x9f
 3167 0211 00000000 		.4byte	0
 3168 0215 00000000 		.4byte	0
 3169              	.LLST17:
 3170 0219 08000000 		.4byte	.LVL37
 3171 021d 1B000000 		.4byte	.LVL38-1
 3172 0221 0100     		.2byte	0x1
 3173 0223 50       		.byte	0x50
 3174 0224 00000000 		.4byte	0
 3175 0228 00000000 		.4byte	0
 3176              	.LLST18:
 3177 022c 00000000 		.4byte	.LVL40
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 86


 3178 0230 04000000 		.4byte	.LVL41
 3179 0234 0100     		.2byte	0x1
 3180 0236 50       		.byte	0x50
 3181 0237 04000000 		.4byte	.LVL41
 3182 023b 0C000000 		.4byte	.LFE15
 3183 023f 0400     		.2byte	0x4
 3184 0241 F3       		.byte	0xf3
 3185 0242 01       		.uleb128 0x1
 3186 0243 50       		.byte	0x50
 3187 0244 9F       		.byte	0x9f
 3188 0245 00000000 		.4byte	0
 3189 0249 00000000 		.4byte	0
 3190              	.LLST19:
 3191 024d 00000000 		.4byte	.LVL42
 3192 0251 07000000 		.4byte	.LVL43-1
 3193 0255 0100     		.2byte	0x1
 3194 0257 50       		.byte	0x50
 3195 0258 07000000 		.4byte	.LVL43-1
 3196 025c 1C000000 		.4byte	.LVL45
 3197 0260 0100     		.2byte	0x1
 3198 0262 54       		.byte	0x54
 3199 0263 1C000000 		.4byte	.LVL45
 3200 0267 28000000 		.4byte	.LFE17
 3201 026b 0400     		.2byte	0x4
 3202 026d F3       		.byte	0xf3
 3203 026e 01       		.uleb128 0x1
 3204 026f 50       		.byte	0x50
 3205 0270 9F       		.byte	0x9f
 3206 0271 00000000 		.4byte	0
 3207 0275 00000000 		.4byte	0
 3208              	.LLST20:
 3209 0279 08000000 		.4byte	.LVL43
 3210 027d 1B000000 		.4byte	.LVL44-1
 3211 0281 0100     		.2byte	0x1
 3212 0283 50       		.byte	0x50
 3213 0284 00000000 		.4byte	0
 3214 0288 00000000 		.4byte	0
 3215              	.LLST21:
 3216 028c 00000000 		.4byte	.LVL46
 3217 0290 04000000 		.4byte	.LVL47
 3218 0294 0100     		.2byte	0x1
 3219 0296 50       		.byte	0x50
 3220 0297 04000000 		.4byte	.LVL47
 3221 029b 0C000000 		.4byte	.LFE18
 3222 029f 0400     		.2byte	0x4
 3223 02a1 F3       		.byte	0xf3
 3224 02a2 01       		.uleb128 0x1
 3225 02a3 50       		.byte	0x50
 3226 02a4 9F       		.byte	0x9f
 3227 02a5 00000000 		.4byte	0
 3228 02a9 00000000 		.4byte	0
 3229              	.LLST22:
 3230 02ad 00000000 		.4byte	.LVL48
 3231 02b1 07000000 		.4byte	.LVL49-1
 3232 02b5 0100     		.2byte	0x1
 3233 02b7 50       		.byte	0x50
 3234 02b8 07000000 		.4byte	.LVL49-1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 87


 3235 02bc 1E000000 		.4byte	.LVL51
 3236 02c0 0100     		.2byte	0x1
 3237 02c2 54       		.byte	0x54
 3238 02c3 1E000000 		.4byte	.LVL51
 3239 02c7 24000000 		.4byte	.LFE20
 3240 02cb 0400     		.2byte	0x4
 3241 02cd F3       		.byte	0xf3
 3242 02ce 01       		.uleb128 0x1
 3243 02cf 50       		.byte	0x50
 3244 02d0 9F       		.byte	0x9f
 3245 02d1 00000000 		.4byte	0
 3246 02d5 00000000 		.4byte	0
 3247              	.LLST23:
 3248 02d9 08000000 		.4byte	.LVL49
 3249 02dd 1D000000 		.4byte	.LVL50-1
 3250 02e1 0100     		.2byte	0x1
 3251 02e3 50       		.byte	0x50
 3252 02e4 00000000 		.4byte	0
 3253 02e8 00000000 		.4byte	0
 3254              	.LLST24:
 3255 02ec 00000000 		.4byte	.LVL52
 3256 02f0 04000000 		.4byte	.LVL53
 3257 02f4 0100     		.2byte	0x1
 3258 02f6 50       		.byte	0x50
 3259 02f7 04000000 		.4byte	.LVL53
 3260 02fb 0C000000 		.4byte	.LFE21
 3261 02ff 0400     		.2byte	0x4
 3262 0301 F3       		.byte	0xf3
 3263 0302 01       		.uleb128 0x1
 3264 0303 50       		.byte	0x50
 3265 0304 9F       		.byte	0x9f
 3266 0305 00000000 		.4byte	0
 3267 0309 00000000 		.4byte	0
 3268              	.LLST25:
 3269 030d 00000000 		.4byte	.LVL54
 3270 0311 07000000 		.4byte	.LVL55-1
 3271 0315 0100     		.2byte	0x1
 3272 0317 50       		.byte	0x50
 3273 0318 07000000 		.4byte	.LVL55-1
 3274 031c 22000000 		.4byte	.LVL57
 3275 0320 0100     		.2byte	0x1
 3276 0322 54       		.byte	0x54
 3277 0323 22000000 		.4byte	.LVL57
 3278 0327 28000000 		.4byte	.LFE23
 3279 032b 0400     		.2byte	0x4
 3280 032d F3       		.byte	0xf3
 3281 032e 01       		.uleb128 0x1
 3282 032f 50       		.byte	0x50
 3283 0330 9F       		.byte	0x9f
 3284 0331 00000000 		.4byte	0
 3285 0335 00000000 		.4byte	0
 3286              	.LLST26:
 3287 0339 08000000 		.4byte	.LVL55
 3288 033d 21000000 		.4byte	.LVL56-1
 3289 0341 0100     		.2byte	0x1
 3290 0343 50       		.byte	0x50
 3291 0344 00000000 		.4byte	0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 88


 3292 0348 00000000 		.4byte	0
 3293              	.LLST27:
 3294 034c 00000000 		.4byte	.LVL58
 3295 0350 04000000 		.4byte	.LVL59
 3296 0354 0100     		.2byte	0x1
 3297 0356 50       		.byte	0x50
 3298 0357 04000000 		.4byte	.LVL59
 3299 035b 0C000000 		.4byte	.LFE24
 3300 035f 0400     		.2byte	0x4
 3301 0361 F3       		.byte	0xf3
 3302 0362 01       		.uleb128 0x1
 3303 0363 50       		.byte	0x50
 3304 0364 9F       		.byte	0x9f
 3305 0365 00000000 		.4byte	0
 3306 0369 00000000 		.4byte	0
 3307              	.LLST28:
 3308 036d 00000000 		.4byte	.LVL60
 3309 0371 04000000 		.4byte	.LVL61
 3310 0375 0100     		.2byte	0x1
 3311 0377 50       		.byte	0x50
 3312 0378 04000000 		.4byte	.LVL61
 3313 037c 0C000000 		.4byte	.LFE26
 3314 0380 0400     		.2byte	0x4
 3315 0382 F3       		.byte	0xf3
 3316 0383 01       		.uleb128 0x1
 3317 0384 50       		.byte	0x50
 3318 0385 9F       		.byte	0x9f
 3319 0386 00000000 		.4byte	0
 3320 038a 00000000 		.4byte	0
 3321              	.LLST29:
 3322 038e 00000000 		.4byte	.LVL62
 3323 0392 07000000 		.4byte	.LVL63-1
 3324 0396 0100     		.2byte	0x1
 3325 0398 50       		.byte	0x50
 3326 0399 07000000 		.4byte	.LVL63-1
 3327 039d 1C000000 		.4byte	.LVL65
 3328 03a1 0100     		.2byte	0x1
 3329 03a3 54       		.byte	0x54
 3330 03a4 1C000000 		.4byte	.LVL65
 3331 03a8 24000000 		.4byte	.LFE30
 3332 03ac 0400     		.2byte	0x4
 3333 03ae F3       		.byte	0xf3
 3334 03af 01       		.uleb128 0x1
 3335 03b0 50       		.byte	0x50
 3336 03b1 9F       		.byte	0x9f
 3337 03b2 00000000 		.4byte	0
 3338 03b6 00000000 		.4byte	0
 3339              	.LLST30:
 3340 03ba 08000000 		.4byte	.LVL63
 3341 03be 1B000000 		.4byte	.LVL64-1
 3342 03c2 0100     		.2byte	0x1
 3343 03c4 50       		.byte	0x50
 3344 03c5 00000000 		.4byte	0
 3345 03c9 00000000 		.4byte	0
 3346              	.LLST31:
 3347 03cd 00000000 		.4byte	.LVL66
 3348 03d1 07000000 		.4byte	.LVL67-1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 89


 3349 03d5 0100     		.2byte	0x1
 3350 03d7 50       		.byte	0x50
 3351 03d8 07000000 		.4byte	.LVL67-1
 3352 03dc 1E000000 		.4byte	.LVL69
 3353 03e0 0100     		.2byte	0x1
 3354 03e2 54       		.byte	0x54
 3355 03e3 1E000000 		.4byte	.LVL69
 3356 03e7 24000000 		.4byte	.LFE31
 3357 03eb 0400     		.2byte	0x4
 3358 03ed F3       		.byte	0xf3
 3359 03ee 01       		.uleb128 0x1
 3360 03ef 50       		.byte	0x50
 3361 03f0 9F       		.byte	0x9f
 3362 03f1 00000000 		.4byte	0
 3363 03f5 00000000 		.4byte	0
 3364              	.LLST32:
 3365 03f9 08000000 		.4byte	.LVL67
 3366 03fd 1D000000 		.4byte	.LVL68-1
 3367 0401 0100     		.2byte	0x1
 3368 0403 50       		.byte	0x50
 3369 0404 00000000 		.4byte	0
 3370 0408 00000000 		.4byte	0
 3371              	.LLST33:
 3372 040c 00000000 		.4byte	.LVL70
 3373 0410 07000000 		.4byte	.LVL71-1
 3374 0414 0100     		.2byte	0x1
 3375 0416 50       		.byte	0x50
 3376 0417 07000000 		.4byte	.LVL71-1
 3377 041b 1E000000 		.4byte	.LVL73
 3378 041f 0100     		.2byte	0x1
 3379 0421 54       		.byte	0x54
 3380 0422 1E000000 		.4byte	.LVL73
 3381 0426 28000000 		.4byte	.LFE32
 3382 042a 0400     		.2byte	0x4
 3383 042c F3       		.byte	0xf3
 3384 042d 01       		.uleb128 0x1
 3385 042e 50       		.byte	0x50
 3386 042f 9F       		.byte	0x9f
 3387 0430 00000000 		.4byte	0
 3388 0434 00000000 		.4byte	0
 3389              	.LLST34:
 3390 0438 08000000 		.4byte	.LVL71
 3391 043c 1D000000 		.4byte	.LVL72-1
 3392 0440 0100     		.2byte	0x1
 3393 0442 50       		.byte	0x50
 3394 0443 00000000 		.4byte	0
 3395 0447 00000000 		.4byte	0
 3396              	.LLST35:
 3397 044b 00000000 		.4byte	.LVL74
 3398 044f 07000000 		.4byte	.LVL75-1
 3399 0453 0100     		.2byte	0x1
 3400 0455 50       		.byte	0x50
 3401 0456 07000000 		.4byte	.LVL75-1
 3402 045a 1E000000 		.4byte	.LVL77
 3403 045e 0100     		.2byte	0x1
 3404 0460 54       		.byte	0x54
 3405 0461 1E000000 		.4byte	.LVL77
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 90


 3406 0465 24000000 		.4byte	.LFE33
 3407 0469 0400     		.2byte	0x4
 3408 046b F3       		.byte	0xf3
 3409 046c 01       		.uleb128 0x1
 3410 046d 50       		.byte	0x50
 3411 046e 9F       		.byte	0x9f
 3412 046f 00000000 		.4byte	0
 3413 0473 00000000 		.4byte	0
 3414              	.LLST36:
 3415 0477 08000000 		.4byte	.LVL75
 3416 047b 1D000000 		.4byte	.LVL76-1
 3417 047f 0100     		.2byte	0x1
 3418 0481 50       		.byte	0x50
 3419 0482 00000000 		.4byte	0
 3420 0486 00000000 		.4byte	0
 3421              	.LLST37:
 3422 048a 00000000 		.4byte	.LVL78
 3423 048e 07000000 		.4byte	.LVL79-1
 3424 0492 0100     		.2byte	0x1
 3425 0494 50       		.byte	0x50
 3426 0495 07000000 		.4byte	.LVL79-1
 3427 0499 1E000000 		.4byte	.LVL81
 3428 049d 0100     		.2byte	0x1
 3429 049f 54       		.byte	0x54
 3430 04a0 1E000000 		.4byte	.LVL81
 3431 04a4 24000000 		.4byte	.LFE34
 3432 04a8 0400     		.2byte	0x4
 3433 04aa F3       		.byte	0xf3
 3434 04ab 01       		.uleb128 0x1
 3435 04ac 50       		.byte	0x50
 3436 04ad 9F       		.byte	0x9f
 3437 04ae 00000000 		.4byte	0
 3438 04b2 00000000 		.4byte	0
 3439              	.LLST38:
 3440 04b6 08000000 		.4byte	.LVL79
 3441 04ba 1D000000 		.4byte	.LVL80-1
 3442 04be 0100     		.2byte	0x1
 3443 04c0 50       		.byte	0x50
 3444 04c1 00000000 		.4byte	0
 3445 04c5 00000000 		.4byte	0
 3446              	.LLST39:
 3447 04c9 00000000 		.4byte	.LVL82
 3448 04cd 0B000000 		.4byte	.LVL83-1
 3449 04d1 0100     		.2byte	0x1
 3450 04d3 50       		.byte	0x50
 3451 04d4 0B000000 		.4byte	.LVL83-1
 3452 04d8 1C000000 		.4byte	.LFE35
 3453 04dc 0400     		.2byte	0x4
 3454 04de F3       		.byte	0xf3
 3455 04df 01       		.uleb128 0x1
 3456 04e0 50       		.byte	0x50
 3457 04e1 9F       		.byte	0x9f
 3458 04e2 00000000 		.4byte	0
 3459 04e6 00000000 		.4byte	0
 3460              	.LLST40:
 3461 04ea 00000000 		.4byte	.LVL82
 3462 04ee 0B000000 		.4byte	.LVL83-1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 91


 3463 04f2 0100     		.2byte	0x1
 3464 04f4 51       		.byte	0x51
 3465 04f5 0B000000 		.4byte	.LVL83-1
 3466 04f9 14000000 		.4byte	.LVL85
 3467 04fd 0100     		.2byte	0x1
 3468 04ff 55       		.byte	0x55
 3469 0500 14000000 		.4byte	.LVL85
 3470 0504 1C000000 		.4byte	.LFE35
 3471 0508 0400     		.2byte	0x4
 3472 050a F3       		.byte	0xf3
 3473 050b 01       		.uleb128 0x1
 3474 050c 51       		.byte	0x51
 3475 050d 9F       		.byte	0x9f
 3476 050e 00000000 		.4byte	0
 3477 0512 00000000 		.4byte	0
 3478              	.LLST41:
 3479 0516 0C000000 		.4byte	.LVL83
 3480 051a 13000000 		.4byte	.LVL84-1
 3481 051e 0100     		.2byte	0x1
 3482 0520 50       		.byte	0x50
 3483 0521 00000000 		.4byte	0
 3484 0525 00000000 		.4byte	0
 3485              	.LLST42:
 3486 0529 08000000 		.4byte	.LVL86
 3487 052d 13000000 		.4byte	.LVL87-1
 3488 0531 0100     		.2byte	0x1
 3489 0533 50       		.byte	0x50
 3490 0534 00000000 		.4byte	0
 3491 0538 00000000 		.4byte	0
 3492              		.section	.debug_aranges,"",%progbits
 3493 0000 54010000 		.4byte	0x154
 3494 0004 0200     		.2byte	0x2
 3495 0006 00000000 		.4byte	.Ldebug_info0
 3496 000a 04       		.byte	0x4
 3497 000b 00       		.byte	0
 3498 000c 0000     		.2byte	0
 3499 000e 0000     		.2byte	0
 3500 0010 00000000 		.4byte	.LFB2
 3501 0014 58000000 		.4byte	.LFE2-.LFB2
 3502 0018 00000000 		.4byte	.LFB5
 3503 001c 1C000000 		.4byte	.LFE5-.LFB5
 3504 0020 00000000 		.4byte	.LFB6
 3505 0024 28000000 		.4byte	.LFE6-.LFB6
 3506 0028 00000000 		.4byte	.LFB7
 3507 002c 28000000 		.4byte	.LFE7-.LFB7
 3508 0030 00000000 		.4byte	.LFB8
 3509 0034 28000000 		.4byte	.LFE8-.LFB8
 3510 0038 00000000 		.4byte	.LFB9
 3511 003c 2C000000 		.4byte	.LFE9-.LFB9
 3512 0040 00000000 		.4byte	.LFB10
 3513 0044 10000000 		.4byte	.LFE10-.LFB10
 3514 0048 00000000 		.4byte	.LFB11
 3515 004c 28000000 		.4byte	.LFE11-.LFB11
 3516 0050 00000000 		.4byte	.LFB12
 3517 0054 28000000 		.4byte	.LFE12-.LFB12
 3518 0058 00000000 		.4byte	.LFB13
 3519 005c 2C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 92


 3520 0060 00000000 		.4byte	.LFB14
 3521 0064 28000000 		.4byte	.LFE14-.LFB14
 3522 0068 00000000 		.4byte	.LFB15
 3523 006c 0C000000 		.4byte	.LFE15-.LFB15
 3524 0070 00000000 		.4byte	.LFB16
 3525 0074 0C000000 		.4byte	.LFE16-.LFB16
 3526 0078 00000000 		.4byte	.LFB17
 3527 007c 28000000 		.4byte	.LFE17-.LFB17
 3528 0080 00000000 		.4byte	.LFB18
 3529 0084 0C000000 		.4byte	.LFE18-.LFB18
 3530 0088 00000000 		.4byte	.LFB19
 3531 008c 0C000000 		.4byte	.LFE19-.LFB19
 3532 0090 00000000 		.4byte	.LFB20
 3533 0094 24000000 		.4byte	.LFE20-.LFB20
 3534 0098 00000000 		.4byte	.LFB21
 3535 009c 0C000000 		.4byte	.LFE21-.LFB21
 3536 00a0 00000000 		.4byte	.LFB22
 3537 00a4 0C000000 		.4byte	.LFE22-.LFB22
 3538 00a8 00000000 		.4byte	.LFB23
 3539 00ac 28000000 		.4byte	.LFE23-.LFB23
 3540 00b0 00000000 		.4byte	.LFB24
 3541 00b4 0C000000 		.4byte	.LFE24-.LFB24
 3542 00b8 00000000 		.4byte	.LFB25
 3543 00bc 0C000000 		.4byte	.LFE25-.LFB25
 3544 00c0 00000000 		.4byte	.LFB26
 3545 00c4 0C000000 		.4byte	.LFE26-.LFB26
 3546 00c8 00000000 		.4byte	.LFB27
 3547 00cc 0C000000 		.4byte	.LFE27-.LFB27
 3548 00d0 00000000 		.4byte	.LFB28
 3549 00d4 0C000000 		.4byte	.LFE28-.LFB28
 3550 00d8 00000000 		.4byte	.LFB29
 3551 00dc 0C000000 		.4byte	.LFE29-.LFB29
 3552 00e0 00000000 		.4byte	.LFB30
 3553 00e4 24000000 		.4byte	.LFE30-.LFB30
 3554 00e8 00000000 		.4byte	.LFB31
 3555 00ec 24000000 		.4byte	.LFE31-.LFB31
 3556 00f0 00000000 		.4byte	.LFB32
 3557 00f4 28000000 		.4byte	.LFE32-.LFB32
 3558 00f8 00000000 		.4byte	.LFB33
 3559 00fc 24000000 		.4byte	.LFE33-.LFB33
 3560 0100 00000000 		.4byte	.LFB34
 3561 0104 24000000 		.4byte	.LFE34-.LFB34
 3562 0108 00000000 		.4byte	.LFB35
 3563 010c 1C000000 		.4byte	.LFE35-.LFB35
 3564 0110 00000000 		.4byte	.LFB3
 3565 0114 24000000 		.4byte	.LFE3-.LFB3
 3566 0118 00000000 		.4byte	.LFB4
 3567 011c 1C000000 		.4byte	.LFE4-.LFB4
 3568 0120 00000000 		.4byte	.LFB36
 3569 0124 14000000 		.4byte	.LFE36-.LFB36
 3570 0128 00000000 		.4byte	.LFB37
 3571 012c 0C000000 		.4byte	.LFE37-.LFB37
 3572 0130 00000000 		.4byte	.LFB38
 3573 0134 0C000000 		.4byte	.LFE38-.LFB38
 3574 0138 00000000 		.4byte	.LFB39
 3575 013c 0C000000 		.4byte	.LFE39-.LFB39
 3576 0140 00000000 		.4byte	.LFB40
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 93


 3577 0144 0C000000 		.4byte	.LFE40-.LFB40
 3578 0148 00000000 		.4byte	.LFB41
 3579 014c 0C000000 		.4byte	.LFE41-.LFB41
 3580 0150 00000000 		.4byte	0
 3581 0154 00000000 		.4byte	0
 3582              		.section	.debug_ranges,"",%progbits
 3583              	.Ldebug_ranges0:
 3584 0000 0A000000 		.4byte	.LBB10
 3585 0004 0C000000 		.4byte	.LBE10
 3586 0008 0E000000 		.4byte	.LBB13
 3587 000c 12000000 		.4byte	.LBE13
 3588 0010 00000000 		.4byte	0
 3589 0014 00000000 		.4byte	0
 3590 0018 00000000 		.4byte	.LFB2
 3591 001c 58000000 		.4byte	.LFE2
 3592 0020 00000000 		.4byte	.LFB5
 3593 0024 1C000000 		.4byte	.LFE5
 3594 0028 00000000 		.4byte	.LFB6
 3595 002c 28000000 		.4byte	.LFE6
 3596 0030 00000000 		.4byte	.LFB7
 3597 0034 28000000 		.4byte	.LFE7
 3598 0038 00000000 		.4byte	.LFB8
 3599 003c 28000000 		.4byte	.LFE8
 3600 0040 00000000 		.4byte	.LFB9
 3601 0044 2C000000 		.4byte	.LFE9
 3602 0048 00000000 		.4byte	.LFB10
 3603 004c 10000000 		.4byte	.LFE10
 3604 0050 00000000 		.4byte	.LFB11
 3605 0054 28000000 		.4byte	.LFE11
 3606 0058 00000000 		.4byte	.LFB12
 3607 005c 28000000 		.4byte	.LFE12
 3608 0060 00000000 		.4byte	.LFB13
 3609 0064 2C000000 		.4byte	.LFE13
 3610 0068 00000000 		.4byte	.LFB14
 3611 006c 28000000 		.4byte	.LFE14
 3612 0070 00000000 		.4byte	.LFB15
 3613 0074 0C000000 		.4byte	.LFE15
 3614 0078 00000000 		.4byte	.LFB16
 3615 007c 0C000000 		.4byte	.LFE16
 3616 0080 00000000 		.4byte	.LFB17
 3617 0084 28000000 		.4byte	.LFE17
 3618 0088 00000000 		.4byte	.LFB18
 3619 008c 0C000000 		.4byte	.LFE18
 3620 0090 00000000 		.4byte	.LFB19
 3621 0094 0C000000 		.4byte	.LFE19
 3622 0098 00000000 		.4byte	.LFB20
 3623 009c 24000000 		.4byte	.LFE20
 3624 00a0 00000000 		.4byte	.LFB21
 3625 00a4 0C000000 		.4byte	.LFE21
 3626 00a8 00000000 		.4byte	.LFB22
 3627 00ac 0C000000 		.4byte	.LFE22
 3628 00b0 00000000 		.4byte	.LFB23
 3629 00b4 28000000 		.4byte	.LFE23
 3630 00b8 00000000 		.4byte	.LFB24
 3631 00bc 0C000000 		.4byte	.LFE24
 3632 00c0 00000000 		.4byte	.LFB25
 3633 00c4 0C000000 		.4byte	.LFE25
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 94


 3634 00c8 00000000 		.4byte	.LFB26
 3635 00cc 0C000000 		.4byte	.LFE26
 3636 00d0 00000000 		.4byte	.LFB27
 3637 00d4 0C000000 		.4byte	.LFE27
 3638 00d8 00000000 		.4byte	.LFB28
 3639 00dc 0C000000 		.4byte	.LFE28
 3640 00e0 00000000 		.4byte	.LFB29
 3641 00e4 0C000000 		.4byte	.LFE29
 3642 00e8 00000000 		.4byte	.LFB30
 3643 00ec 24000000 		.4byte	.LFE30
 3644 00f0 00000000 		.4byte	.LFB31
 3645 00f4 24000000 		.4byte	.LFE31
 3646 00f8 00000000 		.4byte	.LFB32
 3647 00fc 28000000 		.4byte	.LFE32
 3648 0100 00000000 		.4byte	.LFB33
 3649 0104 24000000 		.4byte	.LFE33
 3650 0108 00000000 		.4byte	.LFB34
 3651 010c 24000000 		.4byte	.LFE34
 3652 0110 00000000 		.4byte	.LFB35
 3653 0114 1C000000 		.4byte	.LFE35
 3654 0118 00000000 		.4byte	.LFB3
 3655 011c 24000000 		.4byte	.LFE3
 3656 0120 00000000 		.4byte	.LFB4
 3657 0124 1C000000 		.4byte	.LFE4
 3658 0128 00000000 		.4byte	.LFB36
 3659 012c 14000000 		.4byte	.LFE36
 3660 0130 00000000 		.4byte	.LFB37
 3661 0134 0C000000 		.4byte	.LFE37
 3662 0138 00000000 		.4byte	.LFB38
 3663 013c 0C000000 		.4byte	.LFE38
 3664 0140 00000000 		.4byte	.LFB39
 3665 0144 0C000000 		.4byte	.LFE39
 3666 0148 00000000 		.4byte	.LFB40
 3667 014c 0C000000 		.4byte	.LFE40
 3668 0150 00000000 		.4byte	.LFB41
 3669 0154 0C000000 		.4byte	.LFE41
 3670 0158 00000000 		.4byte	0
 3671 015c 00000000 		.4byte	0
 3672              		.section	.debug_line,"",%progbits
 3673              	.Ldebug_line0:
 3674 0000 F0030000 		.section	.debug_str,"MS",%progbits,1
 3674      02004D00 
 3674      00000201 
 3674      FB0E0D00 
 3674      01010101 
 3675              	.LASF18:
 3676 0000 636F756E 		.ascii	"count\000"
 3676      7400
 3677              	.LASF76:
 3678 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3678      4320342E 
 3678      392E3320 
 3678      32303135 
 3678      30333033 
 3679 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3679      20726576 
 3679      6973696F 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 95


 3679      6E203232 
 3679      31323230 
 3680 006c 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 3680      66756E63 
 3680      74696F6E 
 3680      2D736563 
 3680      74696F6E 
 3681              	.LASF25:
 3682 0094 54494D45 		.ascii	"TIMER_Stop\000"
 3682      525F5374 
 3682      6F7000
 3683              	.LASF35:
 3684 009f 54494D45 		.ascii	"TIMER_SetPWMMode\000"
 3684      525F5365 
 3684      7450574D 
 3684      4D6F6465 
 3684      00
 3685              	.LASF20:
 3686 00b0 54494D45 		.ascii	"TIMER_WritePeriod\000"
 3686      525F5772 
 3686      69746550 
 3686      6572696F 
 3686      6400
 3687              	.LASF21:
 3688 00c2 70657269 		.ascii	"period\000"
 3688      6F6400
 3689              	.LASF51:
 3690 00c9 54494D45 		.ascii	"TIMER_WritePeriodBuf\000"
 3690      525F5772 
 3690      69746550 
 3690      6572696F 
 3690      64427566 
 3691              	.LASF7:
 3692 00de 6C6F6E67 		.ascii	"long long unsigned int\000"
 3692      206C6F6E 
 3692      6720756E 
 3692      7369676E 
 3692      65642069 
 3693              	.LASF78:
 3694 00f5 433A5C55 		.ascii	"C:\\Users\\zhiantec\\Documents\\Tencent Files\\1241"
 3694      73657273 
 3694      5C7A6869 
 3694      616E7465 
 3694      635C446F 
 3695 0123 39333938 		.ascii	"939835\\FileRecv\\MobileFile\\second_images[4-8]\\E"
 3695      33355C46 
 3695      696C6552 
 3695      6563765C 
 3695      4D6F6269 
 3696 0152 6E747261 		.ascii	"ntranceGuard_171019-12.50\\EntranceGuard.cydsn\000"
 3696      6E636547 
 3696      75617264 
 3696      5F313731 
 3696      3031392D 
 3697              	.LASF77:
 3698 0180 47656E65 		.ascii	"Generated_Source\\PSoC4\\TIMER.c\000"
 3698      72617465 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 96


 3698      645F536F 
 3698      75726365 
 3698      5C50536F 
 3699              	.LASF30:
 3700 019f 71644D6F 		.ascii	"qdMode\000"
 3700      646500
 3701              	.LASF6:
 3702 01a6 6C6F6E67 		.ascii	"long long int\000"
 3702      206C6F6E 
 3702      6720696E 
 3702      7400
 3703              	.LASF0:
 3704 01b4 7369676E 		.ascii	"signed char\000"
 3704      65642063 
 3704      68617200 
 3705              	.LASF39:
 3706 01c0 54494D45 		.ascii	"TIMER_SetPWMStopOnKill\000"
 3706      525F5365 
 3706      7450574D 
 3706      53746F70 
 3706      4F6E4B69 
 3707              	.LASF81:
 3708 01d7 43794578 		.ascii	"CyExitCriticalSection\000"
 3708      69744372 
 3708      69746963 
 3708      616C5365 
 3708      6374696F 
 3709              	.LASF75:
 3710 01ed 54494D45 		.ascii	"TIMER_SetInterrupt\000"
 3710      525F5365 
 3710      74496E74 
 3710      65727275 
 3710      707400
 3711              	.LASF60:
 3712 0200 54494D45 		.ascii	"TIMER_ReadCaptureBuf\000"
 3712      525F5265 
 3712      61644361 
 3712      70747572 
 3712      65427566 
 3713              	.LASF4:
 3714 0215 6C6F6E67 		.ascii	"long int\000"
 3714      20696E74 
 3714      00
 3715              	.LASF59:
 3716 021e 54494D45 		.ascii	"TIMER_ReadCapture\000"
 3716      525F5265 
 3716      61644361 
 3716      70747572 
 3716      6500
 3717              	.LASF9:
 3718 0230 75696E74 		.ascii	"uint8\000"
 3718      3800
 3719              	.LASF56:
 3720 0236 54494D45 		.ascii	"TIMER_WriteCompareBuf\000"
 3720      525F5772 
 3720      69746543 
 3720      6F6D7061 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 97


 3720      72654275 
 3721              	.LASF12:
 3722 024c 646F7562 		.ascii	"double\000"
 3722      6C6500
 3723              	.LASF10:
 3724 0253 75696E74 		.ascii	"uint32\000"
 3724      333200
 3725              	.LASF62:
 3726 025a 74726967 		.ascii	"triggerMode\000"
 3726      6765724D 
 3726      6F646500 
 3727              	.LASF44:
 3728 0266 6D61736B 		.ascii	"mask\000"
 3728      00
 3729              	.LASF55:
 3730 026b 54494D45 		.ascii	"TIMER_ReadCompare\000"
 3730      525F5265 
 3730      6164436F 
 3730      6D706172 
 3730      6500
 3731              	.LASF42:
 3732 027d 64656164 		.ascii	"deadTime\000"
 3732      54696D65 
 3732      00
 3733              	.LASF66:
 3734 0286 54494D45 		.ascii	"TIMER_SetCountMode\000"
 3734      525F5365 
 3734      74436F75 
 3734      6E744D6F 
 3734      646500
 3735              	.LASF72:
 3736 0299 54494D45 		.ascii	"TIMER_GetInterruptSourceMasked\000"
 3736      525F4765 
 3736      74496E74 
 3736      65727275 
 3736      7074536F 
 3737              	.LASF45:
 3738 02b8 54494D45 		.ascii	"TIMER_SetCounterMode\000"
 3738      525F5365 
 3738      74436F75 
 3738      6E746572 
 3738      4D6F6465 
 3739              	.LASF8:
 3740 02cd 756E7369 		.ascii	"unsigned int\000"
 3740      676E6564 
 3740      20696E74 
 3740      00
 3741              	.LASF68:
 3742 02da 636F6D6D 		.ascii	"command\000"
 3742      616E6400 
 3743              	.LASF5:
 3744 02e2 6C6F6E67 		.ascii	"long unsigned int\000"
 3744      20756E73 
 3744      69676E65 
 3744      6420696E 
 3744      7400
 3745              	.LASF36:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 98


 3746 02f4 6D6F6465 		.ascii	"modeMask\000"
 3746      4D61736B 
 3746      00
 3747              	.LASF80:
 3748 02fd 4379456E 		.ascii	"CyEnterCriticalSection\000"
 3748      74657243 
 3748      72697469 
 3748      63616C53 
 3748      65637469 
 3749              	.LASF3:
 3750 0314 73686F72 		.ascii	"short unsigned int\000"
 3750      7420756E 
 3750      7369676E 
 3750      65642069 
 3750      6E7400
 3751              	.LASF28:
 3752 0327 54494D45 		.ascii	"TIMER_SetQDMode\000"
 3752      525F5365 
 3752      7451444D 
 3752      6F646500 
 3753              	.LASF22:
 3754 0337 54494D45 		.ascii	"TIMER_WriteCompare\000"
 3754      525F5772 
 3754      69746543 
 3754      6F6D7061 
 3754      726500
 3755              	.LASF79:
 3756 034a 54494D45 		.ascii	"TIMER_initVar\000"
 3756      525F696E 
 3756      69745661 
 3756      7200
 3757              	.LASF24:
 3758 0358 54494D45 		.ascii	"TIMER_Init\000"
 3758      525F496E 
 3758      697400
 3759              	.LASF34:
 3760 0363 6F6E6553 		.ascii	"oneShotEnable\000"
 3760      686F7445 
 3760      6E61626C 
 3760      6500
 3761              	.LASF61:
 3762 0371 54494D45 		.ascii	"TIMER_SetCaptureMode\000"
 3762      525F5365 
 3762      74436170 
 3762      74757265 
 3762      4D6F6465 
 3763              	.LASF14:
 3764 0386 72656733 		.ascii	"reg32\000"
 3764      3200
 3765              	.LASF69:
 3766 038c 54494D45 		.ascii	"TIMER_Enable\000"
 3766      525F456E 
 3766      61626C65 
 3766      00
 3767              	.LASF15:
 3768 0399 73697A65 		.ascii	"sizetype\000"
 3768      74797065 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 99


 3768      00
 3769              	.LASF38:
 3770 03a2 73796E63 		.ascii	"syncKillEnable\000"
 3770      4B696C6C 
 3770      456E6162 
 3770      6C6500
 3771              	.LASF16:
 3772 03b1 54494D45 		.ascii	"TIMER_WriteCounter\000"
 3772      525F5772 
 3772      69746543 
 3772      6F756E74 
 3772      657200
 3773              	.LASF23:
 3774 03c4 636F6D70 		.ascii	"compare\000"
 3774      61726500 
 3775              	.LASF58:
 3776 03cc 54494D45 		.ascii	"TIMER_ReadCompareBuf\000"
 3776      525F5265 
 3776      6164436F 
 3776      6D706172 
 3776      65427566 
 3777              	.LASF49:
 3778 03e1 54494D45 		.ascii	"TIMER_SetCompareSwap\000"
 3778      525F5365 
 3778      74436F6D 
 3778      70617265 
 3778      53776170 
 3779              	.LASF11:
 3780 03f6 666C6F61 		.ascii	"float\000"
 3780      7400
 3781              	.LASF19:
 3782 03fc 696E7465 		.ascii	"interruptMask\000"
 3782      72727570 
 3782      744D6173 
 3782      6B00
 3783              	.LASF32:
 3784 040a 70726573 		.ascii	"prescaler\000"
 3784      63616C65 
 3784      7200
 3785              	.LASF33:
 3786 0414 54494D45 		.ascii	"TIMER_SetOneShot\000"
 3786      525F5365 
 3786      744F6E65 
 3786      53686F74 
 3786      00
 3787              	.LASF1:
 3788 0425 756E7369 		.ascii	"unsigned char\000"
 3788      676E6564 
 3788      20636861 
 3788      7200
 3789              	.LASF40:
 3790 0433 73746F70 		.ascii	"stopOnKillEnable\000"
 3790      4F6E4B69 
 3790      6C6C456E 
 3790      61626C65 
 3790      00
 3791              	.LASF43:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 100


 3792 0444 54494D45 		.ascii	"TIMER_SetPWMInvert\000"
 3792      525F5365 
 3792      7450574D 
 3792      496E7665 
 3792      727400
 3793              	.LASF2:
 3794 0457 73686F72 		.ascii	"short int\000"
 3794      7420696E 
 3794      7400
 3795              	.LASF37:
 3796 0461 54494D45 		.ascii	"TIMER_SetPWMSyncKill\000"
 3796      525F5365 
 3796      7450574D 
 3796      53796E63 
 3796      4B696C6C 
 3797              	.LASF71:
 3798 0476 54494D45 		.ascii	"TIMER_ReadStatus\000"
 3798      525F5265 
 3798      61645374 
 3798      61747573 
 3798      00
 3799              	.LASF64:
 3800 0487 54494D45 		.ascii	"TIMER_SetStartMode\000"
 3800      525F5365 
 3800      74537461 
 3800      72744D6F 
 3800      646500
 3801              	.LASF17:
 3802 049a 54494D45 		.ascii	"TIMER_SetInterruptMode\000"
 3802      525F5365 
 3802      74496E74 
 3802      65727275 
 3802      70744D6F 
 3803              	.LASF53:
 3804 04b1 54494D45 		.ascii	"TIMER_ReadPeriodBuf\000"
 3804      525F5265 
 3804      61645065 
 3804      72696F64 
 3804      42756600 
 3805              	.LASF47:
 3806 04c5 54494D45 		.ascii	"TIMER_ReadCounter\000"
 3806      525F5265 
 3806      6164436F 
 3806      756E7465 
 3806      7200
 3807              	.LASF70:
 3808 04d7 54494D45 		.ascii	"TIMER_Start\000"
 3808      525F5374 
 3808      61727400 
 3809              	.LASF13:
 3810 04e3 63686172 		.ascii	"char\000"
 3810      00
 3811              	.LASF29:
 3812 04e8 6D6F6465 		.ascii	"mode\000"
 3812      00
 3813              	.LASF67:
 3814 04ed 54494D45 		.ascii	"TIMER_TriggerCommand\000"
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 101


 3814      525F5472 
 3814      69676765 
 3814      72436F6D 
 3814      6D616E64 
 3815              	.LASF54:
 3816 0502 54494D45 		.ascii	"TIMER_SetPeriodSwap\000"
 3816      525F5365 
 3816      74506572 
 3816      696F6453 
 3816      77617000 
 3817              	.LASF74:
 3818 0516 54494D45 		.ascii	"TIMER_ClearInterrupt\000"
 3818      525F436C 
 3818      65617249 
 3818      6E746572 
 3818      72757074 
 3819              	.LASF46:
 3820 052b 636F756E 		.ascii	"counterMode\000"
 3820      7465724D 
 3820      6F646500 
 3821              	.LASF73:
 3822 0537 54494D45 		.ascii	"TIMER_GetInterruptSource\000"
 3822      525F4765 
 3822      74496E74 
 3822      65727275 
 3822      7074536F 
 3823              	.LASF31:
 3824 0550 54494D45 		.ascii	"TIMER_SetPrescaler\000"
 3824      525F5365 
 3824      74507265 
 3824      7363616C 
 3824      657200
 3825              	.LASF57:
 3826 0563 636F6D70 		.ascii	"compareBuf\000"
 3826      61726542 
 3826      756600
 3827              	.LASF26:
 3828 056e 54494D45 		.ascii	"TIMER_SetMode\000"
 3828      525F5365 
 3828      744D6F64 
 3828      6500
 3829              	.LASF27:
 3830 057c 656E6162 		.ascii	"enableInterrupts\000"
 3830      6C65496E 
 3830      74657272 
 3830      75707473 
 3830      00
 3831              	.LASF48:
 3832 058d 54494D45 		.ascii	"TIMER_ReadPeriod\000"
 3832      525F5265 
 3832      61645065 
 3832      72696F64 
 3832      00
 3833              	.LASF65:
 3834 059e 54494D45 		.ascii	"TIMER_SetStopMode\000"
 3834      525F5365 
 3834      7453746F 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccK8SkI2.s 			page 102


 3834      704D6F64 
 3834      6500
 3835              	.LASF50:
 3836 05b0 73776170 		.ascii	"swapEnable\000"
 3836      456E6162 
 3836      6C6500
 3837              	.LASF63:
 3838 05bb 54494D45 		.ascii	"TIMER_SetReloadMode\000"
 3838      525F5365 
 3838      7452656C 
 3838      6F61644D 
 3838      6F646500 
 3839              	.LASF41:
 3840 05cf 54494D45 		.ascii	"TIMER_SetPWMDeadTime\000"
 3840      525F5365 
 3840      7450574D 
 3840      44656164 
 3840      54696D65 
 3841              	.LASF52:
 3842 05e4 70657269 		.ascii	"periodBuf\000"
 3842      6F644275 
 3842      6600
 3843              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
