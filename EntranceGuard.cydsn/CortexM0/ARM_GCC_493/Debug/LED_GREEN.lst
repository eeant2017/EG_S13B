ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"LED_GREEN.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.LED_GREEN_SetDriveMode,"ax",%progbits
  18              		.align	1
  19              		.global	LED_GREEN_SetDriveMode
  20              		.code	16
  21              		.thumb_func
  22              		.type	LED_GREEN_SetDriveMode, %function
  23              	LED_GREEN_SetDriveMode:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\LED_GREEN.c"
   1:Generated_Source\PSoC4/LED_GREEN.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/LED_GREEN.c **** * File Name: LED_GREEN.c  
   3:Generated_Source\PSoC4/LED_GREEN.c **** * Version 2.20
   4:Generated_Source\PSoC4/LED_GREEN.c **** *
   5:Generated_Source\PSoC4/LED_GREEN.c **** * Description:
   6:Generated_Source\PSoC4/LED_GREEN.c **** *  This file contains API to enable firmware control of a Pins component.
   7:Generated_Source\PSoC4/LED_GREEN.c **** *
   8:Generated_Source\PSoC4/LED_GREEN.c **** ********************************************************************************
   9:Generated_Source\PSoC4/LED_GREEN.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  10:Generated_Source\PSoC4/LED_GREEN.c **** * You may use this file only in accordance with the license, terms, conditions, 
  11:Generated_Source\PSoC4/LED_GREEN.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  12:Generated_Source\PSoC4/LED_GREEN.c **** * the software package with which this file was provided.
  13:Generated_Source\PSoC4/LED_GREEN.c **** *******************************************************************************/
  14:Generated_Source\PSoC4/LED_GREEN.c **** 
  15:Generated_Source\PSoC4/LED_GREEN.c **** #include "cytypes.h"
  16:Generated_Source\PSoC4/LED_GREEN.c **** #include "LED_GREEN.h"
  17:Generated_Source\PSoC4/LED_GREEN.c **** 
  18:Generated_Source\PSoC4/LED_GREEN.c **** 
  19:Generated_Source\PSoC4/LED_GREEN.c **** #if defined(LED_GREEN__PC)
  20:Generated_Source\PSoC4/LED_GREEN.c ****     #define LED_GREEN_SetP4PinDriveMode(shift, mode)  \
  21:Generated_Source\PSoC4/LED_GREEN.c ****     do { \
  22:Generated_Source\PSoC4/LED_GREEN.c ****         LED_GREEN_PC =   (LED_GREEN_PC & \
  23:Generated_Source\PSoC4/LED_GREEN.c ****                                 (uint32)(~(uint32)(LED_GREEN_DRIVE_MODE_IND_MASK << \
  24:Generated_Source\PSoC4/LED_GREEN.c ****                                 (LED_GREEN_DRIVE_MODE_BITS * (shift))))) | \
  25:Generated_Source\PSoC4/LED_GREEN.c ****                                 (uint32)((uint32)(mode) << \
  26:Generated_Source\PSoC4/LED_GREEN.c ****                                 (LED_GREEN_DRIVE_MODE_BITS * (shift))); \
  27:Generated_Source\PSoC4/LED_GREEN.c ****     } while (0)
  28:Generated_Source\PSoC4/LED_GREEN.c **** #else
  29:Generated_Source\PSoC4/LED_GREEN.c ****     #if (CY_PSOC4_4200L)
  30:Generated_Source\PSoC4/LED_GREEN.c ****         #define LED_GREEN_SetP4PinDriveMode(shift, mode)  \
  31:Generated_Source\PSoC4/LED_GREEN.c ****         do { \
  32:Generated_Source\PSoC4/LED_GREEN.c ****             LED_GREEN_USBIO_CTRL_REG = (LED_GREEN_USBIO_CTRL_REG & \
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 2


  33:Generated_Source\PSoC4/LED_GREEN.c ****                                     (uint32)(~(uint32)(LED_GREEN_DRIVE_MODE_IND_MASK << \
  34:Generated_Source\PSoC4/LED_GREEN.c ****                                     (LED_GREEN_DRIVE_MODE_BITS * (shift))))) | \
  35:Generated_Source\PSoC4/LED_GREEN.c ****                                     (uint32)((uint32)(mode) << \
  36:Generated_Source\PSoC4/LED_GREEN.c ****                                     (LED_GREEN_DRIVE_MODE_BITS * (shift))); \
  37:Generated_Source\PSoC4/LED_GREEN.c ****         } while (0)
  38:Generated_Source\PSoC4/LED_GREEN.c ****     #endif
  39:Generated_Source\PSoC4/LED_GREEN.c **** #endif
  40:Generated_Source\PSoC4/LED_GREEN.c ****   
  41:Generated_Source\PSoC4/LED_GREEN.c **** 
  42:Generated_Source\PSoC4/LED_GREEN.c **** #if defined(LED_GREEN__PC) || (CY_PSOC4_4200L) 
  43:Generated_Source\PSoC4/LED_GREEN.c ****     /*******************************************************************************
  44:Generated_Source\PSoC4/LED_GREEN.c ****     * Function Name: LED_GREEN_SetDriveMode
  45:Generated_Source\PSoC4/LED_GREEN.c ****     ****************************************************************************//**
  46:Generated_Source\PSoC4/LED_GREEN.c ****     *
  47:Generated_Source\PSoC4/LED_GREEN.c ****     * \brief Sets the drive mode for each of the Pins component's pins.
  48:Generated_Source\PSoC4/LED_GREEN.c ****     * 
  49:Generated_Source\PSoC4/LED_GREEN.c ****     * <b>Note</b> This affects all pins in the Pins component instance. Use the
  50:Generated_Source\PSoC4/LED_GREEN.c ****     * Per-Pin APIs if you wish to control individual pin's drive modes.
  51:Generated_Source\PSoC4/LED_GREEN.c ****     *
  52:Generated_Source\PSoC4/LED_GREEN.c ****     * <b>Note</b> USBIOs have limited drive functionality. Refer to the Drive Mode
  53:Generated_Source\PSoC4/LED_GREEN.c ****     * parameter for more information.
  54:Generated_Source\PSoC4/LED_GREEN.c ****     *
  55:Generated_Source\PSoC4/LED_GREEN.c ****     * \param mode
  56:Generated_Source\PSoC4/LED_GREEN.c ****     *  Mode for the selected signals. Valid options are documented in 
  57:Generated_Source\PSoC4/LED_GREEN.c ****     *  \ref driveMode.
  58:Generated_Source\PSoC4/LED_GREEN.c ****     *
  59:Generated_Source\PSoC4/LED_GREEN.c ****     * \return
  60:Generated_Source\PSoC4/LED_GREEN.c ****     *  None
  61:Generated_Source\PSoC4/LED_GREEN.c ****     *
  62:Generated_Source\PSoC4/LED_GREEN.c ****     * \sideeffect
  63:Generated_Source\PSoC4/LED_GREEN.c ****     *  If you use read-modify-write operations that are not atomic, the ISR can
  64:Generated_Source\PSoC4/LED_GREEN.c ****     *  cause corruption of this function. An ISR that interrupts this function 
  65:Generated_Source\PSoC4/LED_GREEN.c ****     *  and performs writes to the Pins component Drive Mode registers can cause 
  66:Generated_Source\PSoC4/LED_GREEN.c ****     *  corrupted port data. To avoid this issue, you should either use the Per-Pin
  67:Generated_Source\PSoC4/LED_GREEN.c ****     *  APIs (primary method) or disable interrupts around this function.
  68:Generated_Source\PSoC4/LED_GREEN.c ****     *
  69:Generated_Source\PSoC4/LED_GREEN.c ****     * \funcusage
  70:Generated_Source\PSoC4/LED_GREEN.c ****     *  \snippet LED_GREEN_SUT.c usage_LED_GREEN_SetDriveMode
  71:Generated_Source\PSoC4/LED_GREEN.c ****     *******************************************************************************/
  72:Generated_Source\PSoC4/LED_GREEN.c ****     void LED_GREEN_SetDriveMode(uint8 mode)
  73:Generated_Source\PSoC4/LED_GREEN.c ****     {
  26              		.loc 1 73 0
  27              		.cfi_startproc
  28              	.LVL0:
  74:Generated_Source\PSoC4/LED_GREEN.c **** 		LED_GREEN_SetP4PinDriveMode(LED_GREEN__0__SHIFT, mode);
  29              		.loc 1 74 0
  30 0000 0721     		mov	r1, #7
  31 0002 034A     		ldr	r2, .L2
  75:Generated_Source\PSoC4/LED_GREEN.c ****     }
  32              		.loc 1 75 0
  33              		@ sp needed
  74:Generated_Source\PSoC4/LED_GREEN.c **** 		LED_GREEN_SetP4PinDriveMode(LED_GREEN__0__SHIFT, mode);
  34              		.loc 1 74 0
  35 0004 1368     		ldr	r3, [r2]
  36 0006 8B43     		bic	r3, r1
  37 0008 1843     		orr	r0, r3
  38              	.LVL1:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 3


  39 000a 1060     		str	r0, [r2]
  40              		.loc 1 75 0
  41 000c 7047     		bx	lr
  42              	.L3:
  43 000e C046     		.align	2
  44              	.L2:
  45 0010 08030440 		.word	1074004744
  46              		.cfi_endproc
  47              	.LFE0:
  48              		.size	LED_GREEN_SetDriveMode, .-LED_GREEN_SetDriveMode
  49              		.section	.text.LED_GREEN_Write,"ax",%progbits
  50              		.align	1
  51              		.global	LED_GREEN_Write
  52              		.code	16
  53              		.thumb_func
  54              		.type	LED_GREEN_Write, %function
  55              	LED_GREEN_Write:
  56              	.LFB1:
  76:Generated_Source\PSoC4/LED_GREEN.c **** #endif
  77:Generated_Source\PSoC4/LED_GREEN.c **** 
  78:Generated_Source\PSoC4/LED_GREEN.c **** 
  79:Generated_Source\PSoC4/LED_GREEN.c **** /*******************************************************************************
  80:Generated_Source\PSoC4/LED_GREEN.c **** * Function Name: LED_GREEN_Write
  81:Generated_Source\PSoC4/LED_GREEN.c **** ****************************************************************************//**
  82:Generated_Source\PSoC4/LED_GREEN.c **** *
  83:Generated_Source\PSoC4/LED_GREEN.c **** * \brief Writes the value to the physical port (data output register), masking
  84:Generated_Source\PSoC4/LED_GREEN.c **** *  and shifting the bits appropriately. 
  85:Generated_Source\PSoC4/LED_GREEN.c **** *
  86:Generated_Source\PSoC4/LED_GREEN.c **** * The data output register controls the signal applied to the physical pin in 
  87:Generated_Source\PSoC4/LED_GREEN.c **** * conjunction with the drive mode parameter. This function avoids changing 
  88:Generated_Source\PSoC4/LED_GREEN.c **** * other bits in the port by using the appropriate method (read-modify-write or
  89:Generated_Source\PSoC4/LED_GREEN.c **** * bit banding).
  90:Generated_Source\PSoC4/LED_GREEN.c **** *
  91:Generated_Source\PSoC4/LED_GREEN.c **** * <b>Note</b> This function should not be used on a hardware digital output pin 
  92:Generated_Source\PSoC4/LED_GREEN.c **** * as it is driven by the hardware signal attached to it.
  93:Generated_Source\PSoC4/LED_GREEN.c **** *
  94:Generated_Source\PSoC4/LED_GREEN.c **** * \param value
  95:Generated_Source\PSoC4/LED_GREEN.c **** *  Value to write to the component instance.
  96:Generated_Source\PSoC4/LED_GREEN.c **** *
  97:Generated_Source\PSoC4/LED_GREEN.c **** * \return 
  98:Generated_Source\PSoC4/LED_GREEN.c **** *  None 
  99:Generated_Source\PSoC4/LED_GREEN.c **** *
 100:Generated_Source\PSoC4/LED_GREEN.c **** * \sideeffect
 101:Generated_Source\PSoC4/LED_GREEN.c **** *  If you use read-modify-write operations that are not atomic; the Interrupt 
 102:Generated_Source\PSoC4/LED_GREEN.c **** *  Service Routines (ISR) can cause corruption of this function. An ISR that 
 103:Generated_Source\PSoC4/LED_GREEN.c **** *  interrupts this function and performs writes to the Pins component data 
 104:Generated_Source\PSoC4/LED_GREEN.c **** *  register can cause corrupted port data. To avoid this issue, you should 
 105:Generated_Source\PSoC4/LED_GREEN.c **** *  either use the Per-Pin APIs (primary method) or disable interrupts around 
 106:Generated_Source\PSoC4/LED_GREEN.c **** *  this function.
 107:Generated_Source\PSoC4/LED_GREEN.c **** *
 108:Generated_Source\PSoC4/LED_GREEN.c **** * \funcusage
 109:Generated_Source\PSoC4/LED_GREEN.c **** *  \snippet LED_GREEN_SUT.c usage_LED_GREEN_Write
 110:Generated_Source\PSoC4/LED_GREEN.c **** *******************************************************************************/
 111:Generated_Source\PSoC4/LED_GREEN.c **** void LED_GREEN_Write(uint8 value)
 112:Generated_Source\PSoC4/LED_GREEN.c **** {
  57              		.loc 1 112 0
  58              		.cfi_startproc
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 4


  59              	.LVL2:
 113:Generated_Source\PSoC4/LED_GREEN.c ****     uint8 drVal = (uint8)(LED_GREEN_DR & (uint8)(~LED_GREEN_MASK));
  60              		.loc 1 113 0
  61 0000 0123     		mov	r3, #1
  62 0002 0449     		ldr	r1, .L5
 114:Generated_Source\PSoC4/LED_GREEN.c ****     drVal = (drVal | ((uint8)(value << LED_GREEN_SHIFT) & LED_GREEN_MASK));
 115:Generated_Source\PSoC4/LED_GREEN.c ****     LED_GREEN_DR = (uint32)drVal;
 116:Generated_Source\PSoC4/LED_GREEN.c **** }
  63              		.loc 1 116 0
  64              		@ sp needed
 113:Generated_Source\PSoC4/LED_GREEN.c ****     uint8 drVal = (uint8)(LED_GREEN_DR & (uint8)(~LED_GREEN_MASK));
  65              		.loc 1 113 0
  66 0004 0A68     		ldr	r2, [r1]
  67 0006 9A43     		bic	r2, r3
  68 0008 D2B2     		uxtb	r2, r2
  69              	.LVL3:
 114:Generated_Source\PSoC4/LED_GREEN.c ****     drVal = (drVal | ((uint8)(value << LED_GREEN_SHIFT) & LED_GREEN_MASK));
  70              		.loc 1 114 0
  71 000a 0340     		and	r3, r0
 115:Generated_Source\PSoC4/LED_GREEN.c **** }
  72              		.loc 1 115 0
  73 000c 1343     		orr	r3, r2
  74 000e 0B60     		str	r3, [r1]
  75              		.loc 1 116 0
  76 0010 7047     		bx	lr
  77              	.L6:
  78 0012 C046     		.align	2
  79              	.L5:
  80 0014 00030440 		.word	1074004736
  81              		.cfi_endproc
  82              	.LFE1:
  83              		.size	LED_GREEN_Write, .-LED_GREEN_Write
  84              		.section	.text.LED_GREEN_Read,"ax",%progbits
  85              		.align	1
  86              		.global	LED_GREEN_Read
  87              		.code	16
  88              		.thumb_func
  89              		.type	LED_GREEN_Read, %function
  90              	LED_GREEN_Read:
  91              	.LFB2:
 117:Generated_Source\PSoC4/LED_GREEN.c **** 
 118:Generated_Source\PSoC4/LED_GREEN.c **** 
 119:Generated_Source\PSoC4/LED_GREEN.c **** /*******************************************************************************
 120:Generated_Source\PSoC4/LED_GREEN.c **** * Function Name: LED_GREEN_Read
 121:Generated_Source\PSoC4/LED_GREEN.c **** ****************************************************************************//**
 122:Generated_Source\PSoC4/LED_GREEN.c **** *
 123:Generated_Source\PSoC4/LED_GREEN.c **** * \brief Reads the associated physical port (pin status register) and masks 
 124:Generated_Source\PSoC4/LED_GREEN.c **** *  the required bits according to the width and bit position of the component
 125:Generated_Source\PSoC4/LED_GREEN.c **** *  instance. 
 126:Generated_Source\PSoC4/LED_GREEN.c **** *
 127:Generated_Source\PSoC4/LED_GREEN.c **** * The pin's status register returns the current logic level present on the 
 128:Generated_Source\PSoC4/LED_GREEN.c **** * physical pin.
 129:Generated_Source\PSoC4/LED_GREEN.c **** *
 130:Generated_Source\PSoC4/LED_GREEN.c **** * \return 
 131:Generated_Source\PSoC4/LED_GREEN.c **** *  The current value for the pins in the component as a right justified number.
 132:Generated_Source\PSoC4/LED_GREEN.c **** *
 133:Generated_Source\PSoC4/LED_GREEN.c **** * \funcusage
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 5


 134:Generated_Source\PSoC4/LED_GREEN.c **** *  \snippet LED_GREEN_SUT.c usage_LED_GREEN_Read  
 135:Generated_Source\PSoC4/LED_GREEN.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/LED_GREEN.c **** uint8 LED_GREEN_Read(void)
 137:Generated_Source\PSoC4/LED_GREEN.c **** {
  92              		.loc 1 137 0
  93              		.cfi_startproc
 138:Generated_Source\PSoC4/LED_GREEN.c ****     return (uint8)((LED_GREEN_PS & LED_GREEN_MASK) >> LED_GREEN_SHIFT);
  94              		.loc 1 138 0
  95 0000 024B     		ldr	r3, .L8
 139:Generated_Source\PSoC4/LED_GREEN.c **** }
  96              		.loc 1 139 0
  97              		@ sp needed
 138:Generated_Source\PSoC4/LED_GREEN.c ****     return (uint8)((LED_GREEN_PS & LED_GREEN_MASK) >> LED_GREEN_SHIFT);
  98              		.loc 1 138 0
  99 0002 1868     		ldr	r0, [r3]
 100 0004 0123     		mov	r3, #1
 101 0006 1840     		and	r0, r3
 102              		.loc 1 139 0
 103 0008 7047     		bx	lr
 104              	.L9:
 105 000a C046     		.align	2
 106              	.L8:
 107 000c 04030440 		.word	1074004740
 108              		.cfi_endproc
 109              	.LFE2:
 110              		.size	LED_GREEN_Read, .-LED_GREEN_Read
 111              		.section	.text.LED_GREEN_ReadDataReg,"ax",%progbits
 112              		.align	1
 113              		.global	LED_GREEN_ReadDataReg
 114              		.code	16
 115              		.thumb_func
 116              		.type	LED_GREEN_ReadDataReg, %function
 117              	LED_GREEN_ReadDataReg:
 118              	.LFB3:
 140:Generated_Source\PSoC4/LED_GREEN.c **** 
 141:Generated_Source\PSoC4/LED_GREEN.c **** 
 142:Generated_Source\PSoC4/LED_GREEN.c **** /*******************************************************************************
 143:Generated_Source\PSoC4/LED_GREEN.c **** * Function Name: LED_GREEN_ReadDataReg
 144:Generated_Source\PSoC4/LED_GREEN.c **** ****************************************************************************//**
 145:Generated_Source\PSoC4/LED_GREEN.c **** *
 146:Generated_Source\PSoC4/LED_GREEN.c **** * \brief Reads the associated physical port's data output register and masks 
 147:Generated_Source\PSoC4/LED_GREEN.c **** *  the correct bits according to the width and bit position of the component 
 148:Generated_Source\PSoC4/LED_GREEN.c **** *  instance. 
 149:Generated_Source\PSoC4/LED_GREEN.c **** *
 150:Generated_Source\PSoC4/LED_GREEN.c **** * The data output register controls the signal applied to the physical pin in 
 151:Generated_Source\PSoC4/LED_GREEN.c **** * conjunction with the drive mode parameter. This is not the same as the 
 152:Generated_Source\PSoC4/LED_GREEN.c **** * preferred LED_GREEN_Read() API because the 
 153:Generated_Source\PSoC4/LED_GREEN.c **** * LED_GREEN_ReadDataReg() reads the data register instead of the status 
 154:Generated_Source\PSoC4/LED_GREEN.c **** * register. For output pins this is a useful function to determine the value 
 155:Generated_Source\PSoC4/LED_GREEN.c **** * just written to the pin.
 156:Generated_Source\PSoC4/LED_GREEN.c **** *
 157:Generated_Source\PSoC4/LED_GREEN.c **** * \return 
 158:Generated_Source\PSoC4/LED_GREEN.c **** *  The current value of the data register masked and shifted into a right 
 159:Generated_Source\PSoC4/LED_GREEN.c **** *  justified number for the component instance.
 160:Generated_Source\PSoC4/LED_GREEN.c **** *
 161:Generated_Source\PSoC4/LED_GREEN.c **** * \funcusage
 162:Generated_Source\PSoC4/LED_GREEN.c **** *  \snippet LED_GREEN_SUT.c usage_LED_GREEN_ReadDataReg 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 6


 163:Generated_Source\PSoC4/LED_GREEN.c **** *******************************************************************************/
 164:Generated_Source\PSoC4/LED_GREEN.c **** uint8 LED_GREEN_ReadDataReg(void)
 165:Generated_Source\PSoC4/LED_GREEN.c **** {
 119              		.loc 1 165 0
 120              		.cfi_startproc
 166:Generated_Source\PSoC4/LED_GREEN.c ****     return (uint8)((LED_GREEN_DR & LED_GREEN_MASK) >> LED_GREEN_SHIFT);
 121              		.loc 1 166 0
 122 0000 024B     		ldr	r3, .L11
 167:Generated_Source\PSoC4/LED_GREEN.c **** }
 123              		.loc 1 167 0
 124              		@ sp needed
 166:Generated_Source\PSoC4/LED_GREEN.c ****     return (uint8)((LED_GREEN_DR & LED_GREEN_MASK) >> LED_GREEN_SHIFT);
 125              		.loc 1 166 0
 126 0002 1868     		ldr	r0, [r3]
 127 0004 0123     		mov	r3, #1
 128 0006 1840     		and	r0, r3
 129              		.loc 1 167 0
 130 0008 7047     		bx	lr
 131              	.L12:
 132 000a C046     		.align	2
 133              	.L11:
 134 000c 00030440 		.word	1074004736
 135              		.cfi_endproc
 136              	.LFE3:
 137              		.size	LED_GREEN_ReadDataReg, .-LED_GREEN_ReadDataReg
 138              		.section	.text.LED_GREEN_SetInterruptMode,"ax",%progbits
 139              		.align	1
 140              		.global	LED_GREEN_SetInterruptMode
 141              		.code	16
 142              		.thumb_func
 143              		.type	LED_GREEN_SetInterruptMode, %function
 144              	LED_GREEN_SetInterruptMode:
 145              	.LFB4:
 168:Generated_Source\PSoC4/LED_GREEN.c **** 
 169:Generated_Source\PSoC4/LED_GREEN.c **** 
 170:Generated_Source\PSoC4/LED_GREEN.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/LED_GREEN.c **** * Function Name: LED_GREEN_SetInterruptMode
 172:Generated_Source\PSoC4/LED_GREEN.c **** ****************************************************************************//**
 173:Generated_Source\PSoC4/LED_GREEN.c **** *
 174:Generated_Source\PSoC4/LED_GREEN.c **** * \brief Configures the interrupt mode for each of the Pins component's
 175:Generated_Source\PSoC4/LED_GREEN.c **** *  pins. Alternatively you may set the interrupt mode for all the pins
 176:Generated_Source\PSoC4/LED_GREEN.c **** *  specified in the Pins component.
 177:Generated_Source\PSoC4/LED_GREEN.c **** *
 178:Generated_Source\PSoC4/LED_GREEN.c **** *  <b>Note</b> The interrupt is port-wide and therefore any enabled pin
 179:Generated_Source\PSoC4/LED_GREEN.c **** *  interrupt may trigger it.
 180:Generated_Source\PSoC4/LED_GREEN.c **** *
 181:Generated_Source\PSoC4/LED_GREEN.c **** * \param position
 182:Generated_Source\PSoC4/LED_GREEN.c **** *  The pin position as listed in the Pins component. You may OR these to be 
 183:Generated_Source\PSoC4/LED_GREEN.c **** *  able to configure the interrupt mode of multiple pins within a Pins 
 184:Generated_Source\PSoC4/LED_GREEN.c **** *  component. Or you may use LED_GREEN_INTR_ALL to configure the
 185:Generated_Source\PSoC4/LED_GREEN.c **** *  interrupt mode of all the pins in the Pins component.       
 186:Generated_Source\PSoC4/LED_GREEN.c **** *  - LED_GREEN_0_INTR       (First pin in the list)
 187:Generated_Source\PSoC4/LED_GREEN.c **** *  - LED_GREEN_1_INTR       (Second pin in the list)
 188:Generated_Source\PSoC4/LED_GREEN.c **** *  - ...
 189:Generated_Source\PSoC4/LED_GREEN.c **** *  - LED_GREEN_INTR_ALL     (All pins in Pins component)
 190:Generated_Source\PSoC4/LED_GREEN.c **** *
 191:Generated_Source\PSoC4/LED_GREEN.c **** * \param mode
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 7


 192:Generated_Source\PSoC4/LED_GREEN.c **** *  Interrupt mode for the selected pins. Valid options are documented in
 193:Generated_Source\PSoC4/LED_GREEN.c **** *  \ref intrMode.
 194:Generated_Source\PSoC4/LED_GREEN.c **** *
 195:Generated_Source\PSoC4/LED_GREEN.c **** * \return 
 196:Generated_Source\PSoC4/LED_GREEN.c **** *  None
 197:Generated_Source\PSoC4/LED_GREEN.c **** *  
 198:Generated_Source\PSoC4/LED_GREEN.c **** * \sideeffect
 199:Generated_Source\PSoC4/LED_GREEN.c **** *  It is recommended that the interrupt be disabled before calling this 
 200:Generated_Source\PSoC4/LED_GREEN.c **** *  function to avoid unintended interrupt requests. Note that the interrupt
 201:Generated_Source\PSoC4/LED_GREEN.c **** *  type is port wide, and therefore will trigger for any enabled pin on the 
 202:Generated_Source\PSoC4/LED_GREEN.c **** *  port.
 203:Generated_Source\PSoC4/LED_GREEN.c **** *
 204:Generated_Source\PSoC4/LED_GREEN.c **** * \funcusage
 205:Generated_Source\PSoC4/LED_GREEN.c **** *  \snippet LED_GREEN_SUT.c usage_LED_GREEN_SetInterruptMode
 206:Generated_Source\PSoC4/LED_GREEN.c **** *******************************************************************************/
 207:Generated_Source\PSoC4/LED_GREEN.c **** void LED_GREEN_SetInterruptMode(uint16 position, uint16 mode)
 208:Generated_Source\PSoC4/LED_GREEN.c **** {
 146              		.loc 1 208 0
 147              		.cfi_startproc
 148              	.LVL4:
 209:Generated_Source\PSoC4/LED_GREEN.c ****     uint32 intrCfg;
 210:Generated_Source\PSoC4/LED_GREEN.c ****     
 211:Generated_Source\PSoC4/LED_GREEN.c ****     intrCfg =  LED_GREEN_INTCFG & (uint32)(~(uint32)position);
 149              		.loc 1 211 0
 150 0000 034A     		ldr	r2, .L14
 212:Generated_Source\PSoC4/LED_GREEN.c ****     LED_GREEN_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 213:Generated_Source\PSoC4/LED_GREEN.c **** }
 151              		.loc 1 213 0
 152              		@ sp needed
 211:Generated_Source\PSoC4/LED_GREEN.c ****     LED_GREEN_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 153              		.loc 1 211 0
 154 0002 1368     		ldr	r3, [r2]
 155              	.LVL5:
 156 0004 8343     		bic	r3, r0
 157              	.LVL6:
 212:Generated_Source\PSoC4/LED_GREEN.c ****     LED_GREEN_INTCFG = intrCfg | ((uint32)position & (uint32)mode);
 158              		.loc 1 212 0
 159 0006 0840     		and	r0, r1
 160              	.LVL7:
 161 0008 1843     		orr	r0, r3
 162 000a 1060     		str	r0, [r2]
 163              		.loc 1 213 0
 164 000c 7047     		bx	lr
 165              	.L15:
 166 000e C046     		.align	2
 167              	.L14:
 168 0010 0C030440 		.word	1074004748
 169              		.cfi_endproc
 170              	.LFE4:
 171              		.size	LED_GREEN_SetInterruptMode, .-LED_GREEN_SetInterruptMode
 172              		.section	.text.LED_GREEN_ClearInterrupt,"ax",%progbits
 173              		.align	1
 174              		.global	LED_GREEN_ClearInterrupt
 175              		.code	16
 176              		.thumb_func
 177              		.type	LED_GREEN_ClearInterrupt, %function
 178              	LED_GREEN_ClearInterrupt:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 8


 179              	.LFB5:
 214:Generated_Source\PSoC4/LED_GREEN.c **** 
 215:Generated_Source\PSoC4/LED_GREEN.c **** 
 216:Generated_Source\PSoC4/LED_GREEN.c **** /*******************************************************************************
 217:Generated_Source\PSoC4/LED_GREEN.c **** * Function Name: LED_GREEN_ClearInterrupt
 218:Generated_Source\PSoC4/LED_GREEN.c **** ****************************************************************************//**
 219:Generated_Source\PSoC4/LED_GREEN.c **** *
 220:Generated_Source\PSoC4/LED_GREEN.c **** * \brief Clears any active interrupts attached with the component and returns 
 221:Generated_Source\PSoC4/LED_GREEN.c **** *  the value of the interrupt status register allowing determination of which
 222:Generated_Source\PSoC4/LED_GREEN.c **** *  pins generated an interrupt event.
 223:Generated_Source\PSoC4/LED_GREEN.c **** *
 224:Generated_Source\PSoC4/LED_GREEN.c **** * \return 
 225:Generated_Source\PSoC4/LED_GREEN.c **** *  The right-shifted current value of the interrupt status register. Each pin 
 226:Generated_Source\PSoC4/LED_GREEN.c **** *  has one bit set if it generated an interrupt event. For example, bit 0 is 
 227:Generated_Source\PSoC4/LED_GREEN.c **** *  for pin 0 and bit 1 is for pin 1 of the Pins component.
 228:Generated_Source\PSoC4/LED_GREEN.c **** *  
 229:Generated_Source\PSoC4/LED_GREEN.c **** * \sideeffect
 230:Generated_Source\PSoC4/LED_GREEN.c **** *  Clears all bits of the physical port's interrupt status register, not just
 231:Generated_Source\PSoC4/LED_GREEN.c **** *  those associated with the Pins component.
 232:Generated_Source\PSoC4/LED_GREEN.c **** *
 233:Generated_Source\PSoC4/LED_GREEN.c **** * \funcusage
 234:Generated_Source\PSoC4/LED_GREEN.c **** *  \snippet LED_GREEN_SUT.c usage_LED_GREEN_ClearInterrupt
 235:Generated_Source\PSoC4/LED_GREEN.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/LED_GREEN.c **** uint8 LED_GREEN_ClearInterrupt(void)
 237:Generated_Source\PSoC4/LED_GREEN.c **** {
 180              		.loc 1 237 0
 181              		.cfi_startproc
 238:Generated_Source\PSoC4/LED_GREEN.c **** 	uint8 maskedStatus = (uint8)(LED_GREEN_INTSTAT & LED_GREEN_MASK);
 182              		.loc 1 238 0
 183 0000 0123     		mov	r3, #1
 184 0002 024A     		ldr	r2, .L17
 239:Generated_Source\PSoC4/LED_GREEN.c **** 	LED_GREEN_INTSTAT = maskedStatus;
 240:Generated_Source\PSoC4/LED_GREEN.c ****     return maskedStatus >> LED_GREEN_SHIFT;
 241:Generated_Source\PSoC4/LED_GREEN.c **** }
 185              		.loc 1 241 0
 186              		@ sp needed
 238:Generated_Source\PSoC4/LED_GREEN.c **** 	uint8 maskedStatus = (uint8)(LED_GREEN_INTSTAT & LED_GREEN_MASK);
 187              		.loc 1 238 0
 188 0004 1068     		ldr	r0, [r2]
 189 0006 1840     		and	r0, r3
 190              	.LVL8:
 239:Generated_Source\PSoC4/LED_GREEN.c **** 	LED_GREEN_INTSTAT = maskedStatus;
 191              		.loc 1 239 0
 192 0008 1060     		str	r0, [r2]
 193              		.loc 1 241 0
 194 000a 7047     		bx	lr
 195              	.L18:
 196              		.align	2
 197              	.L17:
 198 000c 10030440 		.word	1074004752
 199              		.cfi_endproc
 200              	.LFE5:
 201              		.size	LED_GREEN_ClearInterrupt, .-LED_GREEN_ClearInterrupt
 202              		.text
 203              	.Letext0:
 204              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 205              		.section	.debug_info,"",%progbits
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 9


 206              	.Ldebug_info0:
 207 0000 9C010000 		.4byte	0x19c
 208 0004 0400     		.2byte	0x4
 209 0006 00000000 		.4byte	.Ldebug_abbrev0
 210 000a 04       		.byte	0x4
 211 000b 01       		.uleb128 0x1
 212 000c AC000000 		.4byte	.LASF28
 213 0010 01       		.byte	0x1
 214 0011 63020000 		.4byte	.LASF29
 215 0015 00000000 		.4byte	.LASF30
 216 0019 00000000 		.4byte	.Ldebug_ranges0+0
 217 001d 00000000 		.4byte	0
 218 0021 00000000 		.4byte	.Ldebug_line0
 219 0025 02       		.uleb128 0x2
 220 0026 01       		.byte	0x1
 221 0027 06       		.byte	0x6
 222 0028 8F020000 		.4byte	.LASF0
 223 002c 02       		.uleb128 0x2
 224 002d 01       		.byte	0x1
 225 002e 08       		.byte	0x8
 226 002f 56010000 		.4byte	.LASF1
 227 0033 02       		.uleb128 0x2
 228 0034 02       		.byte	0x2
 229 0035 05       		.byte	0x5
 230 0036 53020000 		.4byte	.LASF2
 231 003a 02       		.uleb128 0x2
 232 003b 02       		.byte	0x2
 233 003c 07       		.byte	0x7
 234 003d 7C010000 		.4byte	.LASF3
 235 0041 02       		.uleb128 0x2
 236 0042 04       		.byte	0x4
 237 0043 05       		.byte	0x5
 238 0044 86020000 		.4byte	.LASF4
 239 0048 02       		.uleb128 0x2
 240 0049 04       		.byte	0x4
 241 004a 07       		.byte	0x7
 242 004b 6A010000 		.4byte	.LASF5
 243 004f 02       		.uleb128 0x2
 244 0050 08       		.byte	0x8
 245 0051 05       		.byte	0x5
 246 0052 1A020000 		.4byte	.LASF6
 247 0056 02       		.uleb128 0x2
 248 0057 08       		.byte	0x8
 249 0058 07       		.byte	0x7
 250 0059 E8010000 		.4byte	.LASF7
 251 005d 03       		.uleb128 0x3
 252 005e 04       		.byte	0x4
 253 005f 05       		.byte	0x5
 254 0060 696E7400 		.ascii	"int\000"
 255 0064 02       		.uleb128 0x2
 256 0065 04       		.byte	0x4
 257 0066 07       		.byte	0x7
 258 0067 DB010000 		.4byte	.LASF8
 259 006b 04       		.uleb128 0x4
 260 006c 5D020000 		.4byte	.LASF9
 261 0070 02       		.byte	0x2
 262 0071 B901     		.2byte	0x1b9
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 10


 263 0073 2C000000 		.4byte	0x2c
 264 0077 04       		.uleb128 0x4
 265 0078 A5010000 		.4byte	.LASF10
 266 007c 02       		.byte	0x2
 267 007d BA01     		.2byte	0x1ba
 268 007f 3A000000 		.4byte	0x3a
 269 0083 04       		.uleb128 0x4
 270 0084 CC010000 		.4byte	.LASF11
 271 0088 02       		.byte	0x2
 272 0089 BB01     		.2byte	0x1bb
 273 008b 48000000 		.4byte	0x48
 274 008f 02       		.uleb128 0x2
 275 0090 04       		.byte	0x4
 276 0091 04       		.byte	0x4
 277 0092 50010000 		.4byte	.LASF12
 278 0096 02       		.uleb128 0x2
 279 0097 08       		.byte	0x8
 280 0098 04       		.byte	0x4
 281 0099 9E010000 		.4byte	.LASF13
 282 009d 02       		.uleb128 0x2
 283 009e 01       		.byte	0x1
 284 009f 08       		.byte	0x8
 285 00a0 35020000 		.4byte	.LASF14
 286 00a4 04       		.uleb128 0x4
 287 00a5 8B000000 		.4byte	.LASF15
 288 00a9 02       		.byte	0x2
 289 00aa 6502     		.2byte	0x265
 290 00ac B0000000 		.4byte	0xb0
 291 00b0 05       		.uleb128 0x5
 292 00b1 83000000 		.4byte	0x83
 293 00b5 06       		.uleb128 0x6
 294 00b6 AC010000 		.4byte	.LASF16
 295 00ba 01       		.byte	0x1
 296 00bb 48       		.byte	0x48
 297 00bc 00000000 		.4byte	.LFB0
 298 00c0 14000000 		.4byte	.LFE0-.LFB0
 299 00c4 01       		.uleb128 0x1
 300 00c5 9C       		.byte	0x9c
 301 00c6 DA000000 		.4byte	0xda
 302 00ca 07       		.uleb128 0x7
 303 00cb FF010000 		.4byte	.LASF18
 304 00cf 01       		.byte	0x1
 305 00d0 48       		.byte	0x48
 306 00d1 6B000000 		.4byte	0x6b
 307 00d5 00000000 		.4byte	.LLST0
 308 00d9 00       		.byte	0
 309 00da 06       		.uleb128 0x6
 310 00db 40010000 		.4byte	.LASF17
 311 00df 01       		.byte	0x1
 312 00e0 6F       		.byte	0x6f
 313 00e1 00000000 		.4byte	.LFB1
 314 00e5 18000000 		.4byte	.LFE1-.LFB1
 315 00e9 01       		.uleb128 0x1
 316 00ea 9C       		.byte	0x9c
 317 00eb 11010000 		.4byte	0x111
 318 00ef 08       		.uleb128 0x8
 319 00f0 3A010000 		.4byte	.LASF19
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 11


 320 00f4 01       		.byte	0x1
 321 00f5 6F       		.byte	0x6f
 322 00f6 6B000000 		.4byte	0x6b
 323 00fa 01       		.uleb128 0x1
 324 00fb 50       		.byte	0x50
 325 00fc 09       		.uleb128 0x9
 326 00fd 64010000 		.4byte	.LASF24
 327 0101 01       		.byte	0x1
 328 0102 71       		.byte	0x71
 329 0103 6B000000 		.4byte	0x6b
 330 0107 08       		.uleb128 0x8
 331 0108 70       		.byte	0x70
 332 0109 00       		.sleb128 0
 333 010a 31       		.byte	0x31
 334 010b 1A       		.byte	0x1a
 335 010c 72       		.byte	0x72
 336 010d 00       		.sleb128 0
 337 010e 21       		.byte	0x21
 338 010f 9F       		.byte	0x9f
 339 0110 00       		.byte	0
 340 0111 0A       		.uleb128 0xa
 341 0112 8F010000 		.4byte	.LASF20
 342 0116 01       		.byte	0x1
 343 0117 88       		.byte	0x88
 344 0118 6B000000 		.4byte	0x6b
 345 011c 00000000 		.4byte	.LFB2
 346 0120 10000000 		.4byte	.LFE2-.LFB2
 347 0124 01       		.uleb128 0x1
 348 0125 9C       		.byte	0x9c
 349 0126 0A       		.uleb128 0xa
 350 0127 04020000 		.4byte	.LASF21
 351 012b 01       		.byte	0x1
 352 012c A4       		.byte	0xa4
 353 012d 6B000000 		.4byte	0x6b
 354 0131 00000000 		.4byte	.LFB3
 355 0135 10000000 		.4byte	.LFE3-.LFB3
 356 0139 01       		.uleb128 0x1
 357 013a 9C       		.byte	0x9c
 358 013b 06       		.uleb128 0x6
 359 013c 91000000 		.4byte	.LASF22
 360 0140 01       		.byte	0x1
 361 0141 CF       		.byte	0xcf
 362 0142 00000000 		.4byte	.LFB4
 363 0146 14000000 		.4byte	.LFE4-.LFB4
 364 014a 01       		.uleb128 0x1
 365 014b 9C       		.byte	0x9c
 366 014c 7C010000 		.4byte	0x17c
 367 0150 07       		.uleb128 0x7
 368 0151 C3010000 		.4byte	.LASF23
 369 0155 01       		.byte	0x1
 370 0156 CF       		.byte	0xcf
 371 0157 77000000 		.4byte	0x77
 372 015b 21000000 		.4byte	.LLST1
 373 015f 08       		.uleb128 0x8
 374 0160 FF010000 		.4byte	.LASF18
 375 0164 01       		.byte	0x1
 376 0165 CF       		.byte	0xcf
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 12


 377 0166 77000000 		.4byte	0x77
 378 016a 01       		.uleb128 0x1
 379 016b 51       		.byte	0x51
 380 016c 0B       		.uleb128 0xb
 381 016d D3010000 		.4byte	.LASF25
 382 0171 01       		.byte	0x1
 383 0172 D1       		.byte	0xd1
 384 0173 83000000 		.4byte	0x83
 385 0177 42000000 		.4byte	.LLST2
 386 017b 00       		.byte	0
 387 017c 0C       		.uleb128 0xc
 388 017d 3A020000 		.4byte	.LASF26
 389 0181 01       		.byte	0x1
 390 0182 EC       		.byte	0xec
 391 0183 6B000000 		.4byte	0x6b
 392 0187 00000000 		.4byte	.LFB5
 393 018b 10000000 		.4byte	.LFE5-.LFB5
 394 018f 01       		.uleb128 0x1
 395 0190 9C       		.byte	0x9c
 396 0191 09       		.uleb128 0x9
 397 0192 28020000 		.4byte	.LASF27
 398 0196 01       		.byte	0x1
 399 0197 EE       		.byte	0xee
 400 0198 6B000000 		.4byte	0x6b
 401 019c 01       		.uleb128 0x1
 402 019d 50       		.byte	0x50
 403 019e 00       		.byte	0
 404 019f 00       		.byte	0
 405              		.section	.debug_abbrev,"",%progbits
 406              	.Ldebug_abbrev0:
 407 0000 01       		.uleb128 0x1
 408 0001 11       		.uleb128 0x11
 409 0002 01       		.byte	0x1
 410 0003 25       		.uleb128 0x25
 411 0004 0E       		.uleb128 0xe
 412 0005 13       		.uleb128 0x13
 413 0006 0B       		.uleb128 0xb
 414 0007 03       		.uleb128 0x3
 415 0008 0E       		.uleb128 0xe
 416 0009 1B       		.uleb128 0x1b
 417 000a 0E       		.uleb128 0xe
 418 000b 55       		.uleb128 0x55
 419 000c 17       		.uleb128 0x17
 420 000d 11       		.uleb128 0x11
 421 000e 01       		.uleb128 0x1
 422 000f 10       		.uleb128 0x10
 423 0010 17       		.uleb128 0x17
 424 0011 00       		.byte	0
 425 0012 00       		.byte	0
 426 0013 02       		.uleb128 0x2
 427 0014 24       		.uleb128 0x24
 428 0015 00       		.byte	0
 429 0016 0B       		.uleb128 0xb
 430 0017 0B       		.uleb128 0xb
 431 0018 3E       		.uleb128 0x3e
 432 0019 0B       		.uleb128 0xb
 433 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 13


 434 001b 0E       		.uleb128 0xe
 435 001c 00       		.byte	0
 436 001d 00       		.byte	0
 437 001e 03       		.uleb128 0x3
 438 001f 24       		.uleb128 0x24
 439 0020 00       		.byte	0
 440 0021 0B       		.uleb128 0xb
 441 0022 0B       		.uleb128 0xb
 442 0023 3E       		.uleb128 0x3e
 443 0024 0B       		.uleb128 0xb
 444 0025 03       		.uleb128 0x3
 445 0026 08       		.uleb128 0x8
 446 0027 00       		.byte	0
 447 0028 00       		.byte	0
 448 0029 04       		.uleb128 0x4
 449 002a 16       		.uleb128 0x16
 450 002b 00       		.byte	0
 451 002c 03       		.uleb128 0x3
 452 002d 0E       		.uleb128 0xe
 453 002e 3A       		.uleb128 0x3a
 454 002f 0B       		.uleb128 0xb
 455 0030 3B       		.uleb128 0x3b
 456 0031 05       		.uleb128 0x5
 457 0032 49       		.uleb128 0x49
 458 0033 13       		.uleb128 0x13
 459 0034 00       		.byte	0
 460 0035 00       		.byte	0
 461 0036 05       		.uleb128 0x5
 462 0037 35       		.uleb128 0x35
 463 0038 00       		.byte	0
 464 0039 49       		.uleb128 0x49
 465 003a 13       		.uleb128 0x13
 466 003b 00       		.byte	0
 467 003c 00       		.byte	0
 468 003d 06       		.uleb128 0x6
 469 003e 2E       		.uleb128 0x2e
 470 003f 01       		.byte	0x1
 471 0040 3F       		.uleb128 0x3f
 472 0041 19       		.uleb128 0x19
 473 0042 03       		.uleb128 0x3
 474 0043 0E       		.uleb128 0xe
 475 0044 3A       		.uleb128 0x3a
 476 0045 0B       		.uleb128 0xb
 477 0046 3B       		.uleb128 0x3b
 478 0047 0B       		.uleb128 0xb
 479 0048 27       		.uleb128 0x27
 480 0049 19       		.uleb128 0x19
 481 004a 11       		.uleb128 0x11
 482 004b 01       		.uleb128 0x1
 483 004c 12       		.uleb128 0x12
 484 004d 06       		.uleb128 0x6
 485 004e 40       		.uleb128 0x40
 486 004f 18       		.uleb128 0x18
 487 0050 9742     		.uleb128 0x2117
 488 0052 19       		.uleb128 0x19
 489 0053 01       		.uleb128 0x1
 490 0054 13       		.uleb128 0x13
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 14


 491 0055 00       		.byte	0
 492 0056 00       		.byte	0
 493 0057 07       		.uleb128 0x7
 494 0058 05       		.uleb128 0x5
 495 0059 00       		.byte	0
 496 005a 03       		.uleb128 0x3
 497 005b 0E       		.uleb128 0xe
 498 005c 3A       		.uleb128 0x3a
 499 005d 0B       		.uleb128 0xb
 500 005e 3B       		.uleb128 0x3b
 501 005f 0B       		.uleb128 0xb
 502 0060 49       		.uleb128 0x49
 503 0061 13       		.uleb128 0x13
 504 0062 02       		.uleb128 0x2
 505 0063 17       		.uleb128 0x17
 506 0064 00       		.byte	0
 507 0065 00       		.byte	0
 508 0066 08       		.uleb128 0x8
 509 0067 05       		.uleb128 0x5
 510 0068 00       		.byte	0
 511 0069 03       		.uleb128 0x3
 512 006a 0E       		.uleb128 0xe
 513 006b 3A       		.uleb128 0x3a
 514 006c 0B       		.uleb128 0xb
 515 006d 3B       		.uleb128 0x3b
 516 006e 0B       		.uleb128 0xb
 517 006f 49       		.uleb128 0x49
 518 0070 13       		.uleb128 0x13
 519 0071 02       		.uleb128 0x2
 520 0072 18       		.uleb128 0x18
 521 0073 00       		.byte	0
 522 0074 00       		.byte	0
 523 0075 09       		.uleb128 0x9
 524 0076 34       		.uleb128 0x34
 525 0077 00       		.byte	0
 526 0078 03       		.uleb128 0x3
 527 0079 0E       		.uleb128 0xe
 528 007a 3A       		.uleb128 0x3a
 529 007b 0B       		.uleb128 0xb
 530 007c 3B       		.uleb128 0x3b
 531 007d 0B       		.uleb128 0xb
 532 007e 49       		.uleb128 0x49
 533 007f 13       		.uleb128 0x13
 534 0080 02       		.uleb128 0x2
 535 0081 18       		.uleb128 0x18
 536 0082 00       		.byte	0
 537 0083 00       		.byte	0
 538 0084 0A       		.uleb128 0xa
 539 0085 2E       		.uleb128 0x2e
 540 0086 00       		.byte	0
 541 0087 3F       		.uleb128 0x3f
 542 0088 19       		.uleb128 0x19
 543 0089 03       		.uleb128 0x3
 544 008a 0E       		.uleb128 0xe
 545 008b 3A       		.uleb128 0x3a
 546 008c 0B       		.uleb128 0xb
 547 008d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 15


 548 008e 0B       		.uleb128 0xb
 549 008f 27       		.uleb128 0x27
 550 0090 19       		.uleb128 0x19
 551 0091 49       		.uleb128 0x49
 552 0092 13       		.uleb128 0x13
 553 0093 11       		.uleb128 0x11
 554 0094 01       		.uleb128 0x1
 555 0095 12       		.uleb128 0x12
 556 0096 06       		.uleb128 0x6
 557 0097 40       		.uleb128 0x40
 558 0098 18       		.uleb128 0x18
 559 0099 9742     		.uleb128 0x2117
 560 009b 19       		.uleb128 0x19
 561 009c 00       		.byte	0
 562 009d 00       		.byte	0
 563 009e 0B       		.uleb128 0xb
 564 009f 34       		.uleb128 0x34
 565 00a0 00       		.byte	0
 566 00a1 03       		.uleb128 0x3
 567 00a2 0E       		.uleb128 0xe
 568 00a3 3A       		.uleb128 0x3a
 569 00a4 0B       		.uleb128 0xb
 570 00a5 3B       		.uleb128 0x3b
 571 00a6 0B       		.uleb128 0xb
 572 00a7 49       		.uleb128 0x49
 573 00a8 13       		.uleb128 0x13
 574 00a9 02       		.uleb128 0x2
 575 00aa 17       		.uleb128 0x17
 576 00ab 00       		.byte	0
 577 00ac 00       		.byte	0
 578 00ad 0C       		.uleb128 0xc
 579 00ae 2E       		.uleb128 0x2e
 580 00af 01       		.byte	0x1
 581 00b0 3F       		.uleb128 0x3f
 582 00b1 19       		.uleb128 0x19
 583 00b2 03       		.uleb128 0x3
 584 00b3 0E       		.uleb128 0xe
 585 00b4 3A       		.uleb128 0x3a
 586 00b5 0B       		.uleb128 0xb
 587 00b6 3B       		.uleb128 0x3b
 588 00b7 0B       		.uleb128 0xb
 589 00b8 27       		.uleb128 0x27
 590 00b9 19       		.uleb128 0x19
 591 00ba 49       		.uleb128 0x49
 592 00bb 13       		.uleb128 0x13
 593 00bc 11       		.uleb128 0x11
 594 00bd 01       		.uleb128 0x1
 595 00be 12       		.uleb128 0x12
 596 00bf 06       		.uleb128 0x6
 597 00c0 40       		.uleb128 0x40
 598 00c1 18       		.uleb128 0x18
 599 00c2 9742     		.uleb128 0x2117
 600 00c4 19       		.uleb128 0x19
 601 00c5 00       		.byte	0
 602 00c6 00       		.byte	0
 603 00c7 00       		.byte	0
 604              		.section	.debug_loc,"",%progbits
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 16


 605              	.Ldebug_loc0:
 606              	.LLST0:
 607 0000 00000000 		.4byte	.LVL0
 608 0004 0A000000 		.4byte	.LVL1
 609 0008 0100     		.2byte	0x1
 610 000a 50       		.byte	0x50
 611 000b 0A000000 		.4byte	.LVL1
 612 000f 14000000 		.4byte	.LFE0
 613 0013 0400     		.2byte	0x4
 614 0015 F3       		.byte	0xf3
 615 0016 01       		.uleb128 0x1
 616 0017 50       		.byte	0x50
 617 0018 9F       		.byte	0x9f
 618 0019 00000000 		.4byte	0
 619 001d 00000000 		.4byte	0
 620              	.LLST1:
 621 0021 00000000 		.4byte	.LVL4
 622 0025 08000000 		.4byte	.LVL7
 623 0029 0100     		.2byte	0x1
 624 002b 50       		.byte	0x50
 625 002c 08000000 		.4byte	.LVL7
 626 0030 14000000 		.4byte	.LFE4
 627 0034 0400     		.2byte	0x4
 628 0036 F3       		.byte	0xf3
 629 0037 01       		.uleb128 0x1
 630 0038 50       		.byte	0x50
 631 0039 9F       		.byte	0x9f
 632 003a 00000000 		.4byte	0
 633 003e 00000000 		.4byte	0
 634              	.LLST2:
 635 0042 04000000 		.4byte	.LVL5
 636 0046 06000000 		.4byte	.LVL6
 637 004a 0B00     		.2byte	0xb
 638 004c 70       		.byte	0x70
 639 004d 00       		.sleb128 0
 640 004e 0A       		.byte	0xa
 641 004f FFFF     		.2byte	0xffff
 642 0051 1A       		.byte	0x1a
 643 0052 20       		.byte	0x20
 644 0053 73       		.byte	0x73
 645 0054 00       		.sleb128 0
 646 0055 1A       		.byte	0x1a
 647 0056 9F       		.byte	0x9f
 648 0057 00000000 		.4byte	0
 649 005b 00000000 		.4byte	0
 650              		.section	.debug_aranges,"",%progbits
 651 0000 44000000 		.4byte	0x44
 652 0004 0200     		.2byte	0x2
 653 0006 00000000 		.4byte	.Ldebug_info0
 654 000a 04       		.byte	0x4
 655 000b 00       		.byte	0
 656 000c 0000     		.2byte	0
 657 000e 0000     		.2byte	0
 658 0010 00000000 		.4byte	.LFB0
 659 0014 14000000 		.4byte	.LFE0-.LFB0
 660 0018 00000000 		.4byte	.LFB1
 661 001c 18000000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 17


 662 0020 00000000 		.4byte	.LFB2
 663 0024 10000000 		.4byte	.LFE2-.LFB2
 664 0028 00000000 		.4byte	.LFB3
 665 002c 10000000 		.4byte	.LFE3-.LFB3
 666 0030 00000000 		.4byte	.LFB4
 667 0034 14000000 		.4byte	.LFE4-.LFB4
 668 0038 00000000 		.4byte	.LFB5
 669 003c 10000000 		.4byte	.LFE5-.LFB5
 670 0040 00000000 		.4byte	0
 671 0044 00000000 		.4byte	0
 672              		.section	.debug_ranges,"",%progbits
 673              	.Ldebug_ranges0:
 674 0000 00000000 		.4byte	.LFB0
 675 0004 14000000 		.4byte	.LFE0
 676 0008 00000000 		.4byte	.LFB1
 677 000c 18000000 		.4byte	.LFE1
 678 0010 00000000 		.4byte	.LFB2
 679 0014 10000000 		.4byte	.LFE2
 680 0018 00000000 		.4byte	.LFB3
 681 001c 10000000 		.4byte	.LFE3
 682 0020 00000000 		.4byte	.LFB4
 683 0024 14000000 		.4byte	.LFE4
 684 0028 00000000 		.4byte	.LFB5
 685 002c 10000000 		.4byte	.LFE5
 686 0030 00000000 		.4byte	0
 687 0034 00000000 		.4byte	0
 688              		.section	.debug_line,"",%progbits
 689              	.Ldebug_line0:
 690 0000 C8000000 		.section	.debug_str,"MS",%progbits,1
 690      02004600 
 690      00000201 
 690      FB0E0D00 
 690      01010101 
 691              	.LASF30:
 692 0000 433A5C55 		.ascii	"C:\\Users\\zhiantec\\Documents\\Tencent Files\\1241"
 692      73657273 
 692      5C7A6869 
 692      616E7465 
 692      635C446F 
 693 002e 39333938 		.ascii	"939835\\FileRecv\\MobileFile\\second_images[4-8]\\E"
 693      33355C46 
 693      696C6552 
 693      6563765C 
 693      4D6F6269 
 694 005d 6E747261 		.ascii	"ntranceGuard_171019-12.50\\EntranceGuard.cydsn\000"
 694      6E636547 
 694      75617264 
 694      5F313731 
 694      3031392D 
 695              	.LASF15:
 696 008b 72656733 		.ascii	"reg32\000"
 696      3200
 697              	.LASF22:
 698 0091 4C45445F 		.ascii	"LED_GREEN_SetInterruptMode\000"
 698      47524545 
 698      4E5F5365 
 698      74496E74 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 18


 698      65727275 
 699              	.LASF28:
 700 00ac 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 700      4320342E 
 700      392E3320 
 700      32303135 
 700      30333033 
 701 00df 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 701      20726576 
 701      6973696F 
 701      6E203232 
 701      31323230 
 702 0112 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 702      66756E63 
 702      74696F6E 
 702      2D736563 
 702      74696F6E 
 703              	.LASF19:
 704 013a 76616C75 		.ascii	"value\000"
 704      6500
 705              	.LASF17:
 706 0140 4C45445F 		.ascii	"LED_GREEN_Write\000"
 706      47524545 
 706      4E5F5772 
 706      69746500 
 707              	.LASF12:
 708 0150 666C6F61 		.ascii	"float\000"
 708      7400
 709              	.LASF1:
 710 0156 756E7369 		.ascii	"unsigned char\000"
 710      676E6564 
 710      20636861 
 710      7200
 711              	.LASF24:
 712 0164 64725661 		.ascii	"drVal\000"
 712      6C00
 713              	.LASF5:
 714 016a 6C6F6E67 		.ascii	"long unsigned int\000"
 714      20756E73 
 714      69676E65 
 714      6420696E 
 714      7400
 715              	.LASF3:
 716 017c 73686F72 		.ascii	"short unsigned int\000"
 716      7420756E 
 716      7369676E 
 716      65642069 
 716      6E7400
 717              	.LASF20:
 718 018f 4C45445F 		.ascii	"LED_GREEN_Read\000"
 718      47524545 
 718      4E5F5265 
 718      616400
 719              	.LASF13:
 720 019e 646F7562 		.ascii	"double\000"
 720      6C6500
 721              	.LASF10:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 19


 722 01a5 75696E74 		.ascii	"uint16\000"
 722      313600
 723              	.LASF16:
 724 01ac 4C45445F 		.ascii	"LED_GREEN_SetDriveMode\000"
 724      47524545 
 724      4E5F5365 
 724      74447269 
 724      76654D6F 
 725              	.LASF23:
 726 01c3 706F7369 		.ascii	"position\000"
 726      74696F6E 
 726      00
 727              	.LASF11:
 728 01cc 75696E74 		.ascii	"uint32\000"
 728      333200
 729              	.LASF25:
 730 01d3 696E7472 		.ascii	"intrCfg\000"
 730      43666700 
 731              	.LASF8:
 732 01db 756E7369 		.ascii	"unsigned int\000"
 732      676E6564 
 732      20696E74 
 732      00
 733              	.LASF7:
 734 01e8 6C6F6E67 		.ascii	"long long unsigned int\000"
 734      206C6F6E 
 734      6720756E 
 734      7369676E 
 734      65642069 
 735              	.LASF18:
 736 01ff 6D6F6465 		.ascii	"mode\000"
 736      00
 737              	.LASF21:
 738 0204 4C45445F 		.ascii	"LED_GREEN_ReadDataReg\000"
 738      47524545 
 738      4E5F5265 
 738      61644461 
 738      74615265 
 739              	.LASF6:
 740 021a 6C6F6E67 		.ascii	"long long int\000"
 740      206C6F6E 
 740      6720696E 
 740      7400
 741              	.LASF27:
 742 0228 6D61736B 		.ascii	"maskedStatus\000"
 742      65645374 
 742      61747573 
 742      00
 743              	.LASF14:
 744 0235 63686172 		.ascii	"char\000"
 744      00
 745              	.LASF26:
 746 023a 4C45445F 		.ascii	"LED_GREEN_ClearInterrupt\000"
 746      47524545 
 746      4E5F436C 
 746      65617249 
 746      6E746572 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccErRiUX.s 			page 20


 747              	.LASF2:
 748 0253 73686F72 		.ascii	"short int\000"
 748      7420696E 
 748      7400
 749              	.LASF9:
 750 025d 75696E74 		.ascii	"uint8\000"
 750      3800
 751              	.LASF29:
 752 0263 47656E65 		.ascii	"Generated_Source\\PSoC4\\LED_GREEN.c\000"
 752      72617465 
 752      645F536F 
 752      75726365 
 752      5C50536F 
 753              	.LASF4:
 754 0286 6C6F6E67 		.ascii	"long int\000"
 754      20696E74 
 754      00
 755              	.LASF0:
 756 028f 7369676E 		.ascii	"signed char\000"
 756      65642063 
 756      68617200 
 757              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
