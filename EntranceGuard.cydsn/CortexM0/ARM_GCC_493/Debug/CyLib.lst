ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	1
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB2:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.50
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** 
  37:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  38:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  40:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** 
  43:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  44:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  45:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  46:Generated_Source\PSoC4/CyLib.c **** *
  47:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  48:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  49:Generated_Source\PSoC4/CyLib.c **** *
  50:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  51:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  52:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  53:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  54:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** 
  57:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  58:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  59:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  60:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  61:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  71:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  72:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  73:Generated_Source\PSoC4/CyLib.c **** 
  74:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  75:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  76:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  77:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  82:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  83:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  84:Generated_Source\PSoC4/CyLib.c **** 
  85:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  86:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  87:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  88:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /* Stored PUMP_SEL configuration during disable (IMO output by default) */
  91:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkPumpConfig = CY_SYS_CLK_PUMP_ENABLE;
  92:Generated_Source\PSoC4/CyLib.c **** 
  93:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  94:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  95:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  96:Generated_Source\PSoC4/CyLib.c **** *
  97:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  98:Generated_Source\PSoC4/CyLib.c **** *
  99:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 100:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
 101:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 104:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 105:Generated_Source\PSoC4/CyLib.c **** *
 106:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 107:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 108:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 108 0
  27              		.cfi_startproc
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 109 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
 110:Generated_Source\PSoC4/CyLib.c **** 
 111:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 112:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 113:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 114:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 115:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 116:Generated_Source\PSoC4/CyLib.c **** 
 117:Generated_Source\PSoC4/CyLib.c **** 
 118:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 119:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 120:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 121:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 122:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 124 0
  34              		@ sp needed
 109:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  35              		.loc 1 109 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 124 0
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 08010B40 		.word	1074462984
  44              		.cfi_endproc
  45              	.LFE2:
  46              		.size	CySysClkImoStart, .-CySysClkImoStart
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 4


  47              		.section	.text.CySysClkImoStop,"ax",%progbits
  48              		.align	1
  49              		.global	CySysClkImoStop
  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysClkImoStop, %function
  53              	CySysClkImoStop:
  54              	.LFB3:
 125:Generated_Source\PSoC4/CyLib.c **** 
 126:Generated_Source\PSoC4/CyLib.c **** 
 127:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 128:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 129:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 130:Generated_Source\PSoC4/CyLib.c **** *
 131:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 134:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 135:Generated_Source\PSoC4/CyLib.c **** *
 136:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 137:Generated_Source\PSoC4/CyLib.c **** *
 138:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 139:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 140:Generated_Source\PSoC4/CyLib.c **** {
  55              		.loc 1 140 0
  56              		.cfi_startproc
 141:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 142:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 143:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 144:Generated_Source\PSoC4/CyLib.c **** 
 145:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 146:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 147:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  57              		.loc 1 149 0
  58 0000 024A     		ldr	r2, .L5
 150:Generated_Source\PSoC4/CyLib.c **** }
  59              		.loc 1 150 0
  60              		@ sp needed
 149:Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 149 0
  62 0002 1368     		ldr	r3, [r2]
  63 0004 5B00     		lsl	r3, r3, #1
  64 0006 5B08     		lsr	r3, r3, #1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 150 0
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 08010B40 		.word	1074462984
  72              		.cfi_endproc
  73              	.LFE3:
  74              		.size	CySysClkImoStop, .-CySysClkImoStop
  75              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  76              		.align	1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 5


  77              		.global	CySysClkWriteHfclkDirect
  78              		.code	16
  79              		.thumb_func
  80              		.type	CySysClkWriteHfclkDirect, %function
  81              	CySysClkWriteHfclkDirect:
  82              	.LFB4:
 151:Generated_Source\PSoC4/CyLib.c **** 
 152:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 153:Generated_Source\PSoC4/CyLib.c **** 
 154:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 155:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 156:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 157:Generated_Source\PSoC4/CyLib.c ****     *
 158:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 159:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 160:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 161:Generated_Source\PSoC4/CyLib.c ****     *
 162:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 163:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 164:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 165:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 166:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 169:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 172:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 173:Generated_Source\PSoC4/CyLib.c ****     *
 174:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 175:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 176:Generated_Source\PSoC4/CyLib.c ****     {
 177:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 178:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 179:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 180:Generated_Source\PSoC4/CyLib.c **** 
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 182:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 183:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 184:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 185:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 186:Generated_Source\PSoC4/CyLib.c **** 
 187:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 188:Generated_Source\PSoC4/CyLib.c ****         {
 189:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 190:Generated_Source\PSoC4/CyLib.c **** 
 191:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 192:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 193:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 194:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 195:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 196:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 197:Generated_Source\PSoC4/CyLib.c **** 
 198:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 199:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 200:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 201:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 6


 202:Generated_Source\PSoC4/CyLib.c ****                 {
 203:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 204:Generated_Source\PSoC4/CyLib.c ****                     {
 205:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 206:Generated_Source\PSoC4/CyLib.c ****                         break;
 207:Generated_Source\PSoC4/CyLib.c ****                     }
 208:Generated_Source\PSoC4/CyLib.c ****                 }
 209:Generated_Source\PSoC4/CyLib.c ****             #else
 210:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 211:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 212:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 213:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 214:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 215:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 216:Generated_Source\PSoC4/CyLib.c ****                 #else
 217:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 218:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 219:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 220:Generated_Source\PSoC4/CyLib.c **** 
 221:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 222:Generated_Source\PSoC4/CyLib.c **** 
 223:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 224:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 225:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 226:Generated_Source\PSoC4/CyLib.c ****                 {
 227:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 228:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 229:Generated_Source\PSoC4/CyLib.c ****                 }
 230:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 231:Generated_Source\PSoC4/CyLib.c **** 
 232:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 233:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 234:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 235:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 241:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 242:Generated_Source\PSoC4/CyLib.c **** 
 243:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 244:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 245:Generated_Source\PSoC4/CyLib.c ****             {
 246:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 247:Generated_Source\PSoC4/CyLib.c ****             }
 248:Generated_Source\PSoC4/CyLib.c ****             else
 249:Generated_Source\PSoC4/CyLib.c ****             {
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 251:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 254:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 257:Generated_Source\PSoC4/CyLib.c ****             }
 258:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 7


 259:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 260:Generated_Source\PSoC4/CyLib.c **** 
 261:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
 262:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 263:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 264:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 265:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 266:Generated_Source\PSoC4/CyLib.c **** 
 267:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 268:Generated_Source\PSoC4/CyLib.c ****         }
 269:Generated_Source\PSoC4/CyLib.c ****     }
 270:Generated_Source\PSoC4/CyLib.c **** 
 271:Generated_Source\PSoC4/CyLib.c **** 
 272:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 273:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 274:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 275:Generated_Source\PSoC4/CyLib.c ****     *
 276:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 279:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 282:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 283:Generated_Source\PSoC4/CyLib.c ****     *
 284:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 285:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 286:Generated_Source\PSoC4/CyLib.c ****     {
 287:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 288:Generated_Source\PSoC4/CyLib.c ****     }
 289:Generated_Source\PSoC4/CyLib.c **** 
 290:Generated_Source\PSoC4/CyLib.c **** 
 291:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 292:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 293:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 294:Generated_Source\PSoC4/CyLib.c ****     *
 295:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 298:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 301:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 302:Generated_Source\PSoC4/CyLib.c ****     *
 303:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 304:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 305:Generated_Source\PSoC4/CyLib.c ****     {
 306:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 307:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 308:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 309:Generated_Source\PSoC4/CyLib.c ****     }
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c **** 
 314:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 315:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 8


 316:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 317:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 318:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 319:Generated_Source\PSoC4/CyLib.c ****     *
 320:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 321:Generated_Source\PSoC4/CyLib.c ****     *
 322:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 325:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 328:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 329:Generated_Source\PSoC4/CyLib.c ****     *
 330:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 331:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 332:Generated_Source\PSoC4/CyLib.c ****     {
 333:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 334:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 335:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 336:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 337:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 338:Generated_Source\PSoC4/CyLib.c **** 
 339:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 340:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 341:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 342:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 343:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 344:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 347:Generated_Source\PSoC4/CyLib.c ****     }
 348:Generated_Source\PSoC4/CyLib.c **** 
 349:Generated_Source\PSoC4/CyLib.c **** 
 350:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 351:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 352:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 353:Generated_Source\PSoC4/CyLib.c ****     *
 354:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 357:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 360:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 361:Generated_Source\PSoC4/CyLib.c ****     *
 362:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 363:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 364:Generated_Source\PSoC4/CyLib.c ****     {
 365:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 366:Generated_Source\PSoC4/CyLib.c **** 
 367:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 368:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 369:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 370:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 371:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 372:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 9


 373:Generated_Source\PSoC4/CyLib.c **** 
 374:Generated_Source\PSoC4/CyLib.c **** 
 375:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 376:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 377:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 378:Generated_Source\PSoC4/CyLib.c ****     *
 379:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 382:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 385:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 386:Generated_Source\PSoC4/CyLib.c ****     *
 387:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 388:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 389:Generated_Source\PSoC4/CyLib.c ****     {
 390:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 391:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 392:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 393:Generated_Source\PSoC4/CyLib.c ****     }
 394:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 395:Generated_Source\PSoC4/CyLib.c **** 
 396:Generated_Source\PSoC4/CyLib.c **** 
 397:Generated_Source\PSoC4/CyLib.c **** 
 398:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 399:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 400:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 401:Generated_Source\PSoC4/CyLib.c **** *
 402:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 403:Generated_Source\PSoC4/CyLib.c **** *
 404:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 405:Generated_Source\PSoC4/CyLib.c **** *
 406:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 407:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 408:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 409:Generated_Source\PSoC4/CyLib.c **** *
 410:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 412:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 413:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 414:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 415:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 418:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 419:Generated_Source\PSoC4/CyLib.c **** *
 420:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 421:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 424:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 425:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 426:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 427:Generated_Source\PSoC4/CyLib.c **** *
 428:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 429:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 10


 430:Generated_Source\PSoC4/CyLib.c **** {
  83              		.loc 1 430 0
  84              		.cfi_startproc
  85              	.LVL0:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90              		.loc 1 430 0
  91 0002 041C     		mov	r4, r0
 431:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 432:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  92              		.loc 1 434 0
  93 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL1:
 435:Generated_Source\PSoC4/CyLib.c **** 
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  95              		.loc 1 437 0
  96 0008 0723     		mov	r3, #7
  97 000a 0449     		ldr	r1, .L8
 438:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 439:Generated_Source\PSoC4/CyLib.c **** 
 440:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 441:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 442:Generated_Source\PSoC4/CyLib.c ****     {
 443:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 444:Generated_Source\PSoC4/CyLib.c ****     }
 445:Generated_Source\PSoC4/CyLib.c ****     else
 446:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 447:Generated_Source\PSoC4/CyLib.c ****     {
 448:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 449:Generated_Source\PSoC4/CyLib.c ****     }
 450:Generated_Source\PSoC4/CyLib.c **** 
 451:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 454:Generated_Source\PSoC4/CyLib.c **** }
  98              		.loc 1 454 0
  99              		@ sp needed
 437:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 100              		.loc 1 437 0
 101 000c 0A68     		ldr	r2, [r1]
 102 000e 9A43     		bic	r2, r3
 103              	.LVL2:
 448:Generated_Source\PSoC4/CyLib.c ****     }
 104              		.loc 1 448 0
 105 0010 2340     		and	r3, r4
 106 0012 1343     		orr	r3, r2
 107              	.LVL3:
 451:Generated_Source\PSoC4/CyLib.c **** 
 108              		.loc 1 451 0
 109 0014 0B60     		str	r3, [r1]
 453:Generated_Source\PSoC4/CyLib.c **** }
 110              		.loc 1 453 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 11


 111 0016 FFF7FEFF 		bl	CyExitCriticalSection
 112              	.LVL4:
 113              	.LVL5:
 114              		.loc 1 454 0
 115 001a 10BD     		pop	{r4, pc}
 116              	.L9:
 117              		.align	2
 118              	.L8:
 119 001c 00010B40 		.word	1074462976
 120              		.cfi_endproc
 121              	.LFE4:
 122              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 123              		.section	.text.CySysEnablePumpClock,"ax",%progbits
 124              		.align	1
 125              		.global	CySysEnablePumpClock
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysEnablePumpClock, %function
 129              	CySysEnablePumpClock:
 130              	.LFB5:
 455:Generated_Source\PSoC4/CyLib.c **** 
 456:Generated_Source\PSoC4/CyLib.c **** 
 457:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 458:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysEnablePumpClock
 459:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 460:Generated_Source\PSoC4/CyLib.c **** *
 461:Generated_Source\PSoC4/CyLib.c **** * Enables / disables the pump clock.
 462:Generated_Source\PSoC4/CyLib.c **** *
 463:Generated_Source\PSoC4/CyLib.c **** * \param enable  
 464:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_DISABLE - Disables the pump clock
 465:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_PUMP_ENABLE - Enables and restores the operating source of 
 466:Generated_Source\PSoC4/CyLib.c **** * the pump clock.
 467:Generated_Source\PSoC4/CyLib.c **** *
 468:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
 469:Generated_Source\PSoC4/CyLib.c **** *  Enabling/disabling the pump clock does not guarantee glitch free operation 
 470:Generated_Source\PSoC4/CyLib.c **** *  when changing the IMO parameters or clock divider settings.
 471:Generated_Source\PSoC4/CyLib.c **** *
 472:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 473:Generated_Source\PSoC4/CyLib.c **** void CySysEnablePumpClock(uint32 enable)
 474:Generated_Source\PSoC4/CyLib.c **** {
 131              		.loc 1 474 0
 132              		.cfi_startproc
 133              	.LVL6:
 134 0000 10B5     		push	{r4, lr}
 135              		.cfi_def_cfa_offset 8
 136              		.cfi_offset 4, -8
 137              		.cfi_offset 14, -4
 138 0002 094B     		ldr	r3, .L15
 139 0004 094C     		ldr	r4, .L15+4
 475:Generated_Source\PSoC4/CyLib.c ****     #if(CY_IP_SRSSV2)
 476:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 140              		.loc 1 476 0
 141 0006 C207     		lsl	r2, r0, #31
 142 0008 04D5     		bpl	.L11
 477:Generated_Source\PSoC4/CyLib.c ****         {
 478:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG |= (CySysClkPumpConfig << CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIF
 143              		.loc 1 478 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 12


 144 000a 2268     		ldr	r2, [r4]
 145 000c 1968     		ldr	r1, [r3]
 146 000e 5206     		lsl	r2, r2, #25
 147 0010 0A43     		orr	r2, r1
 148 0012 06E0     		b	.L13
 149              	.L11:
 479:Generated_Source\PSoC4/CyLib.c ****         }
 480:Generated_Source\PSoC4/CyLib.c ****         else
 481:Generated_Source\PSoC4/CyLib.c ****         {
 482:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_IMO_CONFIG_REG >> CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_SHIFT
 150              		.loc 1 482 0
 151 0014 1A68     		ldr	r2, [r3]
 152 0016 1201     		lsl	r2, r2, #4
 153 0018 520F     		lsr	r2, r2, #29
 154 001a 2260     		str	r2, [r4]
 483:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK;
 484:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_CONFIG_REG &= ~(CY_SYS_CLK_IMO_CONFIG_PUMP_SEL_MASK << CY_SYS_CLK_IMO_CO
 155              		.loc 1 484 0
 156 001c 1968     		ldr	r1, [r3]
 157 001e 044A     		ldr	r2, .L15+8
 158 0020 0A40     		and	r2, r1
 159              	.L13:
 160 0022 1A60     		str	r2, [r3]
 485:Generated_Source\PSoC4/CyLib.c ****         }
 486:Generated_Source\PSoC4/CyLib.c ****     #else /* CY_IP_SRSSLT */
 487:Generated_Source\PSoC4/CyLib.c ****         if (0u != (CY_SYS_CLK_PUMP_ENABLE & enable))
 488:Generated_Source\PSoC4/CyLib.c ****         {
 489:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG |= (CySysClkPumpConfig << CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT);
 490:Generated_Source\PSoC4/CyLib.c ****         }
 491:Generated_Source\PSoC4/CyLib.c ****         else
 492:Generated_Source\PSoC4/CyLib.c ****         {
 493:Generated_Source\PSoC4/CyLib.c ****             CySysClkPumpConfig = (CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_PUMP_SEL_SHIFT) & 
 494:Generated_Source\PSoC4/CyLib.c ****                                   CY_SYS_CLK_SELECT_PUMP_SEL_MASK;
 495:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG &= ~(CY_SYS_CLK_SELECT_PUMP_SEL_MASK << CY_SYS_CLK_SELECT_PUMP_SE
 496:Generated_Source\PSoC4/CyLib.c ****         }
 497:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_SRSSV2) */
 498:Generated_Source\PSoC4/CyLib.c **** }
 161              		.loc 1 498 0
 162              		@ sp needed
 163 0024 10BD     		pop	{r4, pc}
 164              	.L16:
 165 0026 C046     		.align	2
 166              	.L15:
 167 0028 08010B40 		.word	1074462984
 168 002c 00000000 		.word	.LANCHOR0
 169 0030 FFFFFFF1 		.word	-234881025
 170              		.cfi_endproc
 171              	.LFE5:
 172              		.size	CySysEnablePumpClock, .-CySysEnablePumpClock
 173              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 174              		.align	1
 175              		.global	CySysClkGetSysclkSource
 176              		.code	16
 177              		.thumb_func
 178              		.type	CySysClkGetSysclkSource, %function
 179              	CySysClkGetSysclkSource:
 180              	.LFB6:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 13


 499:Generated_Source\PSoC4/CyLib.c **** 
 500:Generated_Source\PSoC4/CyLib.c **** 
 501:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 502:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 503:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 504:Generated_Source\PSoC4/CyLib.c **** *
 505:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 508:Generated_Source\PSoC4/CyLib.c **** *
 509:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 510:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 511:Generated_Source\PSoC4/CyLib.c **** {
 181              		.loc 1 511 0
 182              		.cfi_startproc
 183 0000 10B5     		push	{r4, lr}
 184              		.cfi_def_cfa_offset 8
 185              		.cfi_offset 4, -8
 186              		.cfi_offset 14, -4
 512:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 513:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 514:Generated_Source\PSoC4/CyLib.c **** 
 515:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 187              		.loc 1 515 0
 188 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 189              	.LVL7:
 516:Generated_Source\PSoC4/CyLib.c **** 
 517:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 518:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 519:Generated_Source\PSoC4/CyLib.c ****     {
 520:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 521:Generated_Source\PSoC4/CyLib.c ****     }
 522:Generated_Source\PSoC4/CyLib.c ****     else
 523:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 524:Generated_Source\PSoC4/CyLib.c ****     {
 525:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 190              		.loc 1 525 0
 191 0006 034B     		ldr	r3, .L18
 526:Generated_Source\PSoC4/CyLib.c ****     }
 527:Generated_Source\PSoC4/CyLib.c **** 
 528:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 529:Generated_Source\PSoC4/CyLib.c **** 
 530:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 531:Generated_Source\PSoC4/CyLib.c **** }
 192              		.loc 1 531 0
 193              		@ sp needed
 525:Generated_Source\PSoC4/CyLib.c ****     }
 194              		.loc 1 525 0
 195 0008 1C68     		ldr	r4, [r3]
 196              	.LVL8:
 528:Generated_Source\PSoC4/CyLib.c **** 
 197              		.loc 1 528 0
 198 000a FFF7FEFF 		bl	CyExitCriticalSection
 199              	.LVL9:
 525:Generated_Source\PSoC4/CyLib.c ****     }
 200              		.loc 1 525 0
 201 000e 0720     		mov	r0, #7
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 14


 202 0010 2040     		and	r0, r4
 203              	.LVL10:
 204              		.loc 1 531 0
 205 0012 10BD     		pop	{r4, pc}
 206              	.L19:
 207              		.align	2
 208              	.L18:
 209 0014 00010B40 		.word	1074462976
 210              		.cfi_endproc
 211              	.LFE6:
 212              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 213              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 214              		.align	1
 215              		.global	CySysClkWriteSysclkDiv
 216              		.code	16
 217              		.thumb_func
 218              		.type	CySysClkWriteSysclkDiv, %function
 219              	CySysClkWriteSysclkDiv:
 220              	.LFB7:
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** 
 534:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 535:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 536:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 537:Generated_Source\PSoC4/CyLib.c **** *
 538:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 539:Generated_Source\PSoC4/CyLib.c **** *
 540:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 541:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 542:Generated_Source\PSoC4/CyLib.c **** *
 543:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 544:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 545:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 546:Generated_Source\PSoC4/CyLib.c **** *
 547:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 548:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 549:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 550:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 551:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 552:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 553:Generated_Source\PSoC4/CyLib.c **** *
 554:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 555:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 556:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 557:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 558:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 559:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 560:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 561:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 562:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 563:Generated_Source\PSoC4/CyLib.c **** *
 564:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 565:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 566:Generated_Source\PSoC4/CyLib.c **** {
 221              		.loc 1 566 0
 222              		.cfi_startproc
 223              	.LVL11:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 15


 224 0000 38B5     		push	{r3, r4, r5, lr}
 225              		.cfi_def_cfa_offset 16
 226              		.cfi_offset 3, -16
 227              		.cfi_offset 4, -12
 228              		.cfi_offset 5, -8
 229              		.cfi_offset 14, -4
 230              		.loc 1 566 0
 231 0002 051C     		mov	r5, r0
 567:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 568:Generated_Source\PSoC4/CyLib.c **** 
 569:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 232              		.loc 1 569 0
 233 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 234              	.LVL12:
 570:Generated_Source\PSoC4/CyLib.c **** 
 571:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 235              		.loc 1 571 0
 236 0008 0721     		mov	r1, #7
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 573:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 237              		.loc 1 573 0
 238 000a 054C     		ldr	r4, .L21
 239 000c 054A     		ldr	r2, .L21+4
 240 000e 2368     		ldr	r3, [r4]
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 241              		.loc 1 571 0
 242 0010 2940     		and	r1, r5
 243 0012 C904     		lsl	r1, r1, #19
 244              		.loc 1 573 0
 245 0014 1340     		and	r3, r2
 572:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 246              		.loc 1 572 0
 247 0016 0B43     		orr	r3, r1
 571:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 248              		.loc 1 571 0
 249 0018 2360     		str	r3, [r4]
 574:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 575:Generated_Source\PSoC4/CyLib.c **** 
 576:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 250              		.loc 1 576 0
 251 001a FFF7FEFF 		bl	CyExitCriticalSection
 252              	.LVL13:
 577:Generated_Source\PSoC4/CyLib.c **** }
 253              		.loc 1 577 0
 254              		@ sp needed
 255              	.LVL14:
 256 001e 38BD     		pop	{r3, r4, r5, pc}
 257              	.L22:
 258              		.align	2
 259              	.L21:
 260 0020 00010B40 		.word	1074462976
 261 0024 FFFFC7FF 		.word	-3670017
 262              		.cfi_endproc
 263              	.LFE7:
 264              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 265              		.section	.text.CySysClkEcoStop,"ax",%progbits
 266              		.align	1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 16


 267              		.global	CySysClkEcoStop
 268              		.code	16
 269              		.thumb_func
 270              		.type	CySysClkEcoStop, %function
 271              	CySysClkEcoStop:
 272              	.LFB10:
 578:Generated_Source\PSoC4/CyLib.c **** 
 579:Generated_Source\PSoC4/CyLib.c **** 
 580:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 581:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 582:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 583:Generated_Source\PSoC4/CyLib.c **** *
 584:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 585:Generated_Source\PSoC4/CyLib.c **** *
 586:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 587:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 588:Generated_Source\PSoC4/CyLib.c **** *
 589:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 590:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 591:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 592:Generated_Source\PSoC4/CyLib.c **** *
 593:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 594:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 595:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 596:Generated_Source\PSoC4/CyLib.c **** *
 597:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 598:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 599:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 600:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 601:Generated_Source\PSoC4/CyLib.c **** *
 602:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 603:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 604:Generated_Source\PSoC4/CyLib.c **** *
 605:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 606:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 607:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 608:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 609:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 610:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 611:Generated_Source\PSoC4/CyLib.c **** *
 612:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 613:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 614:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 615:Generated_Source\PSoC4/CyLib.c **** *
 616:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 617:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 618:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 619:Generated_Source\PSoC4/CyLib.c **** * 4.
 620:Generated_Source\PSoC4/CyLib.c **** *
 621:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 622:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 623:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 624:Generated_Source\PSoC4/CyLib.c ****     {
 625:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 626:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 627:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 628:Generated_Source\PSoC4/CyLib.c ****         #else
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 17


 629:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 630:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 631:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 632:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 633:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 634:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 635:Generated_Source\PSoC4/CyLib.c **** 
 636:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 637:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 638:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 639:Generated_Source\PSoC4/CyLib.c **** 
 640:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 641:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 642:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 645:Generated_Source\PSoC4/CyLib.c **** 
 646:Generated_Source\PSoC4/CyLib.c **** 
 647:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 648:Generated_Source\PSoC4/CyLib.c **** 
 649:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 650:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 651:Generated_Source\PSoC4/CyLib.c ****             {
 652:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 653:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 654:Generated_Source\PSoC4/CyLib.c ****             }
 655:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 656:Generated_Source\PSoC4/CyLib.c **** 
 657:Generated_Source\PSoC4/CyLib.c **** 
 658:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 659:Generated_Source\PSoC4/CyLib.c **** 
 660:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 661:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 662:Generated_Source\PSoC4/CyLib.c ****                 {
 663:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 664:Generated_Source\PSoC4/CyLib.c **** 
 665:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 666:Generated_Source\PSoC4/CyLib.c ****                 {
 667:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 668:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
 669:Generated_Source\PSoC4/CyLib.c ****                 }
 670:Generated_Source\PSoC4/CyLib.c **** 
 671:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 672:Generated_Source\PSoC4/CyLib.c ****                 }
 673:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 674:Generated_Source\PSoC4/CyLib.c **** 
 675:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 676:Generated_Source\PSoC4/CyLib.c **** 
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 679:Generated_Source\PSoC4/CyLib.c **** 
 680:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 681:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 682:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 683:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 684:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 685:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 18


 686:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 687:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 688:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 689:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 690:Generated_Source\PSoC4/CyLib.c **** 
 691:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 692:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 693:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 694:Generated_Source\PSoC4/CyLib.c **** 
 695:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 698:Generated_Source\PSoC4/CyLib.c ****         {
 699:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 700:Generated_Source\PSoC4/CyLib.c ****             {
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 702:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 703:Generated_Source\PSoC4/CyLib.c ****             }
 704:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 705:Generated_Source\PSoC4/CyLib.c ****             {
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 707:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 708:Generated_Source\PSoC4/CyLib.c ****             }
 709:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 710:Generated_Source\PSoC4/CyLib.c ****             {
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 712:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 713:Generated_Source\PSoC4/CyLib.c ****             }
 714:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 715:Generated_Source\PSoC4/CyLib.c ****             {
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 717:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 718:Generated_Source\PSoC4/CyLib.c ****             }
 719:Generated_Source\PSoC4/CyLib.c ****             else
 720:Generated_Source\PSoC4/CyLib.c ****             {
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 722:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 723:Generated_Source\PSoC4/CyLib.c ****             }
 724:Generated_Source\PSoC4/CyLib.c **** 
 725:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
 726:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 727:Generated_Source\PSoC4/CyLib.c **** 
 728:Generated_Source\PSoC4/CyLib.c **** 
 729:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 730:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 731:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 732:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 733:Generated_Source\PSoC4/CyLib.c ****             *
 734:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 735:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 736:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 737:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 738:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 739:Generated_Source\PSoC4/CyLib.c ****             {
 740:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 741:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 742:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 19


 743:Generated_Source\PSoC4/CyLib.c **** 
 744:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 745:Generated_Source\PSoC4/CyLib.c **** 
 746:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 747:Generated_Source\PSoC4/CyLib.c ****             }
 748:Generated_Source\PSoC4/CyLib.c ****             else
 749:Generated_Source\PSoC4/CyLib.c ****             {
 750:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 751:Generated_Source\PSoC4/CyLib.c ****             }
 752:Generated_Source\PSoC4/CyLib.c **** 
 753:Generated_Source\PSoC4/CyLib.c **** 
 754:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 755:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 756:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 757:Generated_Source\PSoC4/CyLib.c ****             *
 758:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 759:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 760:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 761:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 762:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 763:Generated_Source\PSoC4/CyLib.c ****             {
 764:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 765:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 766:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 767:Generated_Source\PSoC4/CyLib.c ****             }
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 770:Generated_Source\PSoC4/CyLib.c **** 
 771:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 772:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 773:Generated_Source\PSoC4/CyLib.c ****                 {
 774:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 775:Generated_Source\PSoC4/CyLib.c ****                 }
 776:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 777:Generated_Source\PSoC4/CyLib.c ****                 {
 778:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 779:Generated_Source\PSoC4/CyLib.c ****                 }
 780:Generated_Source\PSoC4/CyLib.c ****                 else
 781:Generated_Source\PSoC4/CyLib.c ****                 {
 782:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
 783:Generated_Source\PSoC4/CyLib.c ****                 }
 784:Generated_Source\PSoC4/CyLib.c ****             #else
 785:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 786:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 787:Generated_Source\PSoC4/CyLib.c **** 
 788:Generated_Source\PSoC4/CyLib.c **** 
 789:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 791:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 792:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 795:Generated_Source\PSoC4/CyLib.c ****             {
 796:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 797:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 798:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 799:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 20


 800:Generated_Source\PSoC4/CyLib.c ****         }
 801:Generated_Source\PSoC4/CyLib.c ****         else
 802:Generated_Source\PSoC4/CyLib.c ****         {
 803:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 804:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 805:Generated_Source\PSoC4/CyLib.c ****         }
 806:Generated_Source\PSoC4/CyLib.c **** 
 807:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 808:Generated_Source\PSoC4/CyLib.c **** 
 809:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 810:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 811:Generated_Source\PSoC4/CyLib.c ****             {
 812:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 813:Generated_Source\PSoC4/CyLib.c ****             }
 814:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 815:Generated_Source\PSoC4/CyLib.c **** 
 816:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 817:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 818:Generated_Source\PSoC4/CyLib.c ****             {
 819:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 820:Generated_Source\PSoC4/CyLib.c ****             }
 821:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 822:Generated_Source\PSoC4/CyLib.c **** 
 823:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 824:Generated_Source\PSoC4/CyLib.c ****     }
 825:Generated_Source\PSoC4/CyLib.c **** 
 826:Generated_Source\PSoC4/CyLib.c **** #else
 827:Generated_Source\PSoC4/CyLib.c **** 
 828:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 829:Generated_Source\PSoC4/CyLib.c ****     {
 830:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 831:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 832:Generated_Source\PSoC4/CyLib.c **** 
 833:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 834:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 835:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 836:Generated_Source\PSoC4/CyLib.c ****         
 837:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 839:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 840:Generated_Source\PSoC4/CyLib.c **** 
 841:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 842:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 843:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_CCG3)
 844:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 36u) || (freq == 48u))
 845:Generated_Source\PSoC4/CyLib.c ****         #else
 846:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 847:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 848:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 849:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 850:Generated_Source\PSoC4/CyLib.c ****         {
 851:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 852:Generated_Source\PSoC4/CyLib.c **** 
 853:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 854:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 855:Generated_Source\PSoC4/CyLib.c ****                 {
 856:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 21


 857:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 858:Generated_Source\PSoC4/CyLib.c ****                 }
 859:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 860:Generated_Source\PSoC4/CyLib.c **** 
 861:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 862:Generated_Source\PSoC4/CyLib.c **** 
 863:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 864:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 865:Generated_Source\PSoC4/CyLib.c ****                     {
 866:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 867:Generated_Source\PSoC4/CyLib.c **** 
 868:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 869:Generated_Source\PSoC4/CyLib.c ****                     {
 870:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 871:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 872:Generated_Source\PSoC4/CyLib.c ****                     }
 873:Generated_Source\PSoC4/CyLib.c **** 
 874:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 875:Generated_Source\PSoC4/CyLib.c ****                     }
 876:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 879:Generated_Source\PSoC4/CyLib.c **** 
 880:Generated_Source\PSoC4/CyLib.c **** 
 881:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 882:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 883:Generated_Source\PSoC4/CyLib.c **** 
 884:Generated_Source\PSoC4/CyLib.c **** 
 885:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 892:Generated_Source\PSoC4/CyLib.c ****                 {
 893:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 894:Generated_Source\PSoC4/CyLib.c ****                 }
 895:Generated_Source\PSoC4/CyLib.c ****                 else
 896:Generated_Source\PSoC4/CyLib.c ****                 {
 897:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 898:Generated_Source\PSoC4/CyLib.c ****                 }
 899:Generated_Source\PSoC4/CyLib.c ****             #else
 900:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 901:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 902:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 905:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 906:Generated_Source\PSoC4/CyLib.c **** 
 907:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 908:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 909:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 910:Generated_Source\PSoC4/CyLib.c **** 
 911:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 912:Generated_Source\PSoC4/CyLib.c **** 
 913:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 22


 914:Generated_Source\PSoC4/CyLib.c ****             {
 915:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 916:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 917:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 918:Generated_Source\PSoC4/CyLib.c **** 
 919:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 920:Generated_Source\PSoC4/CyLib.c **** 
 921:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 922:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 923:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 924:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 925:Generated_Source\PSoC4/CyLib.c ****             }
 926:Generated_Source\PSoC4/CyLib.c **** 
 927:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 928:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 929:Generated_Source\PSoC4/CyLib.c ****                 {
 930:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 931:Generated_Source\PSoC4/CyLib.c ****                 }
 932:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 933:Generated_Source\PSoC4/CyLib.c ****         
 934:Generated_Source\PSoC4/CyLib.c ****         
 935:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 936:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 937:Generated_Source\PSoC4/CyLib.c ****                 {
 938:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 939:Generated_Source\PSoC4/CyLib.c ****                 }
 940:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****         }
 944:Generated_Source\PSoC4/CyLib.c ****         else
 945:Generated_Source\PSoC4/CyLib.c ****         {
 946:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 947:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 948:Generated_Source\PSoC4/CyLib.c ****         }
 949:Generated_Source\PSoC4/CyLib.c ****     }
 950:Generated_Source\PSoC4/CyLib.c **** 
 951:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 952:Generated_Source\PSoC4/CyLib.c **** 
 953:Generated_Source\PSoC4/CyLib.c **** 
 954:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 955:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 956:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 957:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 958:Generated_Source\PSoC4/CyLib.c ****     *
 959:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 962:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 963:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 966:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 969:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 970:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 23


 971:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 972:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 973:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 976:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 977:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 978:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 979:Generated_Source\PSoC4/CyLib.c ****     *
 980:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 981:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 982:Generated_Source\PSoC4/CyLib.c ****     {
 983:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 984:Generated_Source\PSoC4/CyLib.c **** 
 985:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 986:Generated_Source\PSoC4/CyLib.c **** 
 987:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 988:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 989:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 990:Generated_Source\PSoC4/CyLib.c **** 
 991:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 992:Generated_Source\PSoC4/CyLib.c ****     }
 993:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 994:Generated_Source\PSoC4/CyLib.c **** 
 995:Generated_Source\PSoC4/CyLib.c **** 
 996:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 997:Generated_Source\PSoC4/CyLib.c **** 
 998:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 999:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
1000:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1001:Generated_Source\PSoC4/CyLib.c ****     *
1002:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
1003:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
1004:Generated_Source\PSoC4/CyLib.c ****     *
1005:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
1006:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
1007:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
1008:Generated_Source\PSoC4/CyLib.c ****     * called.
1009:Generated_Source\PSoC4/CyLib.c ****     *
1010:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
1011:Generated_Source\PSoC4/CyLib.c ****     *
1012:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
1013:Generated_Source\PSoC4/CyLib.c ****     *
1014:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
1015:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
1016:Generated_Source\PSoC4/CyLib.c ****     *
1017:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
1018:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
1019:Generated_Source\PSoC4/CyLib.c ****     *
1020:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
1021:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
1022:Generated_Source\PSoC4/CyLib.c ****     * is returned.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1025:Generated_Source\PSoC4/CyLib.c ****     *
1026:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 24


1028:Generated_Source\PSoC4/CyLib.c ****     {
1029:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1030:Generated_Source\PSoC4/CyLib.c **** 
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_ECO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
1037:Generated_Source\PSoC4/CyLib.c **** 
1038:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
1039:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1040:Generated_Source\PSoC4/CyLib.c ****         
1041:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1042:Generated_Source\PSoC4/CyLib.c ****             uint32 regConfig;
1043:Generated_Source\PSoC4/CyLib.c ****             uint32 intrRegMaskStore = 0u;
1044:Generated_Source\PSoC4/CyLib.c ****             
1045:Generated_Source\PSoC4/CyLib.c ****             if (0u != (CY_SYS_BLESS_MT_CFG_REG & (CY_SYS_BLESS_MT_CFG_ENABLE_BLERD <<  CYFLD_BLE_BL
1046:Generated_Source\PSoC4/CyLib.c ****             {
1047:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG |= (CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_D
1048:Generated_Source\PSoC4/CyLib.c ****             }
1049:Generated_Source\PSoC4/CyLib.c ****             else
1050:Generated_Source\PSoC4/CyLib.c ****             {
1051:Generated_Source\PSoC4/CyLib.c ****                 /* Init BLE core */
1052:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG_REG = CY_SYS_BLESS_MT_DELAY_CFG_INIT;
1053:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG2_REG = CY_SYS_BLESS_MT_DELAY_CFG2_INIT;
1054:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_DELAY_CFG3_REG = CY_SYS_BLESS_MT_DELAY_CFG3_INIT;
1055:Generated_Source\PSoC4/CyLib.c ****             
1056:Generated_Source\PSoC4/CyLib.c ****                 /* RCB init */
1057:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_CTRL_REG;
1058:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_RCB_CTRL_CLEAR;
1059:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_RCB_CTRL_INIT;
1060:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_CTRL_REG = regConfig;
1061:Generated_Source\PSoC4/CyLib.c ****                 
1062:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1063:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1064:Generated_Source\PSoC4/CyLib.c ****                 {
1065:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1066:Generated_Source\PSoC4/CyLib.c ****                 }
1067:Generated_Source\PSoC4/CyLib.c ****                 
1068:Generated_Source\PSoC4/CyLib.c ****                 /* Enable BLE core */
1069:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_BLESS_MT_CFG_REG;
1070:Generated_Source\PSoC4/CyLib.c ****                 regConfig &= CY_SYS_BLESS_MT_CFG_CLEAR;
1071:Generated_Source\PSoC4/CyLib.c ****                 regConfig |= CY_SYS_BLESS_MT_CFG_INIT;
1072:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_BLESS_MT_CFG_REG = regConfig;
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****                 while(0u == ((CY_SYS_BLESS_BLERD_ACTIVE_INTR_STAT & CY_SYS_BLESS_INTR_STAT_REG)))
1075:Generated_Source\PSoC4/CyLib.c ****                 {
1076:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until BLERD55 moves to active state */
1077:Generated_Source\PSoC4/CyLib.c ****                 }
1078:Generated_Source\PSoC4/CyLib.c **** 
1079:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK & intrRegMaskStore))
1080:Generated_Source\PSoC4/CyLib.c ****                 {
1081:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= CY_SYS_BLESS_BLERD_ACTIVE_INTR_MASK;
1082:Generated_Source\PSoC4/CyLib.c ****                 }
1083:Generated_Source\PSoC4/CyLib.c ****                 
1084:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 25


1085:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_NRST_SET;
1086:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_DIG_CLK_SET;
1087:Generated_Source\PSoC4/CyLib.c ****                 
1088:Generated_Source\PSoC4/CyLib.c ****                 #if (CY_SYS_BLE_CLK_ECO_FREQ_32MHZ == CYDEV_ECO_CLK_MHZ)
1089:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_DIV_SET;
1090:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | CY_SYS_RCB_RBUS_
1091:Generated_Source\PSoC4/CyLib.c ****                 #else
1092:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_RCB_TX_FIFO_WR_REG = CY_SYS_RCB_RBUS_FREQ_XTAL_NODIV_SET;
1093:Generated_Source\PSoC4/CyLib.c ****                 #endif
1094:Generated_Source\PSoC4/CyLib.c ****                 
1095:Generated_Source\PSoC4/CyLib.c ****                 intrRegMaskStore = CY_SYS_BLESS_INTR_MASK_REG;
1096:Generated_Source\PSoC4/CyLib.c ****                 if(0u != (CY_SYS_RCB_INTR_RCB_DONE & intrRegMaskStore))
1097:Generated_Source\PSoC4/CyLib.c ****                 {
1098:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG &= ~(CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_
1099:Generated_Source\PSoC4/CyLib.c ****                 }
1100:Generated_Source\PSoC4/CyLib.c ****                 
1101:Generated_Source\PSoC4/CyLib.c ****                 /* Send read commands to RBUS */
1102:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RD_CMD | 
1103:Generated_Source\PSoC4/CyLib.c ****                                             (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET & ~CY_SYS_RCB_RBUS_VAL
1104:Generated_Source\PSoC4/CyLib.c ****                                             
1105:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY & CY_SYS_RCB_INTR_REG))
1106:Generated_Source\PSoC4/CyLib.c ****                 {
1107:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RX_FIFO_NOT_EMPTY state */
1108:Generated_Source\PSoC4/CyLib.c ****                 }
1109:Generated_Source\PSoC4/CyLib.c **** 
1110:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG |= CY_SYS_RCB_INTR_RCB_DONE;
1111:Generated_Source\PSoC4/CyLib.c ****                 
1112:Generated_Source\PSoC4/CyLib.c ****                 regConfig = CY_SYS_RCB_RX_FIFO_RD_REG & CY_SYS_RCB_RBUS_TRIM_MASK;
1113:Generated_Source\PSoC4/CyLib.c ****                 
1114:Generated_Source\PSoC4/CyLib.c ****                 /* Send write commands to RBUS */
1115:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_TX_FIFO_WR_REG = (CY_SYS_RCB_RBUS_RF_DCXO_CFG_SET | regConfig | CY_SYS_R
1116:Generated_Source\PSoC4/CyLib.c ****                 
1117:Generated_Source\PSoC4/CyLib.c ****                 while (0u == (CY_SYS_RCB_INTR_RCB_DONE & CY_SYS_RCB_INTR_REG))
1118:Generated_Source\PSoC4/CyLib.c ****                 {
1119:Generated_Source\PSoC4/CyLib.c ****                     /* Wait until RCB_DONE state */
1120:Generated_Source\PSoC4/CyLib.c ****                 }
1121:Generated_Source\PSoC4/CyLib.c ****                 
1122:Generated_Source\PSoC4/CyLib.c ****                 /* Clear Interrupt */
1123:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_RCB_INTR_REG = CY_SYS_RCB_INTR_CLEAR;
1124:Generated_Source\PSoC4/CyLib.c ****                 
1125:Generated_Source\PSoC4/CyLib.c ****                 if(0u != ((CY_SYS_RCB_INTR_RCB_DONE | CY_SYS_RCB_INTR_RCB_RX_FIFO_NOT_EMPTY) & intr
1126:Generated_Source\PSoC4/CyLib.c ****                 {
1127:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_BLESS_INTR_MASK_REG |= intrRegMaskStore;
1128:Generated_Source\PSoC4/CyLib.c ****                 }
1129:Generated_Source\PSoC4/CyLib.c ****                 
1130:Generated_Source\PSoC4/CyLib.c ****             }
1131:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_ECO_SRSSV2 */
1132:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
1133:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
1134:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
1135:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_ECO_BLESS) */
1136:Generated_Source\PSoC4/CyLib.c **** 
1137:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
1138:Generated_Source\PSoC4/CyLib.c ****         {
1139:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1140:Generated_Source\PSoC4/CyLib.c **** 
1141:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 26


1142:Generated_Source\PSoC4/CyLib.c ****             {
1143:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1144:Generated_Source\PSoC4/CyLib.c **** 
1145:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1146:Generated_Source\PSoC4/CyLib.c ****                 {
1147:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1148:Generated_Source\PSoC4/CyLib.c ****                     break;
1149:Generated_Source\PSoC4/CyLib.c ****                 }
1150:Generated_Source\PSoC4/CyLib.c ****             }
1151:Generated_Source\PSoC4/CyLib.c **** 
1152:Generated_Source\PSoC4/CyLib.c ****         }
1153:Generated_Source\PSoC4/CyLib.c **** 
1154:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1155:Generated_Source\PSoC4/CyLib.c ****     }
1156:Generated_Source\PSoC4/CyLib.c **** 
1157:Generated_Source\PSoC4/CyLib.c **** 
1158:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1159:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1160:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1161:Generated_Source\PSoC4/CyLib.c ****     *
1162:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1163:Generated_Source\PSoC4/CyLib.c ****     *
1164:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1165:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1166:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1167:Generated_Source\PSoC4/CyLib.c ****     *
1168:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1169:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1170:Generated_Source\PSoC4/CyLib.c ****     {
 273              		.loc 1 1170 0
 274              		.cfi_startproc
1171:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1172:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1173:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 275              		.loc 1 1173 0
 276 0000 0121     		mov	r1, #1
 277 0002 054A     		ldr	r2, .L24
1174:Generated_Source\PSoC4/CyLib.c **** 
1175:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1176:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1177:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1178:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_BLESS_MT_CFG_REG &= ~(CY_SYS_BLESS_MT_CFG_DPSLP_ECO_ON  <<  CYFLD_BLE_BLESS_DPSL
1179:Generated_Source\PSoC4/CyLib.c ****         #else
1180:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1181:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1182:Generated_Source\PSoC4/CyLib.c ****     }
 278              		.loc 1 1182 0
 279              		@ sp needed
1173:Generated_Source\PSoC4/CyLib.c **** 
 280              		.loc 1 1173 0
 281 0004 1368     		ldr	r3, [r2]
 282 0006 8B43     		bic	r3, r1
 283 0008 1360     		str	r3, [r2]
1176:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 284              		.loc 1 1176 0
 285 000a 044A     		ldr	r2, .L24+4
 286 000c 044B     		ldr	r3, .L24+8
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 27


 287 000e 1168     		ldr	r1, [r2]
 288 0010 0B40     		and	r3, r1
 289 0012 1360     		str	r3, [r2]
 290              		.loc 1 1182 0
 291 0014 7047     		bx	lr
 292              	.L25:
 293 0016 C046     		.align	2
 294              	.L24:
 295 0018 60F02E40 		.word	1076818016
 296 001c 10002E40 		.word	1076756496
 297 0020 FF7FFFFF 		.word	-32769
 298              		.cfi_endproc
 299              	.LFE10:
 300              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 301              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 302              		.align	1
 303              		.global	CySysClkEcoReadStatus
 304              		.code	16
 305              		.thumb_func
 306              		.type	CySysClkEcoReadStatus, %function
 307              	CySysClkEcoReadStatus:
 308              	.LFB11:
1183:Generated_Source\PSoC4/CyLib.c **** 
1184:Generated_Source\PSoC4/CyLib.c **** 
1185:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1186:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1187:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1188:Generated_Source\PSoC4/CyLib.c ****     *
1189:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1190:Generated_Source\PSoC4/CyLib.c ****     *
1191:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1192:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1193:Generated_Source\PSoC4/CyLib.c ****     *
1194:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1195:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1196:Generated_Source\PSoC4/CyLib.c ****     *
1197:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1198:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1199:Generated_Source\PSoC4/CyLib.c ****     *
1200:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1201:Generated_Source\PSoC4/CyLib.c ****     *
1202:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1203:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1204:Generated_Source\PSoC4/CyLib.c ****     {
 309              		.loc 1 1204 0
 310              		.cfi_startproc
1205:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1206:Generated_Source\PSoC4/CyLib.c **** 
1207:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1208:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 311              		.loc 1 1208 0
 312 0000 024B     		ldr	r3, .L27
1209:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
1210:Generated_Source\PSoC4/CyLib.c ****             returnValue = (CY_SYS_BLESS_MT_STATUS_REG & CY_SYS_BLESS_MT_STATUS_CURR_STATE_MASK) >> 
1211:Generated_Source\PSoC4/CyLib.c **** 
1212:Generated_Source\PSoC4/CyLib.c ****             returnValue =  ((CY_SYS_BLESS_MT_STATUS_BLERD_IDLE == returnValue) || 
1213:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_SWITCH_EN  == returnValue) ||
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 28


1214:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ACTIVE  ==  returnValue) ||
1215:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_BLESS_MT_STATUS_ISOLATE == returnValue));
1216:Generated_Source\PSoC4/CyLib.c ****         #else
1217:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1218:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1219:Generated_Source\PSoC4/CyLib.c **** 
1220:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1221:Generated_Source\PSoC4/CyLib.c ****     }
 313              		.loc 1 1221 0
 314              		@ sp needed
1208:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 315              		.loc 1 1208 0
 316 0002 1868     		ldr	r0, [r3]
 317              	.LVL15:
 318 0004 0123     		mov	r3, #1
 319 0006 1840     		and	r0, r3
 320              	.LVL16:
 321              		.loc 1 1221 0
 322 0008 7047     		bx	lr
 323              	.L28:
 324 000a C046     		.align	2
 325              	.L27:
 326 000c 0C002E40 		.word	1076756492
 327              		.cfi_endproc
 328              	.LFE11:
 329              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 330              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 331              		.align	1
 332              		.global	CySysClkWriteEcoDiv
 333              		.code	16
 334              		.thumb_func
 335              		.type	CySysClkWriteEcoDiv, %function
 336              	CySysClkWriteEcoDiv:
 337              	.LFB12:
1222:Generated_Source\PSoC4/CyLib.c **** 
1223:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS || CY_IP_ECO_BLESSV3)
1224:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1225:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1226:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1227:Generated_Source\PSoC4/CyLib.c ****         *
1228:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1229:Generated_Source\PSoC4/CyLib.c ****         *
1230:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1231:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1232:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1233:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1234:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1235:Generated_Source\PSoC4/CyLib.c ****         *
1236:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1237:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1238:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1239:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1240:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1241:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1242:Generated_Source\PSoC4/CyLib.c ****         *
1243:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1244:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 29


1245:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1246:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1247:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1248:Generated_Source\PSoC4/CyLib.c ****         *
1249:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1250:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1251:Generated_Source\PSoC4/CyLib.c ****         {
 338              		.loc 1 1251 0
 339              		.cfi_startproc
 340              	.LVL17:
1252:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 341              		.loc 1 1254 0
 342 0000 0722     		mov	r2, #7
1251:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 343              		.loc 1 1251 0
 344 0002 38B5     		push	{r3, r4, r5, lr}
 345              		.cfi_def_cfa_offset 16
 346              		.cfi_offset 3, -16
 347              		.cfi_offset 4, -12
 348              		.cfi_offset 5, -8
 349              		.cfi_offset 14, -4
 350              		.loc 1 1254 0
 351 0004 0A4B     		ldr	r3, .L32
 352 0006 1B68     		ldr	r3, [r3]
 353 0008 1A40     		and	r2, r3
 354 000a 022A     		cmp	r2, #2
 355 000c 0DD0     		beq	.L30
 356 000e 041C     		mov	r4, r0
1255:Generated_Source\PSoC4/CyLib.c ****             {
1256:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1257:Generated_Source\PSoC4/CyLib.c **** 
1258:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 357              		.loc 1 1258 0
 358 0010 0325     		mov	r5, #3
1256:Generated_Source\PSoC4/CyLib.c **** 
 359              		.loc 1 1256 0
 360 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 361              	.LVL18:
 362              		.loc 1 1258 0
 363 0016 231C     		mov	r3, r4
1259:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 364              		.loc 1 1259 0
 365 0018 0649     		ldr	r1, .L32+4
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 366              		.loc 1 1258 0
 367 001a 2B40     		and	r3, r5
 368              		.loc 1 1259 0
 369 001c 0A68     		ldr	r2, [r1]
 370 001e AA43     		bic	r2, r5
1258:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 371              		.loc 1 1258 0
 372 0020 1343     		orr	r3, r2
 373 0022 0B60     		str	r3, [r1]
1260:Generated_Source\PSoC4/CyLib.c **** 
1261:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 30


 374              		.loc 1 1261 0
 375 0024 FFF7FEFF 		bl	CyExitCriticalSection
 376              	.LVL19:
 377 0028 00E0     		b	.L29
 378              	.LVL20:
 379              	.L30:
 380              	.LBB28:
 381              	.LBB29:
1262:Generated_Source\PSoC4/CyLib.c ****             }
1263:Generated_Source\PSoC4/CyLib.c ****             else
1264:Generated_Source\PSoC4/CyLib.c ****             {
1265:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1266:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1267:Generated_Source\PSoC4/CyLib.c ****             }
1268:Generated_Source\PSoC4/CyLib.c ****         }
1269:Generated_Source\PSoC4/CyLib.c **** 
1270:Generated_Source\PSoC4/CyLib.c ****     #else
1271:Generated_Source\PSoC4/CyLib.c **** 
1272:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1273:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1274:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1275:Generated_Source\PSoC4/CyLib.c ****         *
1276:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1277:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1278:Generated_Source\PSoC4/CyLib.c ****         *
1279:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1280:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1281:Generated_Source\PSoC4/CyLib.c ****         *
1282:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1283:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1284:Generated_Source\PSoC4/CyLib.c ****         *
1285:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1286:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1287:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1288:Generated_Source\PSoC4/CyLib.c ****         *
1289:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1290:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1291:Generated_Source\PSoC4/CyLib.c ****         *
1292:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1293:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1294:Generated_Source\PSoC4/CyLib.c ****         *
1295:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1296:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1297:Generated_Source\PSoC4/CyLib.c ****         *
1298:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1299:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1300:Generated_Source\PSoC4/CyLib.c ****         *
1301:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1302:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1303:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1304:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1305:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1306:Generated_Source\PSoC4/CyLib.c ****         *
1307:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1308:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1309:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1310:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 31


1311:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1312:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1313:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1314:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1315:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1316:Generated_Source\PSoC4/CyLib.c ****         *
1317:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1318:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1319:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1320:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1321:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1322:Generated_Source\PSoC4/CyLib.c ****         *
1323:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1324:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1325:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1326:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1327:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1328:Generated_Source\PSoC4/CyLib.c ****         *
1329:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1330:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1331:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1332:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1333:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1334:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1335:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1336:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1337:Generated_Source\PSoC4/CyLib.c ****         *
1338:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1339:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1340:Generated_Source\PSoC4/CyLib.c ****         {
1341:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1342:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1343:Generated_Source\PSoC4/CyLib.c **** 
1344:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1345:Generated_Source\PSoC4/CyLib.c **** 
1346:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1347:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1348:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1349:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1350:Generated_Source\PSoC4/CyLib.c **** 
1351:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1352:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1353:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1354:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1355:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1356:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1357:Generated_Source\PSoC4/CyLib.c **** 
1358:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1359:Generated_Source\PSoC4/CyLib.c **** 
1360:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1361:Generated_Source\PSoC4/CyLib.c ****         }
1362:Generated_Source\PSoC4/CyLib.c **** 
1363:Generated_Source\PSoC4/CyLib.c **** 
1364:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1365:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1366:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1367:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 32


1368:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1369:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1370:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1371:Generated_Source\PSoC4/CyLib.c ****         *
1372:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1373:Generated_Source\PSoC4/CyLib.c ****         *
1374:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1375:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1376:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1377:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1378:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1379:Generated_Source\PSoC4/CyLib.c ****         *
1380:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1381:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1382:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1383:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1384:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1385:Generated_Source\PSoC4/CyLib.c ****         *
1386:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1387:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1388:Generated_Source\PSoC4/CyLib.c ****         *
1389:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1390:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1391:Generated_Source\PSoC4/CyLib.c ****         {
1392:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1393:Generated_Source\PSoC4/CyLib.c **** 
1394:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1395:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
1396:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1397:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1398:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1399:Generated_Source\PSoC4/CyLib.c **** 
1400:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c **** 
1403:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1404:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1405:Generated_Source\PSoC4/CyLib.c ****             {
1406:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1407:Generated_Source\PSoC4/CyLib.c ****             }
1408:Generated_Source\PSoC4/CyLib.c ****             else
1409:Generated_Source\PSoC4/CyLib.c ****             {
1410:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1411:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1412:Generated_Source\PSoC4/CyLib.c **** 
1413:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1414:Generated_Source\PSoC4/CyLib.c ****                 {
1415:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1416:Generated_Source\PSoC4/CyLib.c ****                 }
1417:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1418:Generated_Source\PSoC4/CyLib.c ****                 {
1419:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1420:Generated_Source\PSoC4/CyLib.c ****                 }
1421:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1422:Generated_Source\PSoC4/CyLib.c ****                 {
1423:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1424:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 33


1425:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1426:Generated_Source\PSoC4/CyLib.c ****                 {
1427:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1428:Generated_Source\PSoC4/CyLib.c ****                 }
1429:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1430:Generated_Source\PSoC4/CyLib.c ****                 {
1431:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1434:Generated_Source\PSoC4/CyLib.c ****                 {
1435:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1436:Generated_Source\PSoC4/CyLib.c ****                 }
1437:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1438:Generated_Source\PSoC4/CyLib.c ****                 {
1439:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1440:Generated_Source\PSoC4/CyLib.c ****                 }
1441:Generated_Source\PSoC4/CyLib.c ****                 else
1442:Generated_Source\PSoC4/CyLib.c ****                 {
1443:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1444:Generated_Source\PSoC4/CyLib.c ****                 }
1445:Generated_Source\PSoC4/CyLib.c **** 
1446:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1447:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1448:Generated_Source\PSoC4/CyLib.c **** 
1449:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1450:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1451:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1452:Generated_Source\PSoC4/CyLib.c ****                 {
1453:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1454:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1455:Generated_Source\PSoC4/CyLib.c ****                 }
1456:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1457:Generated_Source\PSoC4/CyLib.c ****                 {
1458:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1459:Generated_Source\PSoC4/CyLib.c ****                 }
1460:Generated_Source\PSoC4/CyLib.c ****                 else
1461:Generated_Source\PSoC4/CyLib.c ****                 {
1462:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1463:Generated_Source\PSoC4/CyLib.c ****                 }
1464:Generated_Source\PSoC4/CyLib.c **** 
1465:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1466:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1467:Generated_Source\PSoC4/CyLib.c ****                 {
1468:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1469:Generated_Source\PSoC4/CyLib.c ****                 }
1470:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1471:Generated_Source\PSoC4/CyLib.c ****                 {
1472:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1473:Generated_Source\PSoC4/CyLib.c ****                 }
1474:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1475:Generated_Source\PSoC4/CyLib.c ****                 {
1476:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1477:Generated_Source\PSoC4/CyLib.c ****                 }
1478:Generated_Source\PSoC4/CyLib.c ****                 else
1479:Generated_Source\PSoC4/CyLib.c ****                 {
1480:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1481:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 34


1482:Generated_Source\PSoC4/CyLib.c **** 
1483:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1484:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1485:Generated_Source\PSoC4/CyLib.c **** 
1486:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1487:Generated_Source\PSoC4/CyLib.c **** 
1488:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1489:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1490:Generated_Source\PSoC4/CyLib.c ****                 {
1491:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1492:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1493:Generated_Source\PSoC4/CyLib.c ****                 }
1494:Generated_Source\PSoC4/CyLib.c ****                 else
1495:Generated_Source\PSoC4/CyLib.c ****                 {
1496:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1497:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1498:Generated_Source\PSoC4/CyLib.c ****                     */
1499:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1500:Generated_Source\PSoC4/CyLib.c ****                 }
1501:Generated_Source\PSoC4/CyLib.c ****             }
1502:Generated_Source\PSoC4/CyLib.c **** 
1503:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1504:Generated_Source\PSoC4/CyLib.c ****         }
1505:Generated_Source\PSoC4/CyLib.c **** 
1506:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1509:Generated_Source\PSoC4/CyLib.c **** 
1510:Generated_Source\PSoC4/CyLib.c **** 
1511:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1512:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1513:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1514:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1515:Generated_Source\PSoC4/CyLib.c ****     *
1516:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1517:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1518:Generated_Source\PSoC4/CyLib.c ****     *
1519:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1520:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1521:Generated_Source\PSoC4/CyLib.c ****     *
1522:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1523:Generated_Source\PSoC4/CyLib.c ****     *
1524:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1525:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1526:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1527:Generated_Source\PSoC4/CyLib.c ****     *
1528:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1529:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1530:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1531:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1532:Generated_Source\PSoC4/CyLib.c ****     *
1533:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1534:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1535:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1536:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1537:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1538:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 35


1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1544:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1545:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1546:Generated_Source\PSoC4/CyLib.c **** 
1547:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1548:Generated_Source\PSoC4/CyLib.c ****         {
1549:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1550:Generated_Source\PSoC4/CyLib.c **** 
1551:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1552:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1553:Generated_Source\PSoC4/CyLib.c **** 
1554:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1555:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1556:Generated_Source\PSoC4/CyLib.c **** 
1557:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1558:Generated_Source\PSoC4/CyLib.c **** 
1559:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1560:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1561:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1562:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1563:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1564:Generated_Source\PSoC4/CyLib.c **** 
1565:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1566:Generated_Source\PSoC4/CyLib.c ****             {
1567:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1570:Generated_Source\PSoC4/CyLib.c ****                 {
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1573:Generated_Source\PSoC4/CyLib.c ****                     {
1574:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1575:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1576:Generated_Source\PSoC4/CyLib.c ****                         break;
1577:Generated_Source\PSoC4/CyLib.c ****                     }
1578:Generated_Source\PSoC4/CyLib.c **** 
1579:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1580:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1581:Generated_Source\PSoC4/CyLib.c ****                 }
1582:Generated_Source\PSoC4/CyLib.c ****             }
1583:Generated_Source\PSoC4/CyLib.c ****         }
1584:Generated_Source\PSoC4/CyLib.c ****         else
1585:Generated_Source\PSoC4/CyLib.c ****         {
1586:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1587:Generated_Source\PSoC4/CyLib.c ****         }
1588:Generated_Source\PSoC4/CyLib.c **** 
1589:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1590:Generated_Source\PSoC4/CyLib.c ****     }
1591:Generated_Source\PSoC4/CyLib.c **** 
1592:Generated_Source\PSoC4/CyLib.c **** 
1593:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1594:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1595:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 36


1596:Generated_Source\PSoC4/CyLib.c ****     *
1597:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1598:Generated_Source\PSoC4/CyLib.c ****     *
1599:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1600:Generated_Source\PSoC4/CyLib.c ****     *
1601:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1602:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1603:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1604:Generated_Source\PSoC4/CyLib.c ****     *
1605:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1606:Generated_Source\PSoC4/CyLib.c ****     *
1607:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1608:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1609:Generated_Source\PSoC4/CyLib.c ****     {
1610:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1612:Generated_Source\PSoC4/CyLib.c **** 
1613:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1614:Generated_Source\PSoC4/CyLib.c **** 
1615:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1616:Generated_Source\PSoC4/CyLib.c **** 
1617:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1618:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1619:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1620:Generated_Source\PSoC4/CyLib.c ****         {
1621:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1622:Generated_Source\PSoC4/CyLib.c ****         }
1623:Generated_Source\PSoC4/CyLib.c **** 
1624:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1627:Generated_Source\PSoC4/CyLib.c ****     }
1628:Generated_Source\PSoC4/CyLib.c **** 
1629:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1630:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1631:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1632:Generated_Source\PSoC4/CyLib.c ****     *
1633:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1634:Generated_Source\PSoC4/CyLib.c ****     *
1635:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1636:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1639:Generated_Source\PSoC4/CyLib.c ****     *
1640:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1641:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1642:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1643:Generated_Source\PSoC4/CyLib.c ****     *
1644:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1645:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1646:Generated_Source\PSoC4/CyLib.c ****     {
1647:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1650:Generated_Source\PSoC4/CyLib.c ****         {
1651:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1652:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 37


1653:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1654:Generated_Source\PSoC4/CyLib.c ****         }
1655:Generated_Source\PSoC4/CyLib.c ****     }
1656:Generated_Source\PSoC4/CyLib.c **** 
1657:Generated_Source\PSoC4/CyLib.c **** 
1658:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1659:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1660:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1661:Generated_Source\PSoC4/CyLib.c ****     *
1662:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1663:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1664:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1665:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1668:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1669:Generated_Source\PSoC4/CyLib.c ****     *
1670:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1671:Generated_Source\PSoC4/CyLib.c ****     *
1672:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1673:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1674:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1677:Generated_Source\PSoC4/CyLib.c ****     * divider.
1678:Generated_Source\PSoC4/CyLib.c ****     *
1679:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1680:Generated_Source\PSoC4/CyLib.c ****     *
1681:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1682:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1683:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1684:Generated_Source\PSoC4/CyLib.c ****     *
1685:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1686:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1687:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1688:Generated_Source\PSoC4/CyLib.c ****     *
1689:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1690:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1691:Generated_Source\PSoC4/CyLib.c ****     {
1692:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1693:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1694:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1695:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1698:Generated_Source\PSoC4/CyLib.c **** 
1699:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1700:Generated_Source\PSoC4/CyLib.c **** 
1701:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1702:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1703:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1704:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1705:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1706:Generated_Source\PSoC4/CyLib.c ****         {
1707:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1708:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1709:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 38


1710:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1711:Generated_Source\PSoC4/CyLib.c **** 
1712:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1713:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1714:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1715:Generated_Source\PSoC4/CyLib.c **** 
1716:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1717:Generated_Source\PSoC4/CyLib.c **** 
1718:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1719:Generated_Source\PSoC4/CyLib.c ****         }
1720:Generated_Source\PSoC4/CyLib.c **** 
1721:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1722:Generated_Source\PSoC4/CyLib.c **** 
1723:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1724:Generated_Source\PSoC4/CyLib.c ****     }
1725:Generated_Source\PSoC4/CyLib.c **** 
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1728:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1729:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1730:Generated_Source\PSoC4/CyLib.c ****     *
1731:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1732:Generated_Source\PSoC4/CyLib.c ****     *
1733:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1734:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1735:Generated_Source\PSoC4/CyLib.c ****     *
1736:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1737:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
1738:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1739:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1740:Generated_Source\PSoC4/CyLib.c ****     *
1741:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1742:Generated_Source\PSoC4/CyLib.c ****     *
1743:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1744:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1745:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1746:Generated_Source\PSoC4/CyLib.c ****     *
1747:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1748:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1749:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1750:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1753:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1754:Generated_Source\PSoC4/CyLib.c ****     *
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1756:Generated_Source\PSoC4/CyLib.c ****     *
1757:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1758:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1759:Generated_Source\PSoC4/CyLib.c ****     {
1760:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1761:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1762:Generated_Source\PSoC4/CyLib.c **** 
1763:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1764:Generated_Source\PSoC4/CyLib.c **** 
1765:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1766:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 39


1767:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1768:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1769:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1770:Generated_Source\PSoC4/CyLib.c ****         }
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1773:Generated_Source\PSoC4/CyLib.c ****     }
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c **** 
1776:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1777:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1778:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1779:Generated_Source\PSoC4/CyLib.c ****     *
1780:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1781:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1782:Generated_Source\PSoC4/CyLib.c ****     *
1783:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1784:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1785:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1786:Generated_Source\PSoC4/CyLib.c ****     *
1787:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1788:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1789:Generated_Source\PSoC4/CyLib.c ****     *
1790:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1791:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1792:Generated_Source\PSoC4/CyLib.c ****     {
1793:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1794:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1795:Generated_Source\PSoC4/CyLib.c **** 
1796:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1799:Generated_Source\PSoC4/CyLib.c **** 
1800:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1801:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1802:Generated_Source\PSoC4/CyLib.c **** 
1803:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1804:Generated_Source\PSoC4/CyLib.c **** 
1805:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1806:Generated_Source\PSoC4/CyLib.c ****     }
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c **** 
1809:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1810:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1811:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1812:Generated_Source\PSoC4/CyLib.c ****     *
1813:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1814:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1815:Generated_Source\PSoC4/CyLib.c ****     *
1816:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1817:Generated_Source\PSoC4/CyLib.c ****     *
1818:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1819:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1820:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1821:Generated_Source\PSoC4/CyLib.c ****     *
1822:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1823:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 40


1824:Generated_Source\PSoC4/CyLib.c ****     *
1825:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1826:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1827:Generated_Source\PSoC4/CyLib.c ****     {
1828:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1829:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1830:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1831:Generated_Source\PSoC4/CyLib.c **** 
1832:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1833:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1834:Generated_Source\PSoC4/CyLib.c **** 
1835:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1836:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1837:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1838:Generated_Source\PSoC4/CyLib.c ****         {
1839:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1840:Generated_Source\PSoC4/CyLib.c ****         }
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1843:Generated_Source\PSoC4/CyLib.c ****     }
1844:Generated_Source\PSoC4/CyLib.c **** 
1845:Generated_Source\PSoC4/CyLib.c **** 
1846:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1847:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1848:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1849:Generated_Source\PSoC4/CyLib.c ****     *
1850:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1851:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
1852:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1853:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1856:Generated_Source\PSoC4/CyLib.c ****     *
1857:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1858:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1859:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1860:Generated_Source\PSoC4/CyLib.c ****     *
1861:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1862:Generated_Source\PSoC4/CyLib.c ****     *
1863:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1864:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1865:Generated_Source\PSoC4/CyLib.c ****     {
1866:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1867:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1868:Generated_Source\PSoC4/CyLib.c **** 
1869:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1870:Generated_Source\PSoC4/CyLib.c **** 
1871:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1872:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1873:Generated_Source\PSoC4/CyLib.c **** 
1874:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1875:Generated_Source\PSoC4/CyLib.c **** 
1876:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1877:Generated_Source\PSoC4/CyLib.c ****     }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c **** 
1880:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 41


1881:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1882:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1883:Generated_Source\PSoC4/CyLib.c ****     *
1884:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1885:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1886:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1887:Generated_Source\PSoC4/CyLib.c ****     *
1888:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1889:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1890:Generated_Source\PSoC4/CyLib.c ****     *
1891:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1892:Generated_Source\PSoC4/CyLib.c ****     *
1893:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1894:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1895:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1896:Generated_Source\PSoC4/CyLib.c ****     *
1897:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1898:Generated_Source\PSoC4/CyLib.c ****     *
1899:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1900:Generated_Source\PSoC4/CyLib.c ****     *
1901:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1902:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1903:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1904:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1905:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1906:Generated_Source\PSoC4/CyLib.c ****     *
1907:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1908:Generated_Source\PSoC4/CyLib.c ****     *
1909:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1910:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1911:Generated_Source\PSoC4/CyLib.c ****     *
1912:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1913:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1914:Generated_Source\PSoC4/CyLib.c ****     *
1915:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1916:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1917:Generated_Source\PSoC4/CyLib.c ****     {
1918:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1919:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1922:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1923:Generated_Source\PSoC4/CyLib.c **** 
1924:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1925:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1926:Generated_Source\PSoC4/CyLib.c **** 
1927:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1928:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1929:Generated_Source\PSoC4/CyLib.c **** 
1930:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1931:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c **** 
1934:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1935:Generated_Source\PSoC4/CyLib.c **** 
1936:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1937:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 42


1938:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1939:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1940:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1941:Generated_Source\PSoC4/CyLib.c ****         {
1942:Generated_Source\PSoC4/CyLib.c **** 
1943:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1944:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1945:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1946:Generated_Source\PSoC4/CyLib.c **** 
1947:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1948:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1949:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1950:Generated_Source\PSoC4/CyLib.c **** 
1951:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1952:Generated_Source\PSoC4/CyLib.c ****             {
1953:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1954:Generated_Source\PSoC4/CyLib.c ****                 {
1955:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1956:Generated_Source\PSoC4/CyLib.c **** 
1957:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1958:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1959:Generated_Source\PSoC4/CyLib.c **** 
1960:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1961:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1962:Generated_Source\PSoC4/CyLib.c **** 
1963:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1964:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1965:Generated_Source\PSoC4/CyLib.c **** 
1966:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1967:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1968:Generated_Source\PSoC4/CyLib.c ****                     {
1969:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1970:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1971:Generated_Source\PSoC4/CyLib.c ****                         break;
1972:Generated_Source\PSoC4/CyLib.c ****                     }
1973:Generated_Source\PSoC4/CyLib.c ****                 }
1974:Generated_Source\PSoC4/CyLib.c **** 
1975:Generated_Source\PSoC4/CyLib.c **** 
1976:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1977:Generated_Source\PSoC4/CyLib.c ****                 {
1978:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1979:Generated_Source\PSoC4/CyLib.c ****                     {
1980:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1981:Generated_Source\PSoC4/CyLib.c ****                     }
1982:Generated_Source\PSoC4/CyLib.c ****                 }
1983:Generated_Source\PSoC4/CyLib.c ****             }
1984:Generated_Source\PSoC4/CyLib.c **** 
1985:Generated_Source\PSoC4/CyLib.c ****         }
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1988:Generated_Source\PSoC4/CyLib.c ****     }
1989:Generated_Source\PSoC4/CyLib.c **** 
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1992:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1993:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1994:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 43


1995:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1996:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1999:Generated_Source\PSoC4/CyLib.c ****     *
2000:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2001:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
2002:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
2003:Generated_Source\PSoC4/CyLib.c ****     *
2004:Generated_Source\PSoC4/CyLib.c ****     * \param source:
2005:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
2006:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
2007:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
2008:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
2009:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
2010:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
2011:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
2012:Generated_Source\PSoC4/CyLib.c ****     *
2013:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2014:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
2015:Generated_Source\PSoC4/CyLib.c ****     {
2016:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
2017:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
2018:Generated_Source\PSoC4/CyLib.c **** 
2019:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2020:Generated_Source\PSoC4/CyLib.c **** 
2021:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
2022:Generated_Source\PSoC4/CyLib.c ****         {
2023:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
2024:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
2025:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
2026:Generated_Source\PSoC4/CyLib.c ****         }
2027:Generated_Source\PSoC4/CyLib.c **** 
2028:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2029:Generated_Source\PSoC4/CyLib.c ****     }
2030:Generated_Source\PSoC4/CyLib.c **** 
2031:Generated_Source\PSoC4/CyLib.c **** 
2032:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2033:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
2034:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2035:Generated_Source\PSoC4/CyLib.c ****     *
2036:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
2037:Generated_Source\PSoC4/CyLib.c ****     *
2038:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
2039:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
2040:Generated_Source\PSoC4/CyLib.c ****     *
2041:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
2042:Generated_Source\PSoC4/CyLib.c ****     *
2043:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
2044:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
2045:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
2046:Generated_Source\PSoC4/CyLib.c ****     *
2047:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
2048:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
2049:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
2050:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
2051:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 44


2052:Generated_Source\PSoC4/CyLib.c ****     *
2053:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
2054:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
2055:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
2056:Generated_Source\PSoC4/CyLib.c ****     *
2057:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2058:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
2059:Generated_Source\PSoC4/CyLib.c ****     {
2060:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
2061:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
2062:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
2063:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
2064:Generated_Source\PSoC4/CyLib.c **** 
2065:Generated_Source\PSoC4/CyLib.c **** 
2066:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
2069:Generated_Source\PSoC4/CyLib.c **** 
2070:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
2071:Generated_Source\PSoC4/CyLib.c ****         {
2072:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
2073:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
2074:Generated_Source\PSoC4/CyLib.c **** 
2075:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
2076:Generated_Source\PSoC4/CyLib.c **** 
2077:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
2078:Generated_Source\PSoC4/CyLib.c ****         }
2079:Generated_Source\PSoC4/CyLib.c **** 
2080:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
2081:Generated_Source\PSoC4/CyLib.c **** 
2082:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
2083:Generated_Source\PSoC4/CyLib.c ****     }
2084:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c **** 
2087:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2090:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
2091:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2092:Generated_Source\PSoC4/CyLib.c ****     *
2093:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
2094:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
2095:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
2096:Generated_Source\PSoC4/CyLib.c ****     *
2097:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
2098:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
2099:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
2100:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
2101:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
2102:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
2103:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
2104:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
2105:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
2106:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
2107:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
2108:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 45


2109:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
2110:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
2111:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
2112:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
2113:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
2114:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
2115:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
2116:Generated_Source\PSoC4/CyLib.c ****     *
2117:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2118:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
2119:Generated_Source\PSoC4/CyLib.c ****     {
2120:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
2121:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
2122:Generated_Source\PSoC4/CyLib.c **** 
2123:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
2124:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
2125:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
2126:Generated_Source\PSoC4/CyLib.c **** 
2127:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
2128:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2129:Generated_Source\PSoC4/CyLib.c **** 
2130:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
2131:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
2132:Generated_Source\PSoC4/CyLib.c **** 
2133:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
2134:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
2135:Generated_Source\PSoC4/CyLib.c **** 
2136:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
2137:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
2138:Generated_Source\PSoC4/CyLib.c ****     }
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c **** 
2141:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2142:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
2143:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2144:Generated_Source\PSoC4/CyLib.c ****     *
2145:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
2146:Generated_Source\PSoC4/CyLib.c ****     *
2147:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2148:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2149:Generated_Source\PSoC4/CyLib.c ****     {
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2151:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2152:Generated_Source\PSoC4/CyLib.c ****     }
2153:Generated_Source\PSoC4/CyLib.c **** 
2154:Generated_Source\PSoC4/CyLib.c **** 
2155:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2156:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2157:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2158:Generated_Source\PSoC4/CyLib.c ****     *
2159:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2160:Generated_Source\PSoC4/CyLib.c ****     *
2161:Generated_Source\PSoC4/CyLib.c ****     * \return
2162:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2163:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2164:Generated_Source\PSoC4/CyLib.c ****     *
2165:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 46


2166:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2167:Generated_Source\PSoC4/CyLib.c ****     {
2168:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2169:Generated_Source\PSoC4/CyLib.c ****     }
2170:Generated_Source\PSoC4/CyLib.c **** 
2171:Generated_Source\PSoC4/CyLib.c **** 
2172:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2173:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2174:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2175:Generated_Source\PSoC4/CyLib.c ****     *
2176:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2177:Generated_Source\PSoC4/CyLib.c ****     *
2178:Generated_Source\PSoC4/CyLib.c ****     * \return
2179:Generated_Source\PSoC4/CyLib.c ****     *  None
2180:Generated_Source\PSoC4/CyLib.c ****     *
2181:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2182:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2183:Generated_Source\PSoC4/CyLib.c ****     {
2184:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2185:Generated_Source\PSoC4/CyLib.c ****     }
2186:Generated_Source\PSoC4/CyLib.c **** 
2187:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2188:Generated_Source\PSoC4/CyLib.c **** 
2189:Generated_Source\PSoC4/CyLib.c **** 
2190:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2191:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2192:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2193:Generated_Source\PSoC4/CyLib.c **** *
2194:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2195:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2196:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2197:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2198:Generated_Source\PSoC4/CyLib.c **** *
2199:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2200:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2201:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2202:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2203:Generated_Source\PSoC4/CyLib.c **** *
2204:Generated_Source\PSoC4/CyLib.c **** * \return
2205:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2208:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2209:Generated_Source\PSoC4/CyLib.c **** {
2210:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2211:Generated_Source\PSoC4/CyLib.c **** 
2212:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2213:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
2214:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2215:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2216:Generated_Source\PSoC4/CyLib.c **** 
2217:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2218:Generated_Source\PSoC4/CyLib.c **** }
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c **** 
2221:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2222:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 47


2223:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2224:Generated_Source\PSoC4/CyLib.c **** *
2225:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** * \return
2228:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2229:Generated_Source\PSoC4/CyLib.c **** *
2230:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2231:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2232:Generated_Source\PSoC4/CyLib.c **** {
2233:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2234:Generated_Source\PSoC4/CyLib.c **** 
2235:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2236:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2237:Generated_Source\PSoC4/CyLib.c **** 
2238:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2239:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
2240:Generated_Source\PSoC4/CyLib.c **** 
2241:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2242:Generated_Source\PSoC4/CyLib.c **** }
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c **** 
2245:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2246:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2247:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2248:Generated_Source\PSoC4/CyLib.c **** *
2249:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2250:Generated_Source\PSoC4/CyLib.c **** *
2251:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2252:Generated_Source\PSoC4/CyLib.c **** *
2253:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2254:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2255:Generated_Source\PSoC4/CyLib.c **** {
2256:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
2257:Generated_Source\PSoC4/CyLib.c **** }
2258:Generated_Source\PSoC4/CyLib.c **** 
2259:Generated_Source\PSoC4/CyLib.c **** 
2260:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2261:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2262:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2263:Generated_Source\PSoC4/CyLib.c **** *
2264:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2265:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2266:Generated_Source\PSoC4/CyLib.c **** *
2267:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2268:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2269:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2270:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2271:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2272:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2273:Generated_Source\PSoC4/CyLib.c **** *
2274:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2275:Generated_Source\PSoC4/CyLib.c **** *
2276:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2277:Generated_Source\PSoC4/CyLib.c **** *
2278:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2279:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 48


2280:Generated_Source\PSoC4/CyLib.c **** {
2281:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2282:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2283:Generated_Source\PSoC4/CyLib.c **** 
2284:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2285:Generated_Source\PSoC4/CyLib.c **** 
2286:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2287:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2288:Generated_Source\PSoC4/CyLib.c **** 
2289:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2290:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2291:Generated_Source\PSoC4/CyLib.c **** 
2292:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2293:Generated_Source\PSoC4/CyLib.c **** }
2294:Generated_Source\PSoC4/CyLib.c **** 
2295:Generated_Source\PSoC4/CyLib.c **** 
2296:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2297:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2298:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2301:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2302:Generated_Source\PSoC4/CyLib.c **** *
2303:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2304:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2305:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2306:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2307:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2308:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2309:Generated_Source\PSoC4/CyLib.c **** *
2310:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2311:Generated_Source\PSoC4/CyLib.c **** *
2312:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2313:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2314:Generated_Source\PSoC4/CyLib.c **** {
2315:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2316:Generated_Source\PSoC4/CyLib.c **** 
2317:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2318:Generated_Source\PSoC4/CyLib.c **** 
2319:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2320:Generated_Source\PSoC4/CyLib.c **** }
2321:Generated_Source\PSoC4/CyLib.c **** 
2322:Generated_Source\PSoC4/CyLib.c **** 
2323:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2324:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2325:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2326:Generated_Source\PSoC4/CyLib.c **** *
2327:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2328:Generated_Source\PSoC4/CyLib.c **** *
2329:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2330:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2331:Generated_Source\PSoC4/CyLib.c **** *
2332:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2333:Generated_Source\PSoC4/CyLib.c **** *
2334:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2335:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2336:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 49


2337:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2338:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2339:Generated_Source\PSoC4/CyLib.c **** 
2340:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2343:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2344:Generated_Source\PSoC4/CyLib.c **** 
2345:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2346:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2347:Generated_Source\PSoC4/CyLib.c **** 
2348:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2349:Generated_Source\PSoC4/CyLib.c **** }
2350:Generated_Source\PSoC4/CyLib.c **** 
2351:Generated_Source\PSoC4/CyLib.c **** 
2352:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2353:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2354:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2355:Generated_Source\PSoC4/CyLib.c **** *
2356:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2357:Generated_Source\PSoC4/CyLib.c **** *
2358:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2359:Generated_Source\PSoC4/CyLib.c **** *
2360:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2361:Generated_Source\PSoC4/CyLib.c **** *
2362:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2363:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2364:Generated_Source\PSoC4/CyLib.c **** {
2365:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2366:Generated_Source\PSoC4/CyLib.c **** 
2367:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2368:Generated_Source\PSoC4/CyLib.c **** 
2369:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2370:Generated_Source\PSoC4/CyLib.c **** }
2371:Generated_Source\PSoC4/CyLib.c **** 
2372:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2373:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2374:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2375:Generated_Source\PSoC4/CyLib.c **** *
2376:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2377:Generated_Source\PSoC4/CyLib.c **** *
2378:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2379:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2380:Generated_Source\PSoC4/CyLib.c **** *
2381:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2382:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2383:Generated_Source\PSoC4/CyLib.c **** {
2384:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2385:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2386:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2387:Generated_Source\PSoC4/CyLib.c **** 
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2389:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2390:Generated_Source\PSoC4/CyLib.c **** 
2391:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2392:Generated_Source\PSoC4/CyLib.c **** 
2393:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 50


2394:Generated_Source\PSoC4/CyLib.c **** 
2395:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2396:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2397:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2398:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2401:Generated_Source\PSoC4/CyLib.c **** }
2402:Generated_Source\PSoC4/CyLib.c **** 
2403:Generated_Source\PSoC4/CyLib.c **** 
2404:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2405:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2406:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2407:Generated_Source\PSoC4/CyLib.c **** *
2408:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2409:Generated_Source\PSoC4/CyLib.c **** *
2410:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2411:Generated_Source\PSoC4/CyLib.c **** *
2412:Generated_Source\PSoC4/CyLib.c **** * \return
2413:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2414:Generated_Source\PSoC4/CyLib.c **** *
2415:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2416:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2417:Generated_Source\PSoC4/CyLib.c **** {
2418:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2419:Generated_Source\PSoC4/CyLib.c **** 
2420:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2421:Generated_Source\PSoC4/CyLib.c **** 
2422:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2425:Generated_Source\PSoC4/CyLib.c **** }
2426:Generated_Source\PSoC4/CyLib.c **** 
2427:Generated_Source\PSoC4/CyLib.c **** 
2428:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2429:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2430:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2433:Generated_Source\PSoC4/CyLib.c **** *
2434:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2435:Generated_Source\PSoC4/CyLib.c **** *
2436:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2437:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2438:Generated_Source\PSoC4/CyLib.c **** {
2439:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2440:Generated_Source\PSoC4/CyLib.c **** }
2441:Generated_Source\PSoC4/CyLib.c **** 
2442:Generated_Source\PSoC4/CyLib.c **** 
2443:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2444:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2445:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2446:Generated_Source\PSoC4/CyLib.c **** *
2447:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2448:Generated_Source\PSoC4/CyLib.c **** *
2449:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2450:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 51


2451:Generated_Source\PSoC4/CyLib.c **** * \return
2452:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2453:Generated_Source\PSoC4/CyLib.c **** *
2454:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2455:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2456:Generated_Source\PSoC4/CyLib.c **** {
2457:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2458:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2459:Generated_Source\PSoC4/CyLib.c **** }
2460:Generated_Source\PSoC4/CyLib.c **** 
2461:Generated_Source\PSoC4/CyLib.c **** 
2462:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2463:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2464:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2465:Generated_Source\PSoC4/CyLib.c **** *
2466:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2469:Generated_Source\PSoC4/CyLib.c **** *
2470:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2471:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2472:Generated_Source\PSoC4/CyLib.c **** {
2473:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2474:Generated_Source\PSoC4/CyLib.c **** }
2475:Generated_Source\PSoC4/CyLib.c **** 
2476:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2477:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2478:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2479:Generated_Source\PSoC4/CyLib.c **** *
2480:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2481:Generated_Source\PSoC4/CyLib.c **** *
2482:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2483:Generated_Source\PSoC4/CyLib.c **** *
2484:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2485:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2486:Generated_Source\PSoC4/CyLib.c **** {
2487:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2496:Generated_Source\PSoC4/CyLib.c **** *
2497:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2498:Generated_Source\PSoC4/CyLib.c **** *
2499:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2500:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2501:Generated_Source\PSoC4/CyLib.c **** {
2502:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2503:Generated_Source\PSoC4/CyLib.c **** }
2504:Generated_Source\PSoC4/CyLib.c **** 
2505:Generated_Source\PSoC4/CyLib.c **** 
2506:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2507:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 52


2508:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2509:Generated_Source\PSoC4/CyLib.c **** *
2510:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2511:Generated_Source\PSoC4/CyLib.c **** *
2512:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2513:Generated_Source\PSoC4/CyLib.c **** *
2514:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2515:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2516:Generated_Source\PSoC4/CyLib.c **** {
2517:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2518:Generated_Source\PSoC4/CyLib.c ****     {
2519:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2520:Generated_Source\PSoC4/CyLib.c ****     }
2521:Generated_Source\PSoC4/CyLib.c **** 
2522:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2523:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2524:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2525:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 382              		.loc 1 2525 0
 383              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 384 002a 01BE     		    bkpt    1
 385              	@ 0 "" 2
 386              	.LVL21:
 387              		.code	16
 388              	.L29:
 389              	.LBE29:
 390              	.LBE28:
1268:Generated_Source\PSoC4/CyLib.c **** 
 391              		.loc 1 1268 0
 392              		@ sp needed
 393 002c 38BD     		pop	{r3, r4, r5, pc}
 394              	.L33:
 395 002e C046     		.align	2
 396              	.L32:
 397 0030 00010B40 		.word	1074462976
 398 0034 64F02E40 		.word	1076818020
 399              		.cfi_endproc
 400              	.LFE12:
 401              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 402              		.section	.text.CySysLvdDisable,"ax",%progbits
 403              		.align	1
 404              		.global	CySysLvdDisable
 405              		.code	16
 406              		.thumb_func
 407              		.type	CySysLvdDisable, %function
 408              	CySysLvdDisable:
 409              	.LFB14:
2149:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 410              		.loc 1 2149 0
 411              		.cfi_startproc
2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 412              		.loc 1 2150 0
 413 0000 0221     		mov	r1, #2
 414 0002 054A     		ldr	r2, .L35
2152:Generated_Source\PSoC4/CyLib.c **** 
 415              		.loc 1 2152 0
 416              		@ sp needed
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 53


2150:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 417              		.loc 1 2150 0
 418 0004 1368     		ldr	r3, [r2]
 419 0006 8B43     		bic	r3, r1
 420 0008 1360     		str	r3, [r2]
2151:Generated_Source\PSoC4/CyLib.c ****     }
 421              		.loc 1 2151 0
 422 000a 044A     		ldr	r2, .L35+4
 423 000c 0139     		sub	r1, r1, #1
 424 000e 1368     		ldr	r3, [r2]
 425 0010 8B43     		bic	r3, r1
 426 0012 1360     		str	r3, [r2]
2152:Generated_Source\PSoC4/CyLib.c **** 
 427              		.loc 1 2152 0
 428 0014 7047     		bx	lr
 429              	.L36:
 430 0016 C046     		.align	2
 431              	.L35:
 432 0018 08000B40 		.word	1074462728
 433 001c 18000B40 		.word	1074462744
 434              		.cfi_endproc
 435              	.LFE14:
 436              		.size	CySysLvdDisable, .-CySysLvdDisable
 437              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 438              		.align	1
 439              		.global	CySysLvdGetInterruptSource
 440              		.code	16
 441              		.thumb_func
 442              		.type	CySysLvdGetInterruptSource, %function
 443              	CySysLvdGetInterruptSource:
 444              	.LFB15:
2167:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 445              		.loc 1 2167 0
 446              		.cfi_startproc
2168:Generated_Source\PSoC4/CyLib.c ****     }
 447              		.loc 1 2168 0
 448 0000 024B     		ldr	r3, .L38
2169:Generated_Source\PSoC4/CyLib.c **** 
 449              		.loc 1 2169 0
 450              		@ sp needed
2168:Generated_Source\PSoC4/CyLib.c ****     }
 451              		.loc 1 2168 0
 452 0002 1868     		ldr	r0, [r3]
 453 0004 0223     		mov	r3, #2
 454 0006 1840     		and	r0, r3
2169:Generated_Source\PSoC4/CyLib.c **** 
 455              		.loc 1 2169 0
 456 0008 7047     		bx	lr
 457              	.L39:
 458 000a C046     		.align	2
 459              	.L38:
 460 000c 04000B40 		.word	1074462724
 461              		.cfi_endproc
 462              	.LFE15:
 463              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 464              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 465              		.align	1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 54


 466              		.global	CySysLvdClearInterrupt
 467              		.code	16
 468              		.thumb_func
 469              		.type	CySysLvdClearInterrupt, %function
 470              	CySysLvdClearInterrupt:
 471              	.LFB16:
2183:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 472              		.loc 1 2183 0
 473              		.cfi_startproc
2184:Generated_Source\PSoC4/CyLib.c ****     }
 474              		.loc 1 2184 0
 475 0000 0222     		mov	r2, #2
 476 0002 014B     		ldr	r3, .L41
2185:Generated_Source\PSoC4/CyLib.c **** 
 477              		.loc 1 2185 0
 478              		@ sp needed
2184:Generated_Source\PSoC4/CyLib.c ****     }
 479              		.loc 1 2184 0
 480 0004 1A60     		str	r2, [r3]
2185:Generated_Source\PSoC4/CyLib.c **** 
 481              		.loc 1 2185 0
 482 0006 7047     		bx	lr
 483              	.L42:
 484              		.align	2
 485              	.L41:
 486 0008 04000B40 		.word	1074462724
 487              		.cfi_endproc
 488              	.LFE16:
 489              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 490              		.section	.text.CySysGetResetReason,"ax",%progbits
 491              		.align	1
 492              		.global	CySysGetResetReason
 493              		.code	16
 494              		.thumb_func
 495              		.type	CySysGetResetReason, %function
 496              	CySysGetResetReason:
 497              	.LFB17:
2209:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 498              		.loc 1 2209 0
 499              		.cfi_startproc
 500              	.LVL22:
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 501              		.loc 1 2212 0
 502 0000 1923     		mov	r3, #25
 503 0002 021C     		mov	r2, r0
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 504              		.loc 1 2213 0
 505 0004 0249     		ldr	r1, .L44
2212:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 506              		.loc 1 2212 0
 507 0006 1A40     		and	r2, r3
 508              	.LVL23:
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 509              		.loc 1 2213 0
 510 0008 0868     		ldr	r0, [r1]
 511              	.LVL24:
2218:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 55


 512              		.loc 1 2218 0
 513              		@ sp needed
2213:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 514              		.loc 1 2213 0
 515 000a 1840     		and	r0, r3
 516              	.LVL25:
2215:Generated_Source\PSoC4/CyLib.c **** 
 517              		.loc 1 2215 0
 518 000c 0A60     		str	r2, [r1]
2218:Generated_Source\PSoC4/CyLib.c **** 
 519              		.loc 1 2218 0
 520 000e 7047     		bx	lr
 521              	.L45:
 522              		.align	2
 523              	.L44:
 524 0010 00030B40 		.word	1074463488
 525              		.cfi_endproc
 526              	.LFE17:
 527              		.size	CySysGetResetReason, .-CySysGetResetReason
 528              		.section	.text.CyDisableInts,"ax",%progbits
 529              		.align	1
 530              		.global	CyDisableInts
 531              		.code	16
 532              		.thumb_func
 533              		.type	CyDisableInts, %function
 534              	CyDisableInts:
 535              	.LFB18:
2232:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
 536              		.loc 1 2232 0
 537              		.cfi_startproc
2239:Generated_Source\PSoC4/CyLib.c **** 
 538              		.loc 1 2239 0
 539 0000 0122     		mov	r2, #1
2236:Generated_Source\PSoC4/CyLib.c **** 
 540              		.loc 1 2236 0
 541 0002 024B     		ldr	r3, .L47
2239:Generated_Source\PSoC4/CyLib.c **** 
 542              		.loc 1 2239 0
 543 0004 5242     		neg	r2, r2
2236:Generated_Source\PSoC4/CyLib.c **** 
 544              		.loc 1 2236 0
 545 0006 1868     		ldr	r0, [r3]
 546              	.LVL26:
2242:Generated_Source\PSoC4/CyLib.c **** 
 547              		.loc 1 2242 0
 548              		@ sp needed
2239:Generated_Source\PSoC4/CyLib.c **** 
 549              		.loc 1 2239 0
 550 0008 1A60     		str	r2, [r3]
2242:Generated_Source\PSoC4/CyLib.c **** 
 551              		.loc 1 2242 0
 552 000a 7047     		bx	lr
 553              	.L48:
 554              		.align	2
 555              	.L47:
 556 000c 80E100E0 		.word	-536813184
 557              		.cfi_endproc
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 56


 558              	.LFE18:
 559              		.size	CyDisableInts, .-CyDisableInts
 560              		.section	.text.CyEnableInts,"ax",%progbits
 561              		.align	1
 562              		.global	CyEnableInts
 563              		.code	16
 564              		.thumb_func
 565              		.type	CyEnableInts, %function
 566              	CyEnableInts:
 567              	.LFB19:
2255:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 568              		.loc 1 2255 0
 569              		.cfi_startproc
 570              	.LVL27:
2256:Generated_Source\PSoC4/CyLib.c **** }
 571              		.loc 1 2256 0
 572 0000 014B     		ldr	r3, .L50
2257:Generated_Source\PSoC4/CyLib.c **** 
 573              		.loc 1 2257 0
 574              		@ sp needed
2256:Generated_Source\PSoC4/CyLib.c **** }
 575              		.loc 1 2256 0
 576 0002 1860     		str	r0, [r3]
2257:Generated_Source\PSoC4/CyLib.c **** 
 577              		.loc 1 2257 0
 578 0004 7047     		bx	lr
 579              	.L51:
 580 0006 C046     		.align	2
 581              	.L50:
 582 0008 00E100E0 		.word	-536813312
 583              		.cfi_endproc
 584              	.LFE19:
 585              		.size	CyEnableInts, .-CyEnableInts
 586              		.section	.text.CyIntSetSysVector,"ax",%progbits
 587              		.align	1
 588              		.global	CyIntSetSysVector
 589              		.code	16
 590              		.thumb_func
 591              		.type	CyIntSetSysVector, %function
 592              	CyIntSetSysVector:
 593              	.LFB20:
2280:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 594              		.loc 1 2280 0
 595              		.cfi_startproc
 596              	.LVL28:
2284:Generated_Source\PSoC4/CyLib.c **** 
 597              		.loc 1 2284 0
 598 0000 0F28     		cmp	r0, #15
 599 0002 00D9     		bls	.L53
 600              	.LVL29:
 601              	.LBB32:
 602              	.LBB33:
 603              		.loc 1 2525 0
 604              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 605 0004 01BE     		    bkpt    1
 606              	@ 0 "" 2
 607              	.LVL30:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 57


 608              		.code	16
 609              	.L53:
 610              	.LBE33:
 611              	.LBE32:
2287:Generated_Source\PSoC4/CyLib.c **** 
 612              		.loc 1 2287 0
 613 0006 8023     		mov	r3, #128
 614 0008 8000     		lsl	r0, r0, #2
 615              	.LVL31:
 616 000a 9B05     		lsl	r3, r3, #22
 617 000c C318     		add	r3, r0, r3
 618 000e 1868     		ldr	r0, [r3]
 619              	.LVL32:
2293:Generated_Source\PSoC4/CyLib.c **** 
 620              		.loc 1 2293 0
 621              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** 
 622              		.loc 1 2290 0
 623 0010 1960     		str	r1, [r3]
2293:Generated_Source\PSoC4/CyLib.c **** 
 624              		.loc 1 2293 0
 625 0012 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE20:
 628              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 629              		.section	.text.CyIntGetSysVector,"ax",%progbits
 630              		.align	1
 631              		.global	CyIntGetSysVector
 632              		.code	16
 633              		.thumb_func
 634              		.type	CyIntGetSysVector, %function
 635              	CyIntGetSysVector:
 636              	.LFB21:
2314:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 637              		.loc 1 2314 0
 638              		.cfi_startproc
 639              	.LVL33:
2317:Generated_Source\PSoC4/CyLib.c **** 
 640              		.loc 1 2317 0
 641 0000 0F28     		cmp	r0, #15
 642 0002 00D9     		bls	.L55
 643              	.LVL34:
 644              	.LBB34:
 645              	.LBB35:
 646              		.loc 1 2525 0
 647              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 648 0004 01BE     		    bkpt    1
 649              	@ 0 "" 2
 650              	.LVL35:
 651              		.code	16
 652              	.L55:
 653              	.LBE35:
 654              	.LBE34:
2319:Generated_Source\PSoC4/CyLib.c **** }
 655              		.loc 1 2319 0
 656 0006 8023     		mov	r3, #128
 657 0008 8000     		lsl	r0, r0, #2
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 58


 658              	.LVL36:
 659 000a 9B05     		lsl	r3, r3, #22
 660 000c C018     		add	r0, r0, r3
 661 000e 0068     		ldr	r0, [r0]
2320:Generated_Source\PSoC4/CyLib.c **** 
 662              		.loc 1 2320 0
 663              		@ sp needed
 664 0010 7047     		bx	lr
 665              		.cfi_endproc
 666              	.LFE21:
 667              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 668              		.section	.text.CyIntSetVector,"ax",%progbits
 669              		.align	1
 670              		.global	CyIntSetVector
 671              		.code	16
 672              		.thumb_func
 673              		.type	CyIntSetVector, %function
 674              	CyIntSetVector:
 675              	.LFB22:
2336:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 676              		.loc 1 2336 0
 677              		.cfi_startproc
 678              	.LVL37:
2340:Generated_Source\PSoC4/CyLib.c **** 
 679              		.loc 1 2340 0
 680 0000 1F28     		cmp	r0, #31
 681 0002 00D9     		bls	.L57
 682              	.LVL38:
 683              	.LBB36:
 684              	.LBB37:
 685              		.loc 1 2525 0
 686              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 687 0004 01BE     		    bkpt    1
 688              	@ 0 "" 2
 689              	.LVL39:
 690              		.code	16
 691              	.L57:
 692              	.LBE37:
 693              	.LBE36:
2343:Generated_Source\PSoC4/CyLib.c **** 
 694              		.loc 1 2343 0
 695 0006 034B     		ldr	r3, .L58
 696 0008 8000     		lsl	r0, r0, #2
 697              	.LVL40:
 698 000a C318     		add	r3, r0, r3
 699 000c 1868     		ldr	r0, [r3]
 700              	.LVL41:
2349:Generated_Source\PSoC4/CyLib.c **** 
 701              		.loc 1 2349 0
 702              		@ sp needed
2346:Generated_Source\PSoC4/CyLib.c **** 
 703              		.loc 1 2346 0
 704 000e 1960     		str	r1, [r3]
2349:Generated_Source\PSoC4/CyLib.c **** 
 705              		.loc 1 2349 0
 706 0010 7047     		bx	lr
 707              	.L59:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 59


 708 0012 C046     		.align	2
 709              	.L58:
 710 0014 40000020 		.word	536870976
 711              		.cfi_endproc
 712              	.LFE22:
 713              		.size	CyIntSetVector, .-CyIntSetVector
 714              		.section	.text.CyIntGetVector,"ax",%progbits
 715              		.align	1
 716              		.global	CyIntGetVector
 717              		.code	16
 718              		.thumb_func
 719              		.type	CyIntGetVector, %function
 720              	CyIntGetVector:
 721              	.LFB23:
2364:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 722              		.loc 1 2364 0
 723              		.cfi_startproc
 724              	.LVL42:
2367:Generated_Source\PSoC4/CyLib.c **** 
 725              		.loc 1 2367 0
 726 0000 1F28     		cmp	r0, #31
 727 0002 00D9     		bls	.L61
 728              	.LVL43:
 729              	.LBB38:
 730              	.LBB39:
 731              		.loc 1 2525 0
 732              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 733 0004 01BE     		    bkpt    1
 734              	@ 0 "" 2
 735              	.LVL44:
 736              		.code	16
 737              	.L61:
 738              	.LBE39:
 739              	.LBE38:
2369:Generated_Source\PSoC4/CyLib.c **** }
 740              		.loc 1 2369 0
 741 0006 024B     		ldr	r3, .L62
 742 0008 8000     		lsl	r0, r0, #2
 743              	.LVL45:
 744 000a C018     		add	r0, r0, r3
 745 000c 0068     		ldr	r0, [r0]
2370:Generated_Source\PSoC4/CyLib.c **** 
 746              		.loc 1 2370 0
 747              		@ sp needed
 748 000e 7047     		bx	lr
 749              	.L63:
 750              		.align	2
 751              	.L62:
 752 0010 40000020 		.word	536870976
 753              		.cfi_endproc
 754              	.LFE23:
 755              		.size	CyIntGetVector, .-CyIntGetVector
 756              		.section	.text.CyIntSetPriority,"ax",%progbits
 757              		.align	1
 758              		.global	CyIntSetPriority
 759              		.code	16
 760              		.thumb_func
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 60


 761              		.type	CyIntSetPriority, %function
 762              	CyIntSetPriority:
 763              	.LFB24:
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 764              		.loc 1 2383 0
 765              		.cfi_startproc
 766              	.LVL46:
 767 0000 38B5     		push	{r3, r4, r5, lr}
 768              		.cfi_def_cfa_offset 16
 769              		.cfi_offset 3, -16
 770              		.cfi_offset 4, -12
 771              		.cfi_offset 5, -8
 772              		.cfi_offset 14, -4
2383:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 773              		.loc 1 2383 0
 774 0002 041C     		mov	r4, r0
 775 0004 0D1E     		sub	r5, r1, #0
2388:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 776              		.loc 1 2388 0
 777 0006 032D     		cmp	r5, #3
 778 0008 00D9     		bls	.L65
 779              	.LVL47:
 780              	.LBB40:
 781              	.LBB41:
 782              		.loc 1 2525 0
 783              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 784 000a 01BE     		    bkpt    1
 785              	@ 0 "" 2
 786              	.LVL48:
 787              		.code	16
 788              	.L65:
 789              	.LBE41:
 790              	.LBE40:
2389:Generated_Source\PSoC4/CyLib.c **** 
 791              		.loc 1 2389 0
 792 000c 1F2C     		cmp	r4, #31
 793 000e 00D9     		bls	.L66
 794              	.LVL49:
 795              	.LBB42:
 796              	.LBB43:
 797              		.loc 1 2525 0
 798              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 799 0010 01BE     		    bkpt    1
 800              	@ 0 "" 2
 801              	.LVL50:
 802              		.code	16
 803              	.L66:
 804              	.LBE43:
 805              	.LBE42:
2393:Generated_Source\PSoC4/CyLib.c **** 
 806              		.loc 1 2393 0
 807 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 808              	.LVL51:
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 809              		.loc 1 2395 0
 810 0016 A308     		lsr	r3, r4, #2
 811 0018 074A     		ldr	r2, .L67
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 61


 812 001a 9B00     		lsl	r3, r3, #2
 813 001c 9B18     		add	r3, r3, r2
2391:Generated_Source\PSoC4/CyLib.c **** 
 814              		.loc 1 2391 0
 815 001e 0322     		mov	r2, #3
 816 0020 1440     		and	r4, r2
 817              	.LVL52:
 818 0022 9440     		lsl	r4, r4, r2
 819 0024 0634     		add	r4, r4, #6
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 820              		.loc 1 2396 0
 821 0026 A240     		lsl	r2, r2, r4
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 822              		.loc 1 2397 0
 823 0028 A540     		lsl	r5, r5, r4
2395:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 824              		.loc 1 2395 0
 825 002a 1968     		ldr	r1, [r3]
 826              	.LVL53:
2401:Generated_Source\PSoC4/CyLib.c **** 
 827              		.loc 1 2401 0
 828              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 829              		.loc 1 2396 0
 830 002c 9143     		bic	r1, r2
 831              	.LVL54:
2397:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 832              		.loc 1 2397 0
 833 002e 2943     		orr	r1, r5
 834              	.LVL55:
2398:Generated_Source\PSoC4/CyLib.c **** 
 835              		.loc 1 2398 0
 836 0030 1960     		str	r1, [r3]
2400:Generated_Source\PSoC4/CyLib.c **** }
 837              		.loc 1 2400 0
 838 0032 FFF7FEFF 		bl	CyExitCriticalSection
 839              	.LVL56:
2401:Generated_Source\PSoC4/CyLib.c **** 
 840              		.loc 1 2401 0
 841 0036 38BD     		pop	{r3, r4, r5, pc}
 842              	.L68:
 843              		.align	2
 844              	.L67:
 845 0038 00E400E0 		.word	-536812544
 846              		.cfi_endproc
 847              	.LFE24:
 848              		.size	CyIntSetPriority, .-CyIntSetPriority
 849              		.section	.text.CyIntGetPriority,"ax",%progbits
 850              		.align	1
 851              		.global	CyIntGetPriority
 852              		.code	16
 853              		.thumb_func
 854              		.type	CyIntGetPriority, %function
 855              	CyIntGetPriority:
 856              	.LFB25:
2417:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 857              		.loc 1 2417 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 62


 858              		.cfi_startproc
 859              	.LVL57:
2420:Generated_Source\PSoC4/CyLib.c **** 
 860              		.loc 1 2420 0
 861 0000 1F28     		cmp	r0, #31
 862 0002 00D9     		bls	.L70
 863              	.LVL58:
 864              	.LBB44:
 865              	.LBB45:
 866              		.loc 1 2525 0
 867              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 868 0004 01BE     		    bkpt    1
 869              	@ 0 "" 2
 870              	.LVL59:
 871              		.code	16
 872              	.L70:
 873              	.LBE45:
 874              	.LBE44:
2422:Generated_Source\PSoC4/CyLib.c **** 
 875              		.loc 1 2422 0
 876 0006 8308     		lsr	r3, r0, #2
 877 0008 064A     		ldr	r2, .L71
 878 000a 9B00     		lsl	r3, r3, #2
 879 000c 9B18     		add	r3, r3, r2
 880 000e 1968     		ldr	r1, [r3]
 881              	.LVL60:
 882 0010 0322     		mov	r2, #3
 883 0012 031C     		mov	r3, r0
 884 0014 1340     		and	r3, r2
 885 0016 9340     		lsl	r3, r3, r2
 886 0018 0633     		add	r3, r3, #6
 887 001a D940     		lsr	r1, r1, r3
 888              	.LVL61:
 889 001c 081C     		mov	r0, r1
 890              	.LVL62:
2425:Generated_Source\PSoC4/CyLib.c **** 
 891              		.loc 1 2425 0
 892              		@ sp needed
2424:Generated_Source\PSoC4/CyLib.c **** }
 893              		.loc 1 2424 0
 894 001e 1040     		and	r0, r2
2425:Generated_Source\PSoC4/CyLib.c **** 
 895              		.loc 1 2425 0
 896 0020 7047     		bx	lr
 897              	.L72:
 898 0022 C046     		.align	2
 899              	.L71:
 900 0024 00E400E0 		.word	-536812544
 901              		.cfi_endproc
 902              	.LFE25:
 903              		.size	CyIntGetPriority, .-CyIntGetPriority
 904              		.section	.text.CyIntEnable,"ax",%progbits
 905              		.align	1
 906              		.global	CyIntEnable
 907              		.code	16
 908              		.thumb_func
 909              		.type	CyIntEnable, %function
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 63


 910              	CyIntEnable:
 911              	.LFB26:
2438:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 912              		.loc 1 2438 0
 913              		.cfi_startproc
 914              	.LVL63:
2439:Generated_Source\PSoC4/CyLib.c **** }
 915              		.loc 1 2439 0
 916 0000 1F23     		mov	r3, #31
 917 0002 1840     		and	r0, r3
 918              	.LVL64:
 919 0004 1E3B     		sub	r3, r3, #30
 920 0006 8340     		lsl	r3, r3, r0
 921 0008 181C     		mov	r0, r3
 922 000a 014B     		ldr	r3, .L74
2440:Generated_Source\PSoC4/CyLib.c **** 
 923              		.loc 1 2440 0
 924              		@ sp needed
2439:Generated_Source\PSoC4/CyLib.c **** }
 925              		.loc 1 2439 0
 926 000c 1860     		str	r0, [r3]
2440:Generated_Source\PSoC4/CyLib.c **** 
 927              		.loc 1 2440 0
 928 000e 7047     		bx	lr
 929              	.L75:
 930              		.align	2
 931              	.L74:
 932 0010 00E100E0 		.word	-536813312
 933              		.cfi_endproc
 934              	.LFE26:
 935              		.size	CyIntEnable, .-CyIntEnable
 936              		.section	.text.CyIntGetState,"ax",%progbits
 937              		.align	1
 938              		.global	CyIntGetState
 939              		.code	16
 940              		.thumb_func
 941              		.type	CyIntGetState, %function
 942              	CyIntGetState:
 943              	.LFB27:
2456:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 944              		.loc 1 2456 0
 945              		.cfi_startproc
 946              	.LVL65:
2458:Generated_Source\PSoC4/CyLib.c **** }
 947              		.loc 1 2458 0
 948 0000 1F22     		mov	r2, #31
 949 0002 044B     		ldr	r3, .L77
 950 0004 1040     		and	r0, r2
 951              	.LVL66:
 952 0006 1B68     		ldr	r3, [r3]
2459:Generated_Source\PSoC4/CyLib.c **** 
 953              		.loc 1 2459 0
 954              		@ sp needed
2458:Generated_Source\PSoC4/CyLib.c **** }
 955              		.loc 1 2458 0
 956 0008 C340     		lsr	r3, r3, r0
 957 000a 181C     		mov	r0, r3
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 64


 958 000c 0123     		mov	r3, #1
 959 000e 1840     		and	r0, r3
2459:Generated_Source\PSoC4/CyLib.c **** 
 960              		.loc 1 2459 0
 961 0010 7047     		bx	lr
 962              	.L78:
 963 0012 C046     		.align	2
 964              	.L77:
 965 0014 00E100E0 		.word	-536813312
 966              		.cfi_endproc
 967              	.LFE27:
 968              		.size	CyIntGetState, .-CyIntGetState
 969              		.section	.text.CyIntDisable,"ax",%progbits
 970              		.align	1
 971              		.global	CyIntDisable
 972              		.code	16
 973              		.thumb_func
 974              		.type	CyIntDisable, %function
 975              	CyIntDisable:
 976              	.LFB28:
2472:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 977              		.loc 1 2472 0
 978              		.cfi_startproc
 979              	.LVL67:
2473:Generated_Source\PSoC4/CyLib.c **** }
 980              		.loc 1 2473 0
 981 0000 1F23     		mov	r3, #31
 982 0002 1840     		and	r0, r3
 983              	.LVL68:
 984 0004 1E3B     		sub	r3, r3, #30
 985 0006 8340     		lsl	r3, r3, r0
 986 0008 181C     		mov	r0, r3
 987 000a 014B     		ldr	r3, .L80
2474:Generated_Source\PSoC4/CyLib.c **** 
 988              		.loc 1 2474 0
 989              		@ sp needed
2473:Generated_Source\PSoC4/CyLib.c **** }
 990              		.loc 1 2473 0
 991 000c 1860     		str	r0, [r3]
2474:Generated_Source\PSoC4/CyLib.c **** 
 992              		.loc 1 2474 0
 993 000e 7047     		bx	lr
 994              	.L81:
 995              		.align	2
 996              	.L80:
 997 0010 80E100E0 		.word	-536813184
 998              		.cfi_endproc
 999              	.LFE28:
 1000              		.size	CyIntDisable, .-CyIntDisable
 1001              		.section	.text.CyIntSetPending,"ax",%progbits
 1002              		.align	1
 1003              		.global	CyIntSetPending
 1004              		.code	16
 1005              		.thumb_func
 1006              		.type	CyIntSetPending, %function
 1007              	CyIntSetPending:
 1008              	.LFB29:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 65


2486:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1009              		.loc 1 2486 0
 1010              		.cfi_startproc
 1011              	.LVL69:
2487:Generated_Source\PSoC4/CyLib.c **** }
 1012              		.loc 1 2487 0
 1013 0000 1F23     		mov	r3, #31
 1014 0002 1840     		and	r0, r3
 1015              	.LVL70:
 1016 0004 1E3B     		sub	r3, r3, #30
 1017 0006 8340     		lsl	r3, r3, r0
 1018 0008 181C     		mov	r0, r3
 1019 000a 014B     		ldr	r3, .L83
2488:Generated_Source\PSoC4/CyLib.c **** 
 1020              		.loc 1 2488 0
 1021              		@ sp needed
2487:Generated_Source\PSoC4/CyLib.c **** }
 1022              		.loc 1 2487 0
 1023 000c 1860     		str	r0, [r3]
2488:Generated_Source\PSoC4/CyLib.c **** 
 1024              		.loc 1 2488 0
 1025 000e 7047     		bx	lr
 1026              	.L84:
 1027              		.align	2
 1028              	.L83:
 1029 0010 00E200E0 		.word	-536813056
 1030              		.cfi_endproc
 1031              	.LFE29:
 1032              		.size	CyIntSetPending, .-CyIntSetPending
 1033              		.section	.text.CyIntClearPending,"ax",%progbits
 1034              		.align	1
 1035              		.global	CyIntClearPending
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CyIntClearPending, %function
 1039              	CyIntClearPending:
 1040              	.LFB30:
2501:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 1041              		.loc 1 2501 0
 1042              		.cfi_startproc
 1043              	.LVL71:
2502:Generated_Source\PSoC4/CyLib.c **** }
 1044              		.loc 1 2502 0
 1045 0000 1F23     		mov	r3, #31
 1046 0002 1840     		and	r0, r3
 1047              	.LVL72:
 1048 0004 1E3B     		sub	r3, r3, #30
 1049 0006 8340     		lsl	r3, r3, r0
 1050 0008 181C     		mov	r0, r3
 1051 000a 014B     		ldr	r3, .L86
2503:Generated_Source\PSoC4/CyLib.c **** 
 1052              		.loc 1 2503 0
 1053              		@ sp needed
2502:Generated_Source\PSoC4/CyLib.c **** }
 1054              		.loc 1 2502 0
 1055 000c 1860     		str	r0, [r3]
2503:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 66


 1056              		.loc 1 2503 0
 1057 000e 7047     		bx	lr
 1058              	.L87:
 1059              		.align	2
 1060              	.L86:
 1061 0010 80E200E0 		.word	-536812928
 1062              		.cfi_endproc
 1063              	.LFE30:
 1064              		.size	CyIntClearPending, .-CyIntClearPending
 1065              		.section	.text.CyHalt,"ax",%progbits
 1066              		.align	1
 1067              		.global	CyHalt
 1068              		.code	16
 1069              		.thumb_func
 1070              		.type	CyHalt, %function
 1071              	CyHalt:
 1072              	.LFB31:
2516:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1073              		.loc 1 2516 0
 1074              		.cfi_startproc
 1075              	.LVL73:
 1076              		.loc 1 2525 0
 1077              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1078 0000 01BE     		    bkpt    1
 1079              	@ 0 "" 2
2526:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2527:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2528:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
2529:Generated_Source\PSoC4/CyLib.c **** }
 1080              		.loc 1 2529 0
 1081              		.code	16
 1082              		@ sp needed
 1083 0002 7047     		bx	lr
 1084              		.cfi_endproc
 1085              	.LFE31:
 1086              		.size	CyHalt, .-CyHalt
 1087              		.section	.text.CySoftwareReset,"ax",%progbits
 1088              		.align	1
 1089              		.global	CySoftwareReset
 1090              		.code	16
 1091              		.thumb_func
 1092              		.type	CySoftwareReset, %function
 1093              	CySoftwareReset:
 1094              	.LFB32:
2530:Generated_Source\PSoC4/CyLib.c **** 
2531:Generated_Source\PSoC4/CyLib.c **** 
2532:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2533:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2534:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2535:Generated_Source\PSoC4/CyLib.c **** *
2536:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
 1095              		.loc 1 2540 0
 1096              		.cfi_startproc
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 67


2541:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2542:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2543:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2544:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2545:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1097              		.loc 1 2545 0
 1098 0000 034A     		ldr	r2, .L90
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1099              		.loc 1 2546 0
 1100 0002 0449     		ldr	r1, .L90+4
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1101              		.loc 1 2545 0
 1102 0004 1368     		ldr	r3, [r2]
2547:Generated_Source\PSoC4/CyLib.c **** }
 1103              		.loc 1 2547 0
 1104              		@ sp needed
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1105              		.loc 1 2545 0
 1106 0006 9BB2     		uxth	r3, r3
2546:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1107              		.loc 1 2546 0
 1108 0008 0B43     		orr	r3, r1
2545:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1109              		.loc 1 2545 0
 1110 000a 1360     		str	r3, [r2]
 1111              		.loc 1 2547 0
 1112 000c 7047     		bx	lr
 1113              	.L91:
 1114 000e C046     		.align	2
 1115              	.L90:
 1116 0010 0CED00E0 		.word	-536810228
 1117 0014 0400FA05 		.word	100270084
 1118              		.cfi_endproc
 1119              	.LFE32:
 1120              		.size	CySoftwareReset, .-CySoftwareReset
 1121              		.section	.text.CyDelay,"ax",%progbits
 1122              		.align	1
 1123              		.global	CyDelay
 1124              		.code	16
 1125              		.thumb_func
 1126              		.type	CyDelay, %function
 1127              	CyDelay:
 1128              	.LFB33:
2548:Generated_Source\PSoC4/CyLib.c **** 
2549:Generated_Source\PSoC4/CyLib.c **** 
2550:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2551:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2552:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2553:Generated_Source\PSoC4/CyLib.c **** *
2554:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2555:Generated_Source\PSoC4/CyLib.c **** *
2556:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2557:Generated_Source\PSoC4/CyLib.c **** *
2558:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2559:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2560:Generated_Source\PSoC4/CyLib.c **** {
 1129              		.loc 1 2560 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 68


 1130              		.cfi_startproc
 1131              	.LVL74:
 1132 0000 10B5     		push	{r4, lr}
 1133              		.cfi_def_cfa_offset 8
 1134              		.cfi_offset 4, -8
 1135              		.cfi_offset 14, -4
 1136 0002 041C     		mov	r4, r0
 1137              	.LVL75:
 1138              	.L93:
2561:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1139              		.loc 1 2561 0
 1140 0004 8022     		mov	r2, #128
 1141 0006 074B     		ldr	r3, .L96
 1142 0008 1202     		lsl	r2, r2, #8
 1143 000a 9442     		cmp	r4, r2
 1144 000c 05D9     		bls	.L95
2562:Generated_Source\PSoC4/CyLib.c ****     {
2563:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2564:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2565:Generated_Source\PSoC4/CyLib.c ****          */
2566:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1145              		.loc 1 2566 0
 1146 000e 5868     		ldr	r0, [r3, #4]
 1147 0010 FFF7FEFF 		bl	CyDelayCycles
 1148              	.LVL76:
2567:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1149              		.loc 1 2567 0
 1150 0014 044B     		ldr	r3, .L96+4
 1151 0016 E418     		add	r4, r4, r3
 1152              	.LVL77:
 1153 0018 F4E7     		b	.L93
 1154              	.L95:
2568:Generated_Source\PSoC4/CyLib.c ****     }
2569:Generated_Source\PSoC4/CyLib.c **** 
2570:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1155              		.loc 1 2570 0
 1156 001a 9868     		ldr	r0, [r3, #8]
2571:Generated_Source\PSoC4/CyLib.c **** }
 1157              		.loc 1 2571 0
 1158              		@ sp needed
2570:Generated_Source\PSoC4/CyLib.c **** }
 1159              		.loc 1 2570 0
 1160 001c 6043     		mul	r0, r4
 1161 001e FFF7FEFF 		bl	CyDelayCycles
 1162              	.LVL78:
 1163              	.LVL79:
 1164              		.loc 1 2571 0
 1165 0022 10BD     		pop	{r4, pc}
 1166              	.L97:
 1167              		.align	2
 1168              	.L96:
 1169 0024 00000000 		.word	.LANCHOR0
 1170 0028 0080FFFF 		.word	-32768
 1171              		.cfi_endproc
 1172              	.LFE33:
 1173              		.size	CyDelay, .-CyDelay
 1174              		.section	.text.CyDelayUs,"ax",%progbits
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 69


 1175              		.align	1
 1176              		.global	CyDelayUs
 1177              		.code	16
 1178              		.thumb_func
 1179              		.type	CyDelayUs, %function
 1180              	CyDelayUs:
 1181              	.LFB34:
2572:Generated_Source\PSoC4/CyLib.c **** 
2573:Generated_Source\PSoC4/CyLib.c **** 
2574:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2575:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2576:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2577:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2578:Generated_Source\PSoC4/CyLib.c **** *
2579:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2580:Generated_Source\PSoC4/CyLib.c **** *
2581:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2582:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2583:Generated_Source\PSoC4/CyLib.c **** {
 1182              		.loc 1 2583 0
 1183              		.cfi_startproc
 1184              	.LVL80:
 1185 0000 08B5     		push	{r3, lr}
 1186              		.cfi_def_cfa_offset 8
 1187              		.cfi_offset 3, -8
 1188              		.cfi_offset 14, -4
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1189              		.loc 1 2584 0
 1190 0002 034B     		ldr	r3, .L99
2585:Generated_Source\PSoC4/CyLib.c **** }
 1191              		.loc 1 2585 0
 1192              		@ sp needed
2584:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1193              		.loc 1 2584 0
 1194 0004 1B7B     		ldrb	r3, [r3, #12]
 1195 0006 5843     		mul	r0, r3
 1196              	.LVL81:
 1197 0008 FFF7FEFF 		bl	CyDelayCycles
 1198              	.LVL82:
 1199              		.loc 1 2585 0
 1200 000c 08BD     		pop	{r3, pc}
 1201              	.L100:
 1202 000e C046     		.align	2
 1203              	.L99:
 1204 0010 00000000 		.word	.LANCHOR0
 1205              		.cfi_endproc
 1206              	.LFE34:
 1207              		.size	CyDelayUs, .-CyDelayUs
 1208              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1209              		.align	1
 1210              		.global	CySysClkWriteImoFreq
 1211              		.code	16
 1212              		.thumb_func
 1213              		.type	CySysClkWriteImoFreq, %function
 1214              	CySysClkWriteImoFreq:
 1215              	.LFB8:
 624:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 70


 1216              		.loc 1 624 0
 1217              		.cfi_startproc
 1218              	.LVL83:
 1219 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1220              		.cfi_def_cfa_offset 20
 1221              		.cfi_offset 4, -20
 1222              		.cfi_offset 5, -16
 1223              		.cfi_offset 6, -12
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 051C     		mov	r5, r0
 1227 0004 87B0     		sub	sp, sp, #28
 1228              		.cfi_def_cfa_offset 48
 647:Generated_Source\PSoC4/CyLib.c **** 
 1229              		.loc 1 647 0
 1230 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1231              	.LVL84:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1232              		.loc 1 697 0
 1233 000a EB1E     		sub	r3, r5, #3
 647:Generated_Source\PSoC4/CyLib.c **** 
 1234              		.loc 1 647 0
 1235 000c 0490     		str	r0, [sp, #16]
 1236              	.LVL85:
 697:Generated_Source\PSoC4/CyLib.c ****         {
 1237              		.loc 1 697 0
 1238 000e 0393     		str	r3, [sp, #12]
 1239 0010 2D2B     		cmp	r3, #45
 1240 0012 5CD8     		bhi	.L102
 699:Generated_Source\PSoC4/CyLib.c ****             {
 1241              		.loc 1 699 0
 1242 0014 314B     		ldr	r3, .L113
 1243 0016 1B78     		ldrb	r3, [r3]
 1244 0018 9D42     		cmp	r5, r3
 1245 001a 04D8     		bhi	.L103
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1246              		.loc 1 701 0
 1247 001c 304B     		ldr	r3, .L113+4
 1248 001e 1C78     		ldrb	r4, [r3]
 702:Generated_Source\PSoC4/CyLib.c ****             }
 1249              		.loc 1 702 0
 1250 0020 304B     		ldr	r3, .L113+8
 701:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1251              		.loc 1 701 0
 1252 0022 E4B2     		uxtb	r4, r4
 1253              	.LVL86:
 1254 0024 1EE0     		b	.L111
 1255              	.LVL87:
 1256              	.L103:
 704:Generated_Source\PSoC4/CyLib.c ****             {
 1257              		.loc 1 704 0
 1258 0026 304B     		ldr	r3, .L113+12
 1259 0028 1B78     		ldrb	r3, [r3]
 1260 002a 9D42     		cmp	r5, r3
 1261 002c 04D8     		bhi	.L105
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1262              		.loc 1 706 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 71


 1263 002e 2F4B     		ldr	r3, .L113+16
 1264 0030 1C78     		ldrb	r4, [r3]
 707:Generated_Source\PSoC4/CyLib.c ****             }
 1265              		.loc 1 707 0
 1266 0032 2F4B     		ldr	r3, .L113+20
 706:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1267              		.loc 1 706 0
 1268 0034 E4B2     		uxtb	r4, r4
 1269              	.LVL88:
 1270 0036 15E0     		b	.L111
 1271              	.LVL89:
 1272              	.L105:
 709:Generated_Source\PSoC4/CyLib.c ****             {
 1273              		.loc 1 709 0
 1274 0038 2E4B     		ldr	r3, .L113+24
 1275 003a 1B78     		ldrb	r3, [r3]
 1276 003c 9D42     		cmp	r5, r3
 1277 003e 04D8     		bhi	.L106
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1278              		.loc 1 711 0
 1279 0040 2D4B     		ldr	r3, .L113+28
 1280 0042 1C78     		ldrb	r4, [r3]
 712:Generated_Source\PSoC4/CyLib.c ****             }
 1281              		.loc 1 712 0
 1282 0044 2D4B     		ldr	r3, .L113+32
 711:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1283              		.loc 1 711 0
 1284 0046 E4B2     		uxtb	r4, r4
 1285              	.LVL90:
 1286 0048 0CE0     		b	.L111
 1287              	.LVL91:
 1288              	.L106:
 714:Generated_Source\PSoC4/CyLib.c ****             {
 1289              		.loc 1 714 0
 1290 004a 2D4B     		ldr	r3, .L113+36
 1291 004c 1B78     		ldrb	r3, [r3]
 1292 004e 9D42     		cmp	r5, r3
 1293 0050 04D8     		bhi	.L107
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1294              		.loc 1 716 0
 1295 0052 2C4B     		ldr	r3, .L113+40
 1296 0054 1C78     		ldrb	r4, [r3]
 717:Generated_Source\PSoC4/CyLib.c ****             }
 1297              		.loc 1 717 0
 1298 0056 2C4B     		ldr	r3, .L113+44
 716:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1299              		.loc 1 716 0
 1300 0058 E4B2     		uxtb	r4, r4
 1301              	.LVL92:
 1302 005a 03E0     		b	.L111
 1303              	.LVL93:
 1304              	.L107:
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1305              		.loc 1 721 0
 1306 005c 2B4B     		ldr	r3, .L113+48
 1307 005e 1C78     		ldrb	r4, [r3]
 722:Generated_Source\PSoC4/CyLib.c ****             }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 72


 1308              		.loc 1 722 0
 1309 0060 2B4B     		ldr	r3, .L113+52
 721:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1310              		.loc 1 721 0
 1311 0062 E4B2     		uxtb	r4, r4
 1312              	.LVL94:
 1313              	.L111:
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1314              		.loc 1 722 0
 1315 0064 1B78     		ldrb	r3, [r3]
 726:Generated_Source\PSoC4/CyLib.c **** 
 1316              		.loc 1 726 0
 1317 0066 039A     		ldr	r2, [sp, #12]
 722:Generated_Source\PSoC4/CyLib.c ****             }
 1318              		.loc 1 722 0
 1319 0068 DBB2     		uxtb	r3, r3
 1320 006a 0193     		str	r3, [sp, #4]
 1321              	.LVL95:
 726:Generated_Source\PSoC4/CyLib.c **** 
 1322              		.loc 1 726 0
 1323 006c 294B     		ldr	r3, .L113+56
 1324 006e 2A4F     		ldr	r7, .L113+60
 1325 0070 9A5C     		ldrb	r2, [r3, r2]
 1326 0072 0593     		str	r3, [sp, #20]
 1327 0074 0292     		str	r2, [sp, #8]
 1328              	.LVL96:
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1329              		.loc 1 738 0
 1330 0076 2F2A     		cmp	r2, #47
 1331 0078 04D9     		bls	.L108
 738:Generated_Source\PSoC4/CyLib.c ****             {
 1332              		.loc 1 738 0 is_stmt 0 discriminator 1
 1333 007a 2A2D     		cmp	r5, #42
 1334 007c 02D9     		bls	.L108
 741:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1335              		.loc 1 741 0 is_stmt 1
 1336 007e 1926     		mov	r6, #25
 1337 0080 3E60     		str	r6, [r7]
 1338 0082 08E0     		b	.L112
 1339              	.L108:
 750:Generated_Source\PSoC4/CyLib.c ****             }
 1340              		.loc 1 750 0
 1341 0084 3F23     		mov	r3, #63
 1342 0086 3E68     		ldr	r6, [r7]
 1343 0088 1E40     		and	r6, r3
 1344              	.LVL97:
 762:Generated_Source\PSoC4/CyLib.c ****             {
 1345              		.loc 1 762 0
 1346 008a 029B     		ldr	r3, [sp, #8]
 1347 008c B342     		cmp	r3, r6
 1348 008e 05D2     		bcs	.L109
 765:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1349              		.loc 1 765 0
 1350 0090 214B     		ldr	r3, .L113+60
 1351 0092 029A     		ldr	r2, [sp, #8]
 1352 0094 1A60     		str	r2, [r3]
 1353              	.LVL98:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 73


 1354              	.L112:
 766:Generated_Source\PSoC4/CyLib.c ****             }
 1355              		.loc 1 766 0
 1356 0096 0520     		mov	r0, #5
 1357 0098 FFF7FEFF 		bl	CyDelayCycles
 1358              	.LVL99:
 1359              	.L109:
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1360              		.loc 1 785 0
 1361 009c 1C4B     		ldr	r3, .L113+52
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1362              		.loc 1 789 0
 1363 009e 1F4A     		ldr	r2, .L113+64
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1364              		.loc 1 785 0
 1365 00a0 ED18     		add	r5, r5, r3
 1366              	.LVL100:
 1367 00a2 2B78     		ldrb	r3, [r5]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1368              		.loc 1 792 0
 1369 00a4 0520     		mov	r0, #5
 785:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1370              		.loc 1 785 0
 1371 00a6 DBB2     		uxtb	r3, r3
 1372              	.LVL101:
 789:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1373              		.loc 1 789 0
 1374 00a8 1360     		str	r3, [r2]
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1375              		.loc 1 790 0
 1376 00aa 1D4B     		ldr	r3, .L113+68
 1377              	.LVL102:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1378              		.loc 1 791 0
 1379 00ac 019A     		ldr	r2, [sp, #4]
 1380              	.LVL103:
 790:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1381              		.loc 1 790 0
 1382 00ae 1C60     		str	r4, [r3]
 1383              	.LVL104:
 791:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1384              		.loc 1 791 0
 1385 00b0 1C4B     		ldr	r3, .L113+72
 1386 00b2 1A60     		str	r2, [r3]
 792:Generated_Source\PSoC4/CyLib.c **** 
 1387              		.loc 1 792 0
 1388 00b4 FFF7FEFF 		bl	CyDelayUs
 1389              	.LVL105:
 794:Generated_Source\PSoC4/CyLib.c ****             {
 1390              		.loc 1 794 0
 1391 00b8 029B     		ldr	r3, [sp, #8]
 1392 00ba B342     		cmp	r3, r6
 1393 00bc 08D9     		bls	.L110
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1394              		.loc 1 797 0
 1395 00be 059B     		ldr	r3, [sp, #20]
 1396 00c0 039A     		ldr	r2, [sp, #12]
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 74


 798:Generated_Source\PSoC4/CyLib.c ****             }
 1397              		.loc 1 798 0
 1398 00c2 0520     		mov	r0, #5
 797:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1399              		.loc 1 797 0
 1400 00c4 9B5C     		ldrb	r3, [r3, r2]
 1401 00c6 3B60     		str	r3, [r7]
 798:Generated_Source\PSoC4/CyLib.c ****             }
 1402              		.loc 1 798 0
 1403 00c8 FFF7FEFF 		bl	CyDelayCycles
 1404              	.LVL106:
 1405 00cc 00E0     		b	.L110
 1406              	.LVL107:
 1407              	.L102:
 1408              	.LBB46:
 1409              	.LBB47:
2525:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1410              		.loc 1 2525 0
 1411              	@ 2525 "Generated_Source\PSoC4\CyLib.c" 1
 1412 00ce 01BE     		    bkpt    1
 1413              	@ 0 "" 2
 1414              	.LVL108:
 1415              		.code	16
 1416              	.L110:
 1417              	.LBE47:
 1418              	.LBE46:
 823:Generated_Source\PSoC4/CyLib.c ****     }
 1419              		.loc 1 823 0
 1420 00d0 0498     		ldr	r0, [sp, #16]
 1421 00d2 FFF7FEFF 		bl	CyExitCriticalSection
 1422              	.LVL109:
 824:Generated_Source\PSoC4/CyLib.c **** 
 1423              		.loc 1 824 0
 1424 00d6 07B0     		add	sp, sp, #28
 1425              		@ sp needed
 1426 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1427              	.L114:
 1428 00da C046     		.align	2
 1429              	.L113:
 1430 00dc 40F3FF0F 		.word	268432192
 1431 00e0 41F3FF0F 		.word	268432193
 1432 00e4 42F3FF0F 		.word	268432194
 1433 00e8 43F3FF0F 		.word	268432195
 1434 00ec 44F3FF0F 		.word	268432196
 1435 00f0 45F3FF0F 		.word	268432197
 1436 00f4 46F3FF0F 		.word	268432198
 1437 00f8 47F3FF0F 		.word	268432199
 1438 00fc 48F3FF0F 		.word	268432200
 1439 0100 49F3FF0F 		.word	268432201
 1440 0104 4AF3FF0F 		.word	268432202
 1441 0108 4BF3FF0F 		.word	268432203
 1442 010c 4CF3FF0F 		.word	268432204
 1443 0110 4DF3FF0F 		.word	268432205
 1444 0114 00000000 		.word	.LANCHOR1
 1445 0118 2CFF0B40 		.word	1074528044
 1446 011c 28FF0B40 		.word	1074528040
 1447 0120 1CFF0B40 		.word	1074528028
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 75


 1448 0124 20FF0B40 		.word	1074528032
 1449              		.cfi_endproc
 1450              	.LFE8:
 1451              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1452              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1453              		.align	1
 1454              		.global	CySysClkEcoStart
 1455              		.code	16
 1456              		.thumb_func
 1457              		.type	CySysClkEcoStart, %function
 1458              	CySysClkEcoStart:
 1459              	.LFB9:
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1460              		.loc 1 1028 0
 1461              		.cfi_startproc
 1462              	.LVL110:
1033:Generated_Source\PSoC4/CyLib.c **** 
 1463              		.loc 1 1033 0
 1464 0000 0121     		mov	r1, #1
 1465 0002 0F4A     		ldr	r2, .L120
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1466              		.loc 1 1028 0
 1467 0004 10B5     		push	{r4, lr}
 1468              		.cfi_def_cfa_offset 8
 1469              		.cfi_offset 4, -8
 1470              		.cfi_offset 14, -4
1033:Generated_Source\PSoC4/CyLib.c **** 
 1471              		.loc 1 1033 0
 1472 0006 1368     		ldr	r3, [r2]
1028:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1473              		.loc 1 1028 0
 1474 0008 041C     		mov	r4, r0
1033:Generated_Source\PSoC4/CyLib.c **** 
 1475              		.loc 1 1033 0
 1476 000a 0B43     		orr	r3, r1
1039:Generated_Source\PSoC4/CyLib.c ****         
 1477              		.loc 1 1039 0
 1478 000c 8021     		mov	r1, #128
1033:Generated_Source\PSoC4/CyLib.c **** 
 1479              		.loc 1 1033 0
 1480 000e 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CyLib.c **** 
 1481              		.loc 1 1036 0
 1482 0010 0C4A     		ldr	r2, .L120+4
 1483 0012 0D4B     		ldr	r3, .L120+8
1039:Generated_Source\PSoC4/CyLib.c ****         
 1484              		.loc 1 1039 0
 1485 0014 0902     		lsl	r1, r1, #8
1036:Generated_Source\PSoC4/CyLib.c **** 
 1486              		.loc 1 1036 0
 1487 0016 1A60     		str	r2, [r3]
1039:Generated_Source\PSoC4/CyLib.c ****         
 1488              		.loc 1 1039 0
 1489 0018 0C4A     		ldr	r2, .L120+12
 1490 001a 1368     		ldr	r3, [r2]
 1491 001c 0B43     		orr	r3, r1
 1492 001e 1360     		str	r3, [r2]
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 76


1137:Generated_Source\PSoC4/CyLib.c ****         {
 1493              		.loc 1 1137 0
 1494 0020 0028     		cmp	r0, #0
 1495 0022 01D1     		bne	.L119
 1496              	.LVL111:
 1497              	.L118:
1029:Generated_Source\PSoC4/CyLib.c **** 
 1498              		.loc 1 1029 0
 1499 0024 0020     		mov	r0, #0
 1500 0026 0AE0     		b	.L117
 1501              	.L119:
1143:Generated_Source\PSoC4/CyLib.c **** 
 1502              		.loc 1 1143 0
 1503 0028 0120     		mov	r0, #1
 1504 002a FFF7FEFF 		bl	CyDelayUs
 1505              	.LVL112:
 1506              	.LBB48:
 1507              	.LBB49:
1208:Generated_Source\PSoC4/CyLib.c ****         #elif (CY_IP_ECO_BLESSV3)
 1508              		.loc 1 1208 0
 1509 002e 084B     		ldr	r3, .L120+16
 1510 0030 1B68     		ldr	r3, [r3]
 1511              	.LVL113:
 1512              	.LBE49:
 1513              	.LBE48:
1145:Generated_Source\PSoC4/CyLib.c ****                 {
 1514              		.loc 1 1145 0
 1515 0032 DB07     		lsl	r3, r3, #31
 1516 0034 F6D4     		bmi	.L118
 1517              	.LVL114:
1141:Generated_Source\PSoC4/CyLib.c ****             {
 1518              		.loc 1 1141 0
 1519 0036 013C     		sub	r4, r4, #1
 1520              	.LVL115:
 1521 0038 002C     		cmp	r4, #0
 1522 003a F5D1     		bne	.L119
1139:Generated_Source\PSoC4/CyLib.c **** 
 1523              		.loc 1 1139 0
 1524 003c 1020     		mov	r0, #16
 1525              	.L117:
 1526              	.LVL116:
1155:Generated_Source\PSoC4/CyLib.c **** 
 1527              		.loc 1 1155 0
 1528              		@ sp needed
 1529              	.LVL117:
 1530 003e 10BD     		pop	{r4, pc}
 1531              	.L121:
 1532              		.align	2
 1533              	.L120:
 1534 0040 60F02E40 		.word	1076818016
 1535 0044 02200000 		.word	8194
 1536 0048 78002E40 		.word	1076756600
 1537 004c 10002E40 		.word	1076756496
 1538 0050 0C002E40 		.word	1076756492
 1539              		.cfi_endproc
 1540              	.LFE9:
 1541              		.size	CySysClkEcoStart, .-CySysClkEcoStart
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 77


 1542              		.section	.text.CySysLvdEnable,"ax",%progbits
 1543              		.align	1
 1544              		.global	CySysLvdEnable
 1545              		.code	16
 1546              		.thumb_func
 1547              		.type	CySysLvdEnable, %function
 1548              	CySysLvdEnable:
 1549              	.LFB13:
2119:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1550              		.loc 1 2119 0
 1551              		.cfi_startproc
 1552              	.LVL118:
 1553 0000 38B5     		push	{r3, r4, r5, lr}
 1554              		.cfi_def_cfa_offset 16
 1555              		.cfi_offset 3, -16
 1556              		.cfi_offset 4, -12
 1557              		.cfi_offset 5, -8
 1558              		.cfi_offset 14, -4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1559              		.loc 1 2121 0
 1560 0002 0225     		mov	r5, #2
2125:Generated_Source\PSoC4/CyLib.c **** 
 1561              		.loc 1 2125 0
 1562 0004 1E21     		mov	r1, #30
2121:Generated_Source\PSoC4/CyLib.c **** 
 1563              		.loc 1 2121 0
 1564 0006 0C4C     		ldr	r4, .L123
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1565              		.loc 1 2124 0
 1566 0008 0C4A     		ldr	r2, .L123+4
2121:Generated_Source\PSoC4/CyLib.c **** 
 1567              		.loc 1 2121 0
 1568 000a 2368     		ldr	r3, [r4]
2125:Generated_Source\PSoC4/CyLib.c **** 
 1569              		.loc 1 2125 0
 1570 000c 4000     		lsl	r0, r0, #1
 1571              	.LVL119:
2121:Generated_Source\PSoC4/CyLib.c **** 
 1572              		.loc 1 2121 0
 1573 000e AB43     		bic	r3, r5
 1574 0010 2360     		str	r3, [r4]
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1575              		.loc 1 2124 0
 1576 0012 1368     		ldr	r3, [r2]
2125:Generated_Source\PSoC4/CyLib.c **** 
 1577              		.loc 1 2125 0
 1578 0014 0840     		and	r0, r1
2124:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1579              		.loc 1 2124 0
 1580 0016 8B43     		bic	r3, r1
 1581 0018 1843     		orr	r0, r3
 1582 001a 1060     		str	r0, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1583              		.loc 1 2131 0
 1584 001c FA20     		mov	r0, #250
2128:Generated_Source\PSoC4/CyLib.c **** 
 1585              		.loc 1 2128 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 78


 1586 001e 1368     		ldr	r3, [r2]
 1587 0020 1D39     		sub	r1, r1, #29
 1588 0022 0B43     		orr	r3, r1
 1589 0024 1360     		str	r3, [r2]
2131:Generated_Source\PSoC4/CyLib.c **** 
 1590              		.loc 1 2131 0
 1591 0026 8000     		lsl	r0, r0, #2
 1592 0028 FFF7FEFF 		bl	CyDelayUs
 1593              	.LVL120:
 1594              	.LBB50:
 1595              	.LBB51:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1596              		.loc 1 2184 0
 1597 002c 044B     		ldr	r3, .L123+8
 1598              	.LBE51:
 1599              	.LBE50:
2138:Generated_Source\PSoC4/CyLib.c **** 
 1600              		.loc 1 2138 0
 1601              		@ sp needed
 1602              	.LBB53:
 1603              	.LBB52:
2184:Generated_Source\PSoC4/CyLib.c ****     }
 1604              		.loc 1 2184 0
 1605 002e 1D60     		str	r5, [r3]
 1606              	.LBE52:
 1607              	.LBE53:
2137:Generated_Source\PSoC4/CyLib.c ****     }
 1608              		.loc 1 2137 0
 1609 0030 2368     		ldr	r3, [r4]
 1610 0032 1D43     		orr	r5, r3
 1611 0034 2560     		str	r5, [r4]
2138:Generated_Source\PSoC4/CyLib.c **** 
 1612              		.loc 1 2138 0
 1613 0036 38BD     		pop	{r3, r4, r5, pc}
 1614              	.L124:
 1615              		.align	2
 1616              	.L123:
 1617 0038 08000B40 		.word	1074462728
 1618 003c 18000B40 		.word	1074462744
 1619 0040 04000B40 		.word	1074462724
 1620              		.cfi_endproc
 1621              	.LFE13:
 1622              		.size	CySysLvdEnable, .-CySysLvdEnable
 1623              		.global	__aeabi_uidiv
 1624              		.section	.text.CyDelayFreq,"ax",%progbits
 1625              		.align	1
 1626              		.global	CyDelayFreq
 1627              		.code	16
 1628              		.thumb_func
 1629              		.type	CyDelayFreq, %function
 1630              	CyDelayFreq:
 1631              	.LFB35:
2586:Generated_Source\PSoC4/CyLib.c **** 
2587:Generated_Source\PSoC4/CyLib.c **** 
2588:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2589:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2590:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 79


2591:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2592:Generated_Source\PSoC4/CyLib.c **** *
2593:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2594:Generated_Source\PSoC4/CyLib.c **** *
2595:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2596:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2597:Generated_Source\PSoC4/CyLib.c **** {
 1632              		.loc 1 2597 0
 1633              		.cfi_startproc
 1634              	.LVL121:
 1635 0000 38B5     		push	{r3, r4, r5, lr}
 1636              		.cfi_def_cfa_offset 16
 1637              		.cfi_offset 3, -16
 1638              		.cfi_offset 4, -12
 1639              		.cfi_offset 5, -8
 1640              		.cfi_offset 14, -4
 1641 0002 0C4C     		ldr	r4, .L128
2598:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1642              		.loc 1 2598 0
 1643 0004 0028     		cmp	r0, #0
 1644 0006 01D0     		beq	.L126
2599:Generated_Source\PSoC4/CyLib.c ****     {
2600:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1645              		.loc 1 2600 0
 1646 0008 2061     		str	r0, [r4, #16]
 1647 000a 01E0     		b	.L127
 1648              	.L126:
2601:Generated_Source\PSoC4/CyLib.c ****     }
2602:Generated_Source\PSoC4/CyLib.c ****     else
2603:Generated_Source\PSoC4/CyLib.c ****     {
2604:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1649              		.loc 1 2604 0
 1650 000c 0A4B     		ldr	r3, .L128+4
 1651 000e 2361     		str	r3, [r4, #16]
 1652              	.L127:
2605:Generated_Source\PSoC4/CyLib.c ****     }
2606:Generated_Source\PSoC4/CyLib.c **** 
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1653              		.loc 1 2607 0
 1654 0010 2569     		ldr	r5, [r4, #16]
 1655 0012 0A4B     		ldr	r3, .L128+8
 1656 0014 0A49     		ldr	r1, .L128+12
 1657 0016 E818     		add	r0, r5, r3
 1658              	.LVL122:
 1659 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1660              	.LVL123:
2608:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1661              		.loc 1 2608 0
 1662 001c FA21     		mov	r1, #250
 1663 001e 094B     		ldr	r3, .L128+16
2607:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1664              		.loc 1 2607 0
 1665 0020 2073     		strb	r0, [r4, #12]
 1666              		.loc 1 2608 0
 1667 0022 8900     		lsl	r1, r1, #2
 1668 0024 E818     		add	r0, r5, r3
 1669 0026 FFF7FEFF 		bl	__aeabi_uidiv
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 80


 1670              	.LVL124:
 1671 002a A060     		str	r0, [r4, #8]
2609:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1672              		.loc 1 2609 0
 1673 002c C003     		lsl	r0, r0, #15
 1674 002e 6060     		str	r0, [r4, #4]
2610:Generated_Source\PSoC4/CyLib.c **** }
 1675              		.loc 1 2610 0
 1676              		@ sp needed
 1677 0030 38BD     		pop	{r3, r4, r5, pc}
 1678              	.L129:
 1679 0032 C046     		.align	2
 1680              	.L128:
 1681 0034 00000000 		.word	.LANCHOR0
 1682 0038 006CDC02 		.word	48000000
 1683 003c 3F420F00 		.word	999999
 1684 0040 40420F00 		.word	1000000
 1685 0044 E7030000 		.word	999
 1686              		.cfi_endproc
 1687              	.LFE35:
 1688              		.size	CyDelayFreq, .-CyDelayFreq
 1689              		.section	.text.CySysTickInit,"ax",%progbits
 1690              		.align	1
 1691              		.global	CySysTickInit
 1692              		.code	16
 1693              		.thumb_func
 1694              		.type	CySysTickInit, %function
 1695              	CySysTickInit:
 1696              	.LFB37:
2611:Generated_Source\PSoC4/CyLib.c **** 
2612:Generated_Source\PSoC4/CyLib.c **** 
2613:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2614:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2615:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2618:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2619:Generated_Source\PSoC4/CyLib.c **** *
2620:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2621:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2622:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2623:Generated_Source\PSoC4/CyLib.c **** *
2624:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2625:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2626:Generated_Source\PSoC4/CyLib.c **** *
2627:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2628:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2629:Generated_Source\PSoC4/CyLib.c **** {
2630:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2631:Generated_Source\PSoC4/CyLib.c ****     {
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2633:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2634:Generated_Source\PSoC4/CyLib.c ****     }
2635:Generated_Source\PSoC4/CyLib.c **** 
2636:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2637:Generated_Source\PSoC4/CyLib.c **** }
2638:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 81


2639:Generated_Source\PSoC4/CyLib.c **** 
2640:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2641:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2642:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2643:Generated_Source\PSoC4/CyLib.c **** *
2644:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2645:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2646:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2647:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2648:Generated_Source\PSoC4/CyLib.c **** *
2649:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2650:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2651:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2652:Generated_Source\PSoC4/CyLib.c **** *
2653:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2654:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2655:Generated_Source\PSoC4/CyLib.c **** *
2656:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2657:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2658:Generated_Source\PSoC4/CyLib.c **** {
 1697              		.loc 1 2658 0
 1698              		.cfi_startproc
 1699              	.LVL125:
 1700 0000 10B5     		push	{r4, lr}
 1701              		.cfi_def_cfa_offset 8
 1702              		.cfi_offset 4, -8
 1703              		.cfi_offset 14, -4
2659:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2660:Generated_Source\PSoC4/CyLib.c **** 
2661:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2662:Generated_Source\PSoC4/CyLib.c ****     {
2663:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1704              		.loc 1 2663 0
 1705 0002 0024     		mov	r4, #0
 1706              	.LBB68:
 1707              	.LBB69:
 1708              	.LBB70:
2664:Generated_Source\PSoC4/CyLib.c ****     }
2665:Generated_Source\PSoC4/CyLib.c **** 
2666:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2667:Generated_Source\PSoC4/CyLib.c **** 
2668:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2669:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2670:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2671:Generated_Source\PSoC4/CyLib.c **** 
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2673:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2674:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2675:Generated_Source\PSoC4/CyLib.c **** }
2676:Generated_Source\PSoC4/CyLib.c **** 
2677:Generated_Source\PSoC4/CyLib.c **** 
2678:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2679:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2680:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2681:Generated_Source\PSoC4/CyLib.c **** *
2682:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2683:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 82


2684:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2685:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2688:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2689:Generated_Source\PSoC4/CyLib.c **** {
2690:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2691:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2692:Generated_Source\PSoC4/CyLib.c **** }
2693:Generated_Source\PSoC4/CyLib.c **** 
2694:Generated_Source\PSoC4/CyLib.c **** 
2695:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2696:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2697:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2698:Generated_Source\PSoC4/CyLib.c **** *
2699:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2700:Generated_Source\PSoC4/CyLib.c **** *
2701:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2702:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2703:Generated_Source\PSoC4/CyLib.c **** *
2704:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2705:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2706:Generated_Source\PSoC4/CyLib.c **** {
2707:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2708:Generated_Source\PSoC4/CyLib.c **** }
2709:Generated_Source\PSoC4/CyLib.c **** 
2710:Generated_Source\PSoC4/CyLib.c **** 
2711:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2712:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2713:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2714:Generated_Source\PSoC4/CyLib.c **** *
2715:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2716:Generated_Source\PSoC4/CyLib.c **** *
2717:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2718:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2719:Generated_Source\PSoC4/CyLib.c **** *
2720:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2721:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2722:Generated_Source\PSoC4/CyLib.c **** {
2723:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2724:Generated_Source\PSoC4/CyLib.c **** }
2725:Generated_Source\PSoC4/CyLib.c **** 
2726:Generated_Source\PSoC4/CyLib.c **** 
2727:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2728:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2729:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2732:Generated_Source\PSoC4/CyLib.c **** *
2733:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2734:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2735:Generated_Source\PSoC4/CyLib.c **** *
2736:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2737:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2738:Generated_Source\PSoC4/CyLib.c **** {
2739:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2740:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 83


2741:Generated_Source\PSoC4/CyLib.c **** 
2742:Generated_Source\PSoC4/CyLib.c **** 
2743:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2744:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2745:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2746:Generated_Source\PSoC4/CyLib.c **** *
2747:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2748:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2749:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2750:Generated_Source\PSoC4/CyLib.c **** *
2751:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2752:Generated_Source\PSoC4/CyLib.c **** *
2753:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2754:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2755:Generated_Source\PSoC4/CyLib.c **** {
2756:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2757:Generated_Source\PSoC4/CyLib.c **** }
2758:Generated_Source\PSoC4/CyLib.c **** 
2759:Generated_Source\PSoC4/CyLib.c **** 
2760:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2761:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2762:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2763:Generated_Source\PSoC4/CyLib.c **** *
2764:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2765:Generated_Source\PSoC4/CyLib.c **** *
2766:Generated_Source\PSoC4/CyLib.c **** * \return
2767:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** * \return
2783:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2784:Generated_Source\PSoC4/CyLib.c **** *
2785:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2786:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2787:Generated_Source\PSoC4/CyLib.c **** {
2788:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2789:Generated_Source\PSoC4/CyLib.c **** }
2790:Generated_Source\PSoC4/CyLib.c **** 
2791:Generated_Source\PSoC4/CyLib.c **** 
2792:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2793:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2794:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2795:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2796:Generated_Source\PSoC4/CyLib.c ****     *
2797:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 84


2798:Generated_Source\PSoC4/CyLib.c ****     *
2799:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2800:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2801:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2802:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2803:Generated_Source\PSoC4/CyLib.c ****     *
2804:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2805:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2806:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2807:Generated_Source\PSoC4/CyLib.c ****     *
2808:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2809:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2810:Generated_Source\PSoC4/CyLib.c ****     *
2811:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2812:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2813:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by the CPU clock.
2814:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2815:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2816:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2817:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2818:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2819:Generated_Source\PSoC4/CyLib.c ****     {
2820:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2821:Generated_Source\PSoC4/CyLib.c ****         {
2822:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1709              		.loc 1 2822 0
 1710 0004 0421     		mov	r1, #4
 1711              	.LBE70:
 1712              	.LBE69:
 1713              	.LBE68:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1714              		.loc 1 2663 0
 1715 0006 0E4B     		ldr	r3, .L131
 1716              	.LBB75:
 1717              	.LBB76:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1718              		.loc 1 2290 0
 1719 0008 0E4A     		ldr	r2, .L131+4
 1720              	.LBE76:
 1721              	.LBE75:
2663:Generated_Source\PSoC4/CyLib.c ****     }
 1722              		.loc 1 2663 0
 1723 000a 1C60     		str	r4, [r3]
 1724              	.LVL126:
 1725 000c 1C61     		str	r4, [r3, #16]
 1726 000e 5C60     		str	r4, [r3, #4]
 1727              	.LVL127:
 1728 0010 9C60     		str	r4, [r3, #8]
 1729              	.LVL128:
 1730 0012 DC60     		str	r4, [r3, #12]
 1731              	.LVL129:
 1732              	.LBB79:
 1733              	.LBB77:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1734              		.loc 1 2290 0
 1735 0014 0C4B     		ldr	r3, .L131+8
 1736              	.LVL130:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 85


 1737              	.LBE77:
 1738              	.LBE79:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1739              		.loc 1 2675 0
 1740              		@ sp needed
 1741              	.LBB80:
 1742              	.LBB78:
2290:Generated_Source\PSoC4/CyLib.c **** 
 1743              		.loc 1 2290 0
 1744 0016 1A60     		str	r2, [r3]
 1745              	.LVL131:
 1746              	.LBE78:
 1747              	.LBE80:
 1748              	.LBB81:
 1749              	.LBB73:
 1750              	.LBB71:
 1751              		.loc 1 2822 0
 1752 0018 0C4A     		ldr	r2, .L131+12
 1753 001a 1368     		ldr	r3, [r2]
 1754 001c 0B43     		orr	r3, r1
 1755              	.LBE71:
 1756              	.LBE73:
 1757              	.LBE81:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1758              		.loc 1 2672 0
 1759 001e FA21     		mov	r1, #250
 1760              	.LBB82:
 1761              	.LBB74:
 1762              	.LBB72:
 1763              		.loc 1 2822 0
 1764 0020 1360     		str	r3, [r2]
 1765              	.LBE72:
 1766              	.LBE74:
 1767              	.LBE82:
2672:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1768              		.loc 1 2672 0
 1769 0022 0B4B     		ldr	r3, .L131+16
 1770 0024 8900     		lsl	r1, r1, #2
 1771 0026 1869     		ldr	r0, [r3, #16]
 1772 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1773              	.LVL132:
 1774              	.LBB83:
 1775              	.LBB84:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1776              		.loc 1 2439 0
 1777 002c 8022     		mov	r2, #128
 1778              	.LBE84:
 1779              	.LBE83:
 1780              	.LBB87:
 1781              	.LBB88:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1782              		.loc 1 2756 0
 1783 002e 094B     		ldr	r3, .L131+20
 1784              	.LBE88:
 1785              	.LBE87:
 1786              	.LBB90:
 1787              	.LBB85:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 86


2439:Generated_Source\PSoC4/CyLib.c **** }
 1788              		.loc 1 2439 0
 1789 0030 1202     		lsl	r2, r2, #8
 1790              	.LBE85:
 1791              	.LBE90:
 1792              	.LBB91:
 1793              	.LBB89:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1794              		.loc 1 2756 0
 1795 0032 1860     		str	r0, [r3]
 1796              	.LBE89:
 1797              	.LBE91:
 1798              	.LBB92:
 1799              	.LBB93:
2823:Generated_Source\PSoC4/CyLib.c ****         }
2824:Generated_Source\PSoC4/CyLib.c ****         else
2825:Generated_Source\PSoC4/CyLib.c ****         {
2826:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2827:Generated_Source\PSoC4/CyLib.c ****         }
2828:Generated_Source\PSoC4/CyLib.c ****     }
2829:Generated_Source\PSoC4/CyLib.c **** 
2830:Generated_Source\PSoC4/CyLib.c ****     
2831:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2832:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickGetClockSource
2833:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2834:Generated_Source\PSoC4/CyLib.c ****     *
2835:Generated_Source\PSoC4/CyLib.c ****     *  Returns the current clock source of the SysTick counter.
2836:Generated_Source\PSoC4/CyLib.c ****     *
2837:Generated_Source\PSoC4/CyLib.c ****     *  \return 
2838:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2839:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2840:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2841:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2842:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2843:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysTickGetClockSource(void)
2844:Generated_Source\PSoC4/CyLib.c ****     {
2845:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
2846:Generated_Source\PSoC4/CyLib.c ****     }
2847:Generated_Source\PSoC4/CyLib.c ****     
2848:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2849:Generated_Source\PSoC4/CyLib.c **** 
2850:Generated_Source\PSoC4/CyLib.c **** 
2851:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2852:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2853:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2854:Generated_Source\PSoC4/CyLib.c **** *
2855:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
2856:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2857:Generated_Source\PSoC4/CyLib.c **** *
2858:Generated_Source\PSoC4/CyLib.c **** * \return
2859:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2860:Generated_Source\PSoC4/CyLib.c **** *
2861:Generated_Source\PSoC4/CyLib.c **** *
2862:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2863:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2864:Generated_Source\PSoC4/CyLib.c **** *
2865:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 87


2866:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2867:Generated_Source\PSoC4/CyLib.c **** {
2868:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2869:Generated_Source\PSoC4/CyLib.c **** }
2870:Generated_Source\PSoC4/CyLib.c **** 
2871:Generated_Source\PSoC4/CyLib.c **** 
2872:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2873:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2874:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2875:Generated_Source\PSoC4/CyLib.c **** *
2876:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2877:Generated_Source\PSoC4/CyLib.c **** *
2878:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2879:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2880:Generated_Source\PSoC4/CyLib.c **** {
2881:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1800              		.loc 1 2881 0
 1801 0034 084B     		ldr	r3, .L131+24
 1802 0036 1C60     		str	r4, [r3]
 1803              	.LVL133:
 1804              	.LBE93:
 1805              	.LBE92:
 1806              	.LBB94:
 1807              	.LBB86:
2439:Generated_Source\PSoC4/CyLib.c **** }
 1808              		.loc 1 2439 0
 1809 0038 084B     		ldr	r3, .L131+28
 1810 003a 1A60     		str	r2, [r3]
 1811              	.LBE86:
 1812              	.LBE94:
2675:Generated_Source\PSoC4/CyLib.c **** 
 1813              		.loc 1 2675 0
 1814 003c 10BD     		pop	{r4, pc}
 1815              	.L132:
 1816 003e C046     		.align	2
 1817              	.L131:
 1818 0040 00000000 		.word	.LANCHOR2
 1819 0044 00000000 		.word	CySysTickServiceCallbacks
 1820 0048 3C000020 		.word	536870972
 1821 004c 10E000E0 		.word	-536813552
 1822 0050 00000000 		.word	.LANCHOR0
 1823 0054 14E000E0 		.word	-536813548
 1824 0058 18E000E0 		.word	-536813544
 1825 005c 00E100E0 		.word	-536813312
 1826              		.cfi_endproc
 1827              	.LFE37:
 1828              		.size	CySysTickInit, .-CySysTickInit
 1829              		.section	.text.CySysTickStop,"ax",%progbits
 1830              		.align	1
 1831              		.global	CySysTickStop
 1832              		.code	16
 1833              		.thumb_func
 1834              		.type	CySysTickStop, %function
 1835              	CySysTickStop:
 1836              	.LFB39:
2706:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1837              		.loc 1 2706 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 88


 1838              		.cfi_startproc
2707:Generated_Source\PSoC4/CyLib.c **** }
 1839              		.loc 1 2707 0
 1840 0000 0121     		mov	r1, #1
 1841 0002 024A     		ldr	r2, .L134
2708:Generated_Source\PSoC4/CyLib.c **** 
 1842              		.loc 1 2708 0
 1843              		@ sp needed
2707:Generated_Source\PSoC4/CyLib.c **** }
 1844              		.loc 1 2707 0
 1845 0004 1368     		ldr	r3, [r2]
 1846 0006 8B43     		bic	r3, r1
 1847 0008 1360     		str	r3, [r2]
2708:Generated_Source\PSoC4/CyLib.c **** 
 1848              		.loc 1 2708 0
 1849 000a 7047     		bx	lr
 1850              	.L135:
 1851              		.align	2
 1852              	.L134:
 1853 000c 10E000E0 		.word	-536813552
 1854              		.cfi_endproc
 1855              	.LFE39:
 1856              		.size	CySysTickStop, .-CySysTickStop
 1857              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1858              		.align	1
 1859              		.global	CySysTickEnableInterrupt
 1860              		.code	16
 1861              		.thumb_func
 1862              		.type	CySysTickEnableInterrupt, %function
 1863              	CySysTickEnableInterrupt:
 1864              	.LFB40:
2722:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1865              		.loc 1 2722 0
 1866              		.cfi_startproc
2723:Generated_Source\PSoC4/CyLib.c **** }
 1867              		.loc 1 2723 0
 1868 0000 0221     		mov	r1, #2
 1869 0002 024A     		ldr	r2, .L137
2724:Generated_Source\PSoC4/CyLib.c **** 
 1870              		.loc 1 2724 0
 1871              		@ sp needed
2723:Generated_Source\PSoC4/CyLib.c **** }
 1872              		.loc 1 2723 0
 1873 0004 1368     		ldr	r3, [r2]
 1874 0006 0B43     		orr	r3, r1
 1875 0008 1360     		str	r3, [r2]
2724:Generated_Source\PSoC4/CyLib.c **** 
 1876              		.loc 1 2724 0
 1877 000a 7047     		bx	lr
 1878              	.L138:
 1879              		.align	2
 1880              	.L137:
 1881 000c 10E000E0 		.word	-536813552
 1882              		.cfi_endproc
 1883              	.LFE40:
 1884              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1885              		.section	.text.CySysTickEnable,"ax",%progbits
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 89


 1886              		.align	1
 1887              		.global	CySysTickEnable
 1888              		.code	16
 1889              		.thumb_func
 1890              		.type	CySysTickEnable, %function
 1891              	CySysTickEnable:
 1892              	.LFB38:
2689:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1893              		.loc 1 2689 0
 1894              		.cfi_startproc
 1895 0000 08B5     		push	{r3, lr}
 1896              		.cfi_def_cfa_offset 8
 1897              		.cfi_offset 3, -8
 1898              		.cfi_offset 14, -4
2690:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1899              		.loc 1 2690 0
 1900 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1901              	.LVL134:
2691:Generated_Source\PSoC4/CyLib.c **** }
 1902              		.loc 1 2691 0
 1903 0006 0121     		mov	r1, #1
 1904 0008 024A     		ldr	r2, .L140
2692:Generated_Source\PSoC4/CyLib.c **** 
 1905              		.loc 1 2692 0
 1906              		@ sp needed
2691:Generated_Source\PSoC4/CyLib.c **** }
 1907              		.loc 1 2691 0
 1908 000a 1368     		ldr	r3, [r2]
 1909 000c 0B43     		orr	r3, r1
 1910 000e 1360     		str	r3, [r2]
2692:Generated_Source\PSoC4/CyLib.c **** 
 1911              		.loc 1 2692 0
 1912 0010 08BD     		pop	{r3, pc}
 1913              	.L141:
 1914 0012 C046     		.align	2
 1915              	.L140:
 1916 0014 10E000E0 		.word	-536813552
 1917              		.cfi_endproc
 1918              	.LFE38:
 1919              		.size	CySysTickEnable, .-CySysTickEnable
 1920              		.section	.text.CySysTickStart,"ax",%progbits
 1921              		.align	1
 1922              		.global	CySysTickStart
 1923              		.code	16
 1924              		.thumb_func
 1925              		.type	CySysTickStart, %function
 1926              	CySysTickStart:
 1927              	.LFB36:
2629:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1928              		.loc 1 2629 0
 1929              		.cfi_startproc
 1930 0000 10B5     		push	{r4, lr}
 1931              		.cfi_def_cfa_offset 8
 1932              		.cfi_offset 4, -8
 1933              		.cfi_offset 14, -4
2630:Generated_Source\PSoC4/CyLib.c ****     {
 1934              		.loc 1 2630 0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 90


 1935 0002 054C     		ldr	r4, .L144
 1936 0004 6369     		ldr	r3, [r4, #20]
 1937 0006 002B     		cmp	r3, #0
 1938 0008 03D1     		bne	.L143
2632:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1939              		.loc 1 2632 0
 1940 000a FFF7FEFF 		bl	CySysTickInit
 1941              	.LVL135:
2633:Generated_Source\PSoC4/CyLib.c ****     }
 1942              		.loc 1 2633 0
 1943 000e 0123     		mov	r3, #1
 1944 0010 6361     		str	r3, [r4, #20]
 1945              	.L143:
2636:Generated_Source\PSoC4/CyLib.c **** }
 1946              		.loc 1 2636 0
 1947 0012 FFF7FEFF 		bl	CySysTickEnable
 1948              	.LVL136:
2637:Generated_Source\PSoC4/CyLib.c **** 
 1949              		.loc 1 2637 0
 1950              		@ sp needed
 1951 0016 10BD     		pop	{r4, pc}
 1952              	.L145:
 1953              		.align	2
 1954              	.L144:
 1955 0018 00000000 		.word	.LANCHOR2
 1956              		.cfi_endproc
 1957              	.LFE36:
 1958              		.size	CySysTickStart, .-CySysTickStart
 1959              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1960              		.align	1
 1961              		.global	CySysTickDisableInterrupt
 1962              		.code	16
 1963              		.thumb_func
 1964              		.type	CySysTickDisableInterrupt, %function
 1965              	CySysTickDisableInterrupt:
 1966              	.LFB41:
2738:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1967              		.loc 1 2738 0
 1968              		.cfi_startproc
2739:Generated_Source\PSoC4/CyLib.c **** }
 1969              		.loc 1 2739 0
 1970 0000 0221     		mov	r1, #2
 1971 0002 024A     		ldr	r2, .L147
2740:Generated_Source\PSoC4/CyLib.c **** 
 1972              		.loc 1 2740 0
 1973              		@ sp needed
2739:Generated_Source\PSoC4/CyLib.c **** }
 1974              		.loc 1 2739 0
 1975 0004 1368     		ldr	r3, [r2]
 1976 0006 8B43     		bic	r3, r1
 1977 0008 1360     		str	r3, [r2]
2740:Generated_Source\PSoC4/CyLib.c **** 
 1978              		.loc 1 2740 0
 1979 000a 7047     		bx	lr
 1980              	.L148:
 1981              		.align	2
 1982              	.L147:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 91


 1983 000c 10E000E0 		.word	-536813552
 1984              		.cfi_endproc
 1985              	.LFE41:
 1986              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1987              		.section	.text.CySysTickSetReload,"ax",%progbits
 1988              		.align	1
 1989              		.global	CySysTickSetReload
 1990              		.code	16
 1991              		.thumb_func
 1992              		.type	CySysTickSetReload, %function
 1993              	CySysTickSetReload:
 1994              	.LFB42:
2755:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1995              		.loc 1 2755 0
 1996              		.cfi_startproc
 1997              	.LVL137:
2756:Generated_Source\PSoC4/CyLib.c **** }
 1998              		.loc 1 2756 0
 1999 0000 024B     		ldr	r3, .L150
 2000 0002 0002     		lsl	r0, r0, #8
 2001              	.LVL138:
 2002 0004 000A     		lsr	r0, r0, #8
 2003 0006 1860     		str	r0, [r3]
2757:Generated_Source\PSoC4/CyLib.c **** 
 2004              		.loc 1 2757 0
 2005              		@ sp needed
 2006 0008 7047     		bx	lr
 2007              	.L151:
 2008 000a C046     		.align	2
 2009              	.L150:
 2010 000c 14E000E0 		.word	-536813548
 2011              		.cfi_endproc
 2012              	.LFE42:
 2013              		.size	CySysTickSetReload, .-CySysTickSetReload
 2014              		.section	.text.CySysTickGetReload,"ax",%progbits
 2015              		.align	1
 2016              		.global	CySysTickGetReload
 2017              		.code	16
 2018              		.thumb_func
 2019              		.type	CySysTickGetReload, %function
 2020              	CySysTickGetReload:
 2021              	.LFB43:
2771:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 2022              		.loc 1 2771 0
 2023              		.cfi_startproc
2772:Generated_Source\PSoC4/CyLib.c **** }
 2024              		.loc 1 2772 0
 2025 0000 024B     		ldr	r3, .L153
2773:Generated_Source\PSoC4/CyLib.c **** 
 2026              		.loc 1 2773 0
 2027              		@ sp needed
2772:Generated_Source\PSoC4/CyLib.c **** }
 2028              		.loc 1 2772 0
 2029 0002 1868     		ldr	r0, [r3]
 2030 0004 0002     		lsl	r0, r0, #8
 2031 0006 000A     		lsr	r0, r0, #8
2773:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 92


 2032              		.loc 1 2773 0
 2033 0008 7047     		bx	lr
 2034              	.L154:
 2035 000a C046     		.align	2
 2036              	.L153:
 2037 000c 14E000E0 		.word	-536813548
 2038              		.cfi_endproc
 2039              	.LFE43:
 2040              		.size	CySysTickGetReload, .-CySysTickGetReload
 2041              		.section	.text.CySysTickGetValue,"ax",%progbits
 2042              		.align	1
 2043              		.global	CySysTickGetValue
 2044              		.code	16
 2045              		.thumb_func
 2046              		.type	CySysTickGetValue, %function
 2047              	CySysTickGetValue:
 2048              	.LFB44:
2787:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 2049              		.loc 1 2787 0
 2050              		.cfi_startproc
2788:Generated_Source\PSoC4/CyLib.c **** }
 2051              		.loc 1 2788 0
 2052 0000 024B     		ldr	r3, .L156
2789:Generated_Source\PSoC4/CyLib.c **** 
 2053              		.loc 1 2789 0
 2054              		@ sp needed
2788:Generated_Source\PSoC4/CyLib.c **** }
 2055              		.loc 1 2788 0
 2056 0002 1868     		ldr	r0, [r3]
 2057 0004 0002     		lsl	r0, r0, #8
 2058 0006 000A     		lsr	r0, r0, #8
2789:Generated_Source\PSoC4/CyLib.c **** 
 2059              		.loc 1 2789 0
 2060 0008 7047     		bx	lr
 2061              	.L157:
 2062 000a C046     		.align	2
 2063              	.L156:
 2064 000c 18E000E0 		.word	-536813544
 2065              		.cfi_endproc
 2066              	.LFE44:
 2067              		.size	CySysTickGetValue, .-CySysTickGetValue
 2068              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2069              		.align	1
 2070              		.global	CySysTickSetClockSource
 2071              		.code	16
 2072              		.thumb_func
 2073              		.type	CySysTickSetClockSource, %function
 2074              	CySysTickSetClockSource:
 2075              	.LFB45:
2819:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2076              		.loc 1 2819 0
 2077              		.cfi_startproc
 2078              	.LVL139:
 2079 0000 044B     		ldr	r3, .L162
 2080 0002 0421     		mov	r1, #4
 2081              	.LBB97:
 2082              	.LBB98:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 93


2822:Generated_Source\PSoC4/CyLib.c ****         }
 2083              		.loc 1 2822 0
 2084 0004 1A68     		ldr	r2, [r3]
 2085              	.LBE98:
 2086              	.LBE97:
2820:Generated_Source\PSoC4/CyLib.c ****         {
 2087              		.loc 1 2820 0
 2088 0006 0128     		cmp	r0, #1
 2089 0008 01D1     		bne	.L159
 2090              	.LVL140:
 2091              	.LBB100:
 2092              	.LBB99:
2822:Generated_Source\PSoC4/CyLib.c ****         }
 2093              		.loc 1 2822 0
 2094 000a 0A43     		orr	r2, r1
 2095 000c 00E0     		b	.L161
 2096              	.LVL141:
 2097              	.L159:
 2098              	.LBE99:
 2099              	.LBE100:
2826:Generated_Source\PSoC4/CyLib.c ****         }
 2100              		.loc 1 2826 0
 2101 000e 8A43     		bic	r2, r1
 2102              	.L161:
 2103 0010 1A60     		str	r2, [r3]
2828:Generated_Source\PSoC4/CyLib.c **** 
 2104              		.loc 1 2828 0
 2105              		@ sp needed
 2106 0012 7047     		bx	lr
 2107              	.L163:
 2108              		.align	2
 2109              	.L162:
 2110 0014 10E000E0 		.word	-536813552
 2111              		.cfi_endproc
 2112              	.LFE45:
 2113              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2114              		.section	.text.CySysTickGetClockSource,"ax",%progbits
 2115              		.align	1
 2116              		.global	CySysTickGetClockSource
 2117              		.code	16
 2118              		.thumb_func
 2119              		.type	CySysTickGetClockSource, %function
 2120              	CySysTickGetClockSource:
 2121              	.LFB46:
2844:Generated_Source\PSoC4/CyLib.c ****         return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_CLK_SOURCE_SHIFT) & CY_SYS_SYST_CSR_CLK_SRC
 2122              		.loc 1 2844 0
 2123              		.cfi_startproc
2845:Generated_Source\PSoC4/CyLib.c ****     }
 2124              		.loc 1 2845 0
 2125 0000 024B     		ldr	r3, .L165
2846:Generated_Source\PSoC4/CyLib.c ****     
 2126              		.loc 1 2846 0
 2127              		@ sp needed
2845:Generated_Source\PSoC4/CyLib.c ****     }
 2128              		.loc 1 2845 0
 2129 0002 1868     		ldr	r0, [r3]
 2130 0004 4007     		lsl	r0, r0, #29
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 94


 2131 0006 C00F     		lsr	r0, r0, #31
2846:Generated_Source\PSoC4/CyLib.c ****     
 2132              		.loc 1 2846 0
 2133 0008 7047     		bx	lr
 2134              	.L166:
 2135 000a C046     		.align	2
 2136              	.L165:
 2137 000c 10E000E0 		.word	-536813552
 2138              		.cfi_endproc
 2139              	.LFE46:
 2140              		.size	CySysTickGetClockSource, .-CySysTickGetClockSource
 2141              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2142              		.align	1
 2143              		.global	CySysTickGetCountFlag
 2144              		.code	16
 2145              		.thumb_func
 2146              		.type	CySysTickGetCountFlag, %function
 2147              	CySysTickGetCountFlag:
 2148              	.LFB47:
2867:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG >> CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2149              		.loc 1 2867 0
 2150              		.cfi_startproc
2868:Generated_Source\PSoC4/CyLib.c **** }
 2151              		.loc 1 2868 0
 2152 0000 024B     		ldr	r3, .L168
2869:Generated_Source\PSoC4/CyLib.c **** 
 2153              		.loc 1 2869 0
 2154              		@ sp needed
2868:Generated_Source\PSoC4/CyLib.c **** }
 2155              		.loc 1 2868 0
 2156 0002 1868     		ldr	r0, [r3]
 2157 0004 C003     		lsl	r0, r0, #15
 2158 0006 C00F     		lsr	r0, r0, #31
2869:Generated_Source\PSoC4/CyLib.c **** 
 2159              		.loc 1 2869 0
 2160 0008 7047     		bx	lr
 2161              	.L169:
 2162 000a C046     		.align	2
 2163              	.L168:
 2164 000c 10E000E0 		.word	-536813552
 2165              		.cfi_endproc
 2166              	.LFE47:
 2167              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2168              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2169              		.align	1
 2170              		.code	16
 2171              		.thumb_func
 2172              		.type	CySysTickServiceCallbacks, %function
 2173              	CySysTickServiceCallbacks:
 2174              	.LFB51:
2882:Generated_Source\PSoC4/CyLib.c **** }
2883:Generated_Source\PSoC4/CyLib.c **** 
2884:Generated_Source\PSoC4/CyLib.c **** 
2885:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2886:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2887:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2888:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 95


2889:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2890:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2891:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2892:Generated_Source\PSoC4/CyLib.c **** *
2893:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2894:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2895:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2896:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2897:Generated_Source\PSoC4/CyLib.c **** *  functions.
2898:Generated_Source\PSoC4/CyLib.c **** *
2899:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2900:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2901:Generated_Source\PSoC4/CyLib.c **** *
2902:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2903:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2904:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2905:Generated_Source\PSoC4/CyLib.c **** *
2906:Generated_Source\PSoC4/CyLib.c **** * \return
2907:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2908:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2909:Generated_Source\PSoC4/CyLib.c **** *
2910:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2911:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2912:Generated_Source\PSoC4/CyLib.c **** *
2913:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2914:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2915:Generated_Source\PSoC4/CyLib.c **** {
2916:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2917:Generated_Source\PSoC4/CyLib.c **** 
2918:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2919:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2920:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2921:Generated_Source\PSoC4/CyLib.c **** }
2922:Generated_Source\PSoC4/CyLib.c **** 
2923:Generated_Source\PSoC4/CyLib.c **** 
2924:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2925:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2926:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2927:Generated_Source\PSoC4/CyLib.c **** *
2928:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2929:Generated_Source\PSoC4/CyLib.c **** *
2930:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2931:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2932:Generated_Source\PSoC4/CyLib.c **** *
2933:Generated_Source\PSoC4/CyLib.c **** * \return
2934:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2935:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2936:Generated_Source\PSoC4/CyLib.c **** *
2937:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2938:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2939:Generated_Source\PSoC4/CyLib.c **** {
2940:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2941:Generated_Source\PSoC4/CyLib.c **** }
2942:Generated_Source\PSoC4/CyLib.c **** 
2943:Generated_Source\PSoC4/CyLib.c **** 
2944:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2945:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 96


2946:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2947:Generated_Source\PSoC4/CyLib.c **** *
2948:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2949:Generated_Source\PSoC4/CyLib.c **** *
2950:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2951:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2952:Generated_Source\PSoC4/CyLib.c **** {
 2175              		.loc 1 2952 0
 2176              		.cfi_startproc
 2177 0000 10B5     		push	{r4, lr}
 2178              		.cfi_def_cfa_offset 8
 2179              		.cfi_offset 4, -8
 2180              		.cfi_offset 14, -4
2953:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2954:Generated_Source\PSoC4/CyLib.c **** 
2955:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2956:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2181              		.loc 1 2956 0
 2182 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2183              	.LVL142:
 2184 0006 0128     		cmp	r0, #1
 2185 0008 08D1     		bne	.L170
 2186 000a 0024     		mov	r4, #0
 2187              	.L171:
 2188              	.LBB103:
2957:Generated_Source\PSoC4/CyLib.c ****     {
2958:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2959:Generated_Source\PSoC4/CyLib.c ****         {
2960:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2189              		.loc 1 2960 0
 2190 000c 044B     		ldr	r3, .L178
 2191 000e E358     		ldr	r3, [r4, r3]
 2192 0010 002B     		cmp	r3, #0
 2193 0012 00D0     		beq	.L172
2961:Generated_Source\PSoC4/CyLib.c ****             {
2962:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2194              		.loc 1 2962 0
 2195 0014 9847     		blx	r3
 2196              	.LVL143:
 2197              	.L172:
 2198 0016 0434     		add	r4, r4, #4
2958:Generated_Source\PSoC4/CyLib.c ****         {
 2199              		.loc 1 2958 0
 2200 0018 142C     		cmp	r4, #20
 2201 001a F7D1     		bne	.L171
 2202              	.L170:
 2203              	.LBE103:
2963:Generated_Source\PSoC4/CyLib.c ****             }
2964:Generated_Source\PSoC4/CyLib.c ****         }
2965:Generated_Source\PSoC4/CyLib.c ****     }
2966:Generated_Source\PSoC4/CyLib.c **** }
 2204              		.loc 1 2966 0
 2205              		@ sp needed
 2206 001c 10BD     		pop	{r4, pc}
 2207              	.L179:
 2208 001e C046     		.align	2
 2209              	.L178:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 97


 2210 0020 00000000 		.word	.LANCHOR2
 2211              		.cfi_endproc
 2212              	.LFE51:
 2213              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2214              		.section	.text.CySysTickClear,"ax",%progbits
 2215              		.align	1
 2216              		.global	CySysTickClear
 2217              		.code	16
 2218              		.thumb_func
 2219              		.type	CySysTickClear, %function
 2220              	CySysTickClear:
 2221              	.LFB48:
2880:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2222              		.loc 1 2880 0
 2223              		.cfi_startproc
2881:Generated_Source\PSoC4/CyLib.c **** }
 2224              		.loc 1 2881 0
 2225 0000 0022     		mov	r2, #0
 2226 0002 014B     		ldr	r3, .L181
2882:Generated_Source\PSoC4/CyLib.c **** 
 2227              		.loc 1 2882 0
 2228              		@ sp needed
2881:Generated_Source\PSoC4/CyLib.c **** }
 2229              		.loc 1 2881 0
 2230 0004 1A60     		str	r2, [r3]
2882:Generated_Source\PSoC4/CyLib.c **** 
 2231              		.loc 1 2882 0
 2232 0006 7047     		bx	lr
 2233              	.L182:
 2234              		.align	2
 2235              	.L181:
 2236 0008 18E000E0 		.word	-536813544
 2237              		.cfi_endproc
 2238              	.LFE48:
 2239              		.size	CySysTickClear, .-CySysTickClear
 2240              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2241              		.align	1
 2242              		.global	CySysTickSetCallback
 2243              		.code	16
 2244              		.thumb_func
 2245              		.type	CySysTickSetCallback, %function
 2246              	CySysTickSetCallback:
 2247              	.LFB49:
2915:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2248              		.loc 1 2915 0
 2249              		.cfi_startproc
 2250              	.LVL144:
2918:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2251              		.loc 1 2918 0
 2252 0000 024A     		ldr	r2, .L184
 2253 0002 8300     		lsl	r3, r0, #2
 2254 0004 9858     		ldr	r0, [r3, r2]
 2255              	.LVL145:
2921:Generated_Source\PSoC4/CyLib.c **** 
 2256              		.loc 1 2921 0
 2257              		@ sp needed
2919:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 98


 2258              		.loc 1 2919 0
 2259 0006 9950     		str	r1, [r3, r2]
2921:Generated_Source\PSoC4/CyLib.c **** 
 2260              		.loc 1 2921 0
 2261 0008 7047     		bx	lr
 2262              	.L185:
 2263 000a C046     		.align	2
 2264              	.L184:
 2265 000c 00000000 		.word	.LANCHOR2
 2266              		.cfi_endproc
 2267              	.LFE49:
 2268              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2269              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2270              		.align	1
 2271              		.global	CySysTickGetCallback
 2272              		.code	16
 2273              		.thumb_func
 2274              		.type	CySysTickGetCallback, %function
 2275              	CySysTickGetCallback:
 2276              	.LFB50:
2939:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2277              		.loc 1 2939 0
 2278              		.cfi_startproc
 2279              	.LVL146:
2940:Generated_Source\PSoC4/CyLib.c **** }
 2280              		.loc 1 2940 0
 2281 0000 014B     		ldr	r3, .L187
 2282 0002 8000     		lsl	r0, r0, #2
 2283              	.LVL147:
 2284 0004 C058     		ldr	r0, [r0, r3]
2941:Generated_Source\PSoC4/CyLib.c **** 
 2285              		.loc 1 2941 0
 2286              		@ sp needed
 2287 0006 7047     		bx	lr
 2288              	.L188:
 2289              		.align	2
 2290              	.L187:
 2291 0008 00000000 		.word	.LANCHOR2
 2292              		.cfi_endproc
 2293              	.LFE50:
 2294              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2295              		.section	.text.CyGetUniqueId,"ax",%progbits
 2296              		.align	1
 2297              		.global	CyGetUniqueId
 2298              		.code	16
 2299              		.thumb_func
 2300              		.type	CyGetUniqueId, %function
 2301              	CyGetUniqueId:
 2302              	.LFB52:
2967:Generated_Source\PSoC4/CyLib.c **** 
2968:Generated_Source\PSoC4/CyLib.c **** 
2969:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2970:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2971:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2972:Generated_Source\PSoC4/CyLib.c **** *
2973:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2974:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 99


2975:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2976:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2977:Generated_Source\PSoC4/CyLib.c **** *
2978:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2979:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2980:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2981:Generated_Source\PSoC4/CyLib.c **** *
2982:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2983:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2984:Generated_Source\PSoC4/CyLib.c **** {
 2303              		.loc 1 2984 0
 2304              		.cfi_startproc
 2305              	.LVL148:
2985:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2306              		.loc 1 2986 0
 2307 0000 134B     		ldr	r3, .L190
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2989:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2990:Generated_Source\PSoC4/CyLib.c **** 
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2994:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2995:Generated_Source\PSoC4/CyLib.c **** #else
2996:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2997:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2998:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2999:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
3000:Generated_Source\PSoC4/CyLib.c **** 
3001:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
3002:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
3003:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
3004:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
3005:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
3006:Generated_Source\PSoC4/CyLib.c **** }
 2308              		.loc 1 3006 0
 2309              		@ sp needed
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2310              		.loc 1 2986 0
 2311 0002 1B78     		ldrb	r3, [r3]
 2312 0004 DAB2     		uxtb	r2, r3
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2313              		.loc 1 2987 0
 2314 0006 134B     		ldr	r3, .L190+4
2986:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2315              		.loc 1 2986 0
 2316 0008 0260     		str	r2, [r0]
2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2317              		.loc 1 2987 0
 2318 000a 1B78     		ldrb	r3, [r3]
 2319 000c 1B02     		lsl	r3, r3, #8
 2320 000e 1343     		orr	r3, r2
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2321              		.loc 1 2988 0
 2322 0010 114A     		ldr	r2, .L190+8
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 100


2987:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2323              		.loc 1 2987 0
 2324 0012 0360     		str	r3, [r0]
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2325              		.loc 1 2988 0
 2326 0014 1278     		ldrb	r2, [r2]
 2327 0016 1204     		lsl	r2, r2, #16
 2328 0018 1343     		orr	r3, r2
2989:Generated_Source\PSoC4/CyLib.c **** 
 2329              		.loc 1 2989 0
 2330 001a 104A     		ldr	r2, .L190+12
2988:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2331              		.loc 1 2988 0
 2332 001c 0360     		str	r3, [r0]
2989:Generated_Source\PSoC4/CyLib.c **** 
 2333              		.loc 1 2989 0
 2334 001e 1278     		ldrb	r2, [r2]
 2335 0020 1206     		lsl	r2, r2, #24
 2336 0022 1343     		orr	r3, r2
 2337 0024 0360     		str	r3, [r0]
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2338              		.loc 1 2991 0
 2339 0026 0E4B     		ldr	r3, .L190+16
 2340 0028 1B78     		ldrb	r3, [r3]
 2341 002a DAB2     		uxtb	r2, r3
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2342              		.loc 1 2992 0
 2343 002c 0D4B     		ldr	r3, .L190+20
2991:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2344              		.loc 1 2991 0
 2345 002e 4260     		str	r2, [r0, #4]
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2346              		.loc 1 2992 0
 2347 0030 1B78     		ldrb	r3, [r3]
 2348 0032 1B02     		lsl	r3, r3, #8
 2349 0034 1343     		orr	r3, r2
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2350              		.loc 1 2993 0
 2351 0036 0C4A     		ldr	r2, .L190+24
2992:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2352              		.loc 1 2992 0
 2353 0038 4360     		str	r3, [r0, #4]
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2354              		.loc 1 2993 0
 2355 003a 1278     		ldrb	r2, [r2]
 2356 003c 1204     		lsl	r2, r2, #16
 2357 003e 1343     		orr	r3, r2
2994:Generated_Source\PSoC4/CyLib.c **** #else
 2358              		.loc 1 2994 0
 2359 0040 0A4A     		ldr	r2, .L190+28
2993:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2360              		.loc 1 2993 0
 2361 0042 4360     		str	r3, [r0, #4]
2994:Generated_Source\PSoC4/CyLib.c **** #else
 2362              		.loc 1 2994 0
 2363 0044 1278     		ldrb	r2, [r2]
 2364 0046 1206     		lsl	r2, r2, #24
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 101


 2365 0048 1343     		orr	r3, r2
 2366 004a 4360     		str	r3, [r0, #4]
 2367              		.loc 1 3006 0
 2368 004c 7047     		bx	lr
 2369              	.L191:
 2370 004e C046     		.align	2
 2371              	.L190:
 2372 0050 78F2FF0F 		.word	268431992
 2373 0054 79F2FF0F 		.word	268431993
 2374 0058 7AF2FF0F 		.word	268431994
 2375 005c 7BF2FF0F 		.word	268431995
 2376 0060 7CF2FF0F 		.word	268431996
 2377 0064 7DF2FF0F 		.word	268431997
 2378 0068 7EF2FF0F 		.word	268431998
 2379 006c 7FF2FF0F 		.word	268431999
 2380              		.cfi_endproc
 2381              	.LFE52:
 2382              		.size	CyGetUniqueId, .-CyGetUniqueId
 2383              		.global	CySysClkPumpConfig
 2384              		.global	cyImoFreqMhz2Reg
 2385              		.global	CySysTickInitVar
 2386              		.global	cydelay32kMs
 2387              		.global	cydelayFreqMhz
 2388              		.global	cydelayFreqKhz
 2389              		.global	cydelayFreqHz
 2390              		.section	.rodata
 2391              		.set	.LANCHOR1,. + 0
 2392              		.type	cyImoFreqMhz2Reg, %object
 2393              		.size	cyImoFreqMhz2Reg, 46
 2394              	cyImoFreqMhz2Reg:
 2395 0000 03       		.byte	3
 2396 0001 04       		.byte	4
 2397 0002 05       		.byte	5
 2398 0003 06       		.byte	6
 2399 0004 07       		.byte	7
 2400 0005 08       		.byte	8
 2401 0006 09       		.byte	9
 2402 0007 0A       		.byte	10
 2403 0008 0B       		.byte	11
 2404 0009 0C       		.byte	12
 2405 000a 0E       		.byte	14
 2406 000b 0F       		.byte	15
 2407 000c 10       		.byte	16
 2408 000d 11       		.byte	17
 2409 000e 12       		.byte	18
 2410 000f 13       		.byte	19
 2411 0010 14       		.byte	20
 2412 0011 15       		.byte	21
 2413 0012 16       		.byte	22
 2414 0013 17       		.byte	23
 2415 0014 18       		.byte	24
 2416 0015 19       		.byte	25
 2417 0016 1B       		.byte	27
 2418 0017 1C       		.byte	28
 2419 0018 1D       		.byte	29
 2420 0019 1E       		.byte	30
 2421 001a 1F       		.byte	31
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 102


 2422 001b 20       		.byte	32
 2423 001c 21       		.byte	33
 2424 001d 22       		.byte	34
 2425 001e 23       		.byte	35
 2426 001f 25       		.byte	37
 2427 0020 26       		.byte	38
 2428 0021 27       		.byte	39
 2429 0022 28       		.byte	40
 2430 0023 29       		.byte	41
 2431 0024 2A       		.byte	42
 2432 0025 2B       		.byte	43
 2433 0026 2E       		.byte	46
 2434 0027 2F       		.byte	47
 2435 0028 30       		.byte	48
 2436 0029 31       		.byte	49
 2437 002a 32       		.byte	50
 2438 002b 33       		.byte	51
 2439 002c 34       		.byte	52
 2440 002d 35       		.byte	53
 2441              		.data
 2442              		.align	2
 2443              		.set	.LANCHOR0,. + 0
 2444              		.type	CySysClkPumpConfig, %object
 2445              		.size	CySysClkPumpConfig, 4
 2446              	CySysClkPumpConfig:
 2447 0000 01000000 		.word	1
 2448              		.type	cydelay32kMs, %object
 2449              		.size	cydelay32kMs, 4
 2450              	cydelay32kMs:
 2451 0004 0000C05D 		.word	1572864000
 2452              		.type	cydelayFreqKhz, %object
 2453              		.size	cydelayFreqKhz, 4
 2454              	cydelayFreqKhz:
 2455 0008 80BB0000 		.word	48000
 2456              		.type	cydelayFreqMhz, %object
 2457              		.size	cydelayFreqMhz, 1
 2458              	cydelayFreqMhz:
 2459 000c 30       		.byte	48
 2460 000d 000000   		.space	3
 2461              		.type	cydelayFreqHz, %object
 2462              		.size	cydelayFreqHz, 4
 2463              	cydelayFreqHz:
 2464 0010 006CDC02 		.word	48000000
 2465              		.bss
 2466              		.align	2
 2467              		.set	.LANCHOR2,. + 0
 2468              		.type	CySysTickCallbacks, %object
 2469              		.size	CySysTickCallbacks, 20
 2470              	CySysTickCallbacks:
 2471 0000 00000000 		.space	20
 2471      00000000 
 2471      00000000 
 2471      00000000 
 2471      00000000 
 2472              		.type	CySysTickInitVar, %object
 2473              		.size	CySysTickInitVar, 4
 2474              	CySysTickInitVar:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 103


 2475 0014 00000000 		.space	4
 2476              		.text
 2477              	.Letext0:
 2478              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2479              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2480              		.section	.debug_info,"",%progbits
 2481              	.Ldebug_info0:
 2482 0000 BE0D0000 		.4byte	0xdbe
 2483 0004 0400     		.2byte	0x4
 2484 0006 00000000 		.4byte	.Ldebug_abbrev0
 2485 000a 04       		.byte	0x4
 2486 000b 01       		.uleb128 0x1
 2487 000c 1E000000 		.4byte	.LASF112
 2488 0010 01       		.byte	0x1
 2489 0011 3B070000 		.4byte	.LASF113
 2490 0015 3A010000 		.4byte	.LASF114
 2491 0019 A8000000 		.4byte	.Ldebug_ranges0+0xa8
 2492 001d 00000000 		.4byte	0
 2493 0021 00000000 		.4byte	.Ldebug_line0
 2494 0025 02       		.uleb128 0x2
 2495 0026 01       		.byte	0x1
 2496 0027 06       		.byte	0x6
 2497 0028 0A020000 		.4byte	.LASF0
 2498 002c 02       		.uleb128 0x2
 2499 002d 01       		.byte	0x1
 2500 002e 08       		.byte	0x8
 2501 002f 99050000 		.4byte	.LASF1
 2502 0033 02       		.uleb128 0x2
 2503 0034 02       		.byte	0x2
 2504 0035 05       		.byte	0x5
 2505 0036 A7050000 		.4byte	.LASF2
 2506 003a 02       		.uleb128 0x2
 2507 003b 02       		.byte	0x2
 2508 003c 07       		.byte	0x7
 2509 003d E4030000 		.4byte	.LASF3
 2510 0041 02       		.uleb128 0x2
 2511 0042 04       		.byte	0x4
 2512 0043 05       		.byte	0x5
 2513 0044 49020000 		.4byte	.LASF4
 2514 0048 02       		.uleb128 0x2
 2515 0049 04       		.byte	0x4
 2516 004a 07       		.byte	0x7
 2517 004b 6C030000 		.4byte	.LASF5
 2518 004f 02       		.uleb128 0x2
 2519 0050 08       		.byte	0x8
 2520 0051 05       		.byte	0x5
 2521 0052 FC010000 		.4byte	.LASF6
 2522 0056 02       		.uleb128 0x2
 2523 0057 08       		.byte	0x8
 2524 0058 07       		.byte	0x7
 2525 0059 12010000 		.4byte	.LASF7
 2526 005d 03       		.uleb128 0x3
 2527 005e 04       		.byte	0x4
 2528 005f 05       		.byte	0x5
 2529 0060 696E7400 		.ascii	"int\000"
 2530 0064 02       		.uleb128 0x2
 2531 0065 04       		.byte	0x4
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 104


 2532 0066 07       		.byte	0x7
 2533 0067 50030000 		.4byte	.LASF8
 2534 006b 04       		.uleb128 0x4
 2535 006c 74020000 		.4byte	.LASF9
 2536 0070 02       		.byte	0x2
 2537 0071 B901     		.2byte	0x1b9
 2538 0073 2C000000 		.4byte	0x2c
 2539 0077 04       		.uleb128 0x4
 2540 0078 17000000 		.4byte	.LASF10
 2541 007c 02       		.byte	0x2
 2542 007d BA01     		.2byte	0x1ba
 2543 007f 3A000000 		.4byte	0x3a
 2544 0083 04       		.uleb128 0x4
 2545 0084 B4020000 		.4byte	.LASF11
 2546 0088 02       		.byte	0x2
 2547 0089 BB01     		.2byte	0x1bb
 2548 008b 48000000 		.4byte	0x48
 2549 008f 02       		.uleb128 0x2
 2550 0090 04       		.byte	0x4
 2551 0091 04       		.byte	0x4
 2552 0092 1C050000 		.4byte	.LASF12
 2553 0096 02       		.uleb128 0x2
 2554 0097 08       		.byte	0x8
 2555 0098 04       		.byte	0x4
 2556 0099 90020000 		.4byte	.LASF13
 2557 009d 02       		.uleb128 0x2
 2558 009e 01       		.byte	0x1
 2559 009f 08       		.byte	0x8
 2560 00a0 FB050000 		.4byte	.LASF14
 2561 00a4 04       		.uleb128 0x4
 2562 00a5 10070000 		.4byte	.LASF15
 2563 00a9 02       		.byte	0x2
 2564 00aa 5B02     		.2byte	0x25b
 2565 00ac 48000000 		.4byte	0x48
 2566 00b0 04       		.uleb128 0x4
 2567 00b1 83050000 		.4byte	.LASF16
 2568 00b5 02       		.byte	0x2
 2569 00b6 6302     		.2byte	0x263
 2570 00b8 BC000000 		.4byte	0xbc
 2571 00bc 05       		.uleb128 0x5
 2572 00bd 6B000000 		.4byte	0x6b
 2573 00c1 04       		.uleb128 0x4
 2574 00c2 77040000 		.4byte	.LASF17
 2575 00c6 02       		.byte	0x2
 2576 00c7 6502     		.2byte	0x265
 2577 00c9 CD000000 		.4byte	0xcd
 2578 00cd 05       		.uleb128 0x5
 2579 00ce 83000000 		.4byte	0x83
 2580 00d2 04       		.uleb128 0x4
 2581 00d3 00060000 		.4byte	.LASF18
 2582 00d7 02       		.byte	0x2
 2583 00d8 7502     		.2byte	0x275
 2584 00da DE000000 		.4byte	0xde
 2585 00de 06       		.uleb128 0x6
 2586 00df 04       		.byte	0x4
 2587 00e0 E4000000 		.4byte	0xe4
 2588 00e4 07       		.uleb128 0x7
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 105


 2589 00e5 02       		.uleb128 0x2
 2590 00e6 04       		.byte	0x4
 2591 00e7 07       		.byte	0x7
 2592 00e8 99040000 		.4byte	.LASF19
 2593 00ec 08       		.uleb128 0x8
 2594 00ed 47050000 		.4byte	.LASF20
 2595 00f1 03       		.byte	0x3
 2596 00f2 F5       		.byte	0xf5
 2597 00f3 DE000000 		.4byte	0xde
 2598 00f7 09       		.uleb128 0x9
 2599 00f8 92050000 		.4byte	.LASF21
 2600 00fc 01       		.byte	0x1
 2601 00fd D309     		.2byte	0x9d3
 2602 00ff 01       		.byte	0x1
 2603 0100 11010000 		.4byte	0x111
 2604 0104 0A       		.uleb128 0xa
 2605 0105 F4050000 		.4byte	.LASF23
 2606 0109 01       		.byte	0x1
 2607 010a D309     		.2byte	0x9d3
 2608 010c 6B000000 		.4byte	0x6b
 2609 0110 00       		.byte	0
 2610 0111 0B       		.uleb128 0xb
 2611 0112 BB020000 		.4byte	.LASF51
 2612 0116 01       		.byte	0x1
 2613 0117 B304     		.2byte	0x4b3
 2614 0119 83000000 		.4byte	0x83
 2615 011d 01       		.byte	0x1
 2616 011e 2F010000 		.4byte	0x12f
 2617 0122 0C       		.uleb128 0xc
 2618 0123 9B070000 		.4byte	.LASF25
 2619 0127 01       		.byte	0x1
 2620 0128 B504     		.2byte	0x4b5
 2621 012a 83000000 		.4byte	0x83
 2622 012e 00       		.byte	0
 2623 012f 0D       		.uleb128 0xd
 2624 0130 9D020000 		.4byte	.LASF28
 2625 0134 01       		.byte	0x1
 2626 0135 8608     		.2byte	0x886
 2627 0137 01       		.byte	0x1
 2628 0138 09       		.uleb128 0x9
 2629 0139 F7030000 		.4byte	.LASF22
 2630 013d 01       		.byte	0x1
 2631 013e 020B     		.2byte	0xb02
 2632 0140 01       		.byte	0x1
 2633 0141 52010000 		.4byte	0x152
 2634 0145 0A       		.uleb128 0xa
 2635 0146 20030000 		.4byte	.LASF24
 2636 014a 01       		.byte	0x1
 2637 014b 020B     		.2byte	0xb02
 2638 014d 83000000 		.4byte	0x83
 2639 0151 00       		.byte	0
 2640 0152 0E       		.uleb128 0xe
 2641 0153 81070000 		.4byte	.LASF115
 2642 0157 01       		.byte	0x1
 2643 0158 870B     		.2byte	0xb87
 2644 015a 01       		.byte	0x1
 2645 015b 6A010000 		.4byte	0x16a
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 106


 2646 015f 0F       		.uleb128 0xf
 2647 0160 6900     		.ascii	"i\000"
 2648 0162 01       		.byte	0x1
 2649 0163 890B     		.2byte	0xb89
 2650 0165 83000000 		.4byte	0x83
 2651 0169 00       		.byte	0
 2652 016a 09       		.uleb128 0x9
 2653 016b 6E070000 		.4byte	.LASF26
 2654 016f 01       		.byte	0x1
 2655 0170 C20A     		.2byte	0xac2
 2656 0172 01       		.byte	0x1
 2657 0173 84010000 		.4byte	0x184
 2658 0177 0A       		.uleb128 0xa
 2659 0178 1A030000 		.4byte	.LASF27
 2660 017c 01       		.byte	0x1
 2661 017d C20A     		.2byte	0xac2
 2662 017f 83000000 		.4byte	0x83
 2663 0183 00       		.byte	0
 2664 0184 0D       		.uleb128 0xd
 2665 0185 5D030000 		.4byte	.LASF29
 2666 0189 01       		.byte	0x1
 2667 018a 3F0B     		.2byte	0xb3f
 2668 018c 01       		.byte	0x1
 2669 018d 10       		.uleb128 0x10
 2670 018e 19070000 		.4byte	.LASF30
 2671 0192 01       		.byte	0x1
 2672 0193 6B       		.byte	0x6b
 2673 0194 00000000 		.4byte	.LFB2
 2674 0198 14000000 		.4byte	.LFE2-.LFB2
 2675 019c 01       		.uleb128 0x1
 2676 019d 9C       		.byte	0x9c
 2677 019e 10       		.uleb128 0x10
 2678 019f 99030000 		.4byte	.LASF31
 2679 01a3 01       		.byte	0x1
 2680 01a4 8B       		.byte	0x8b
 2681 01a5 00000000 		.4byte	.LFB3
 2682 01a9 10000000 		.4byte	.LFE3-.LFB3
 2683 01ad 01       		.uleb128 0x1
 2684 01ae 9C       		.byte	0x9c
 2685 01af 11       		.uleb128 0x11
 2686 01b0 B5000000 		.4byte	.LASF34
 2687 01b4 01       		.byte	0x1
 2688 01b5 AD01     		.2byte	0x1ad
 2689 01b7 00000000 		.4byte	.LFB4
 2690 01bb 20000000 		.4byte	.LFE4-.LFB4
 2691 01bf 01       		.uleb128 0x1
 2692 01c0 9C       		.byte	0x9c
 2693 01c1 08020000 		.4byte	0x208
 2694 01c5 12       		.uleb128 0x12
 2695 01c6 CF050000 		.4byte	.LASF36
 2696 01ca 01       		.byte	0x1
 2697 01cb AD01     		.2byte	0x1ad
 2698 01cd 83000000 		.4byte	0x83
 2699 01d1 00000000 		.4byte	.LLST0
 2700 01d5 13       		.uleb128 0x13
 2701 01d6 27020000 		.4byte	.LASF32
 2702 01da 01       		.byte	0x1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 107


 2703 01db AF01     		.2byte	0x1af
 2704 01dd 6B000000 		.4byte	0x6b
 2705 01e1 2C000000 		.4byte	.LLST1
 2706 01e5 13       		.uleb128 0x13
 2707 01e6 67070000 		.4byte	.LASF33
 2708 01ea 01       		.byte	0x1
 2709 01eb B001     		.2byte	0x1b0
 2710 01ed 83000000 		.4byte	0x83
 2711 01f1 3F000000 		.4byte	.LLST2
 2712 01f5 14       		.uleb128 0x14
 2713 01f6 08000000 		.4byte	.LVL1
 2714 01fa 980D0000 		.4byte	0xd98
 2715 01fe 14       		.uleb128 0x14
 2716 01ff 1A000000 		.4byte	.LVL4
 2717 0203 A30D0000 		.4byte	0xda3
 2718 0207 00       		.byte	0
 2719 0208 11       		.uleb128 0x11
 2720 0209 62040000 		.4byte	.LASF35
 2721 020d 01       		.byte	0x1
 2722 020e D901     		.2byte	0x1d9
 2723 0210 00000000 		.4byte	.LFB5
 2724 0214 34000000 		.4byte	.LFE5-.LFB5
 2725 0218 01       		.uleb128 0x1
 2726 0219 9C       		.byte	0x9c
 2727 021a 2D020000 		.4byte	0x22d
 2728 021e 15       		.uleb128 0x15
 2729 021f 89020000 		.4byte	.LASF37
 2730 0223 01       		.byte	0x1
 2731 0224 D901     		.2byte	0x1d9
 2732 0226 83000000 		.4byte	0x83
 2733 022a 01       		.uleb128 0x1
 2734 022b 50       		.byte	0x50
 2735 022c 00       		.byte	0
 2736 022d 16       		.uleb128 0x16
 2737 022e D6020000 		.4byte	.LASF44
 2738 0232 01       		.byte	0x1
 2739 0233 FE01     		.2byte	0x1fe
 2740 0235 83000000 		.4byte	0x83
 2741 0239 00000000 		.4byte	.LFB6
 2742 023d 18000000 		.4byte	.LFE6-.LFB6
 2743 0241 01       		.uleb128 0x1
 2744 0242 9C       		.byte	0x9c
 2745 0243 7A020000 		.4byte	0x27a
 2746 0247 13       		.uleb128 0x13
 2747 0248 27020000 		.4byte	.LASF32
 2748 024c 01       		.byte	0x1
 2749 024d 0002     		.2byte	0x200
 2750 024f 6B000000 		.4byte	0x6b
 2751 0253 5D000000 		.4byte	.LLST3
 2752 0257 13       		.uleb128 0x13
 2753 0258 C4040000 		.4byte	.LASF38
 2754 025c 01       		.byte	0x1
 2755 025d 0102     		.2byte	0x201
 2756 025f 83000000 		.4byte	0x83
 2757 0263 70000000 		.4byte	.LLST4
 2758 0267 14       		.uleb128 0x14
 2759 0268 06000000 		.4byte	.LVL7
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 108


 2760 026c 980D0000 		.4byte	0xd98
 2761 0270 14       		.uleb128 0x14
 2762 0271 0E000000 		.4byte	.LVL9
 2763 0275 A30D0000 		.4byte	0xda3
 2764 0279 00       		.byte	0
 2765 027a 11       		.uleb128 0x11
 2766 027b 1D060000 		.4byte	.LASF39
 2767 027f 01       		.byte	0x1
 2768 0280 3502     		.2byte	0x235
 2769 0282 00000000 		.4byte	.LFB7
 2770 0286 28000000 		.4byte	.LFE7-.LFB7
 2771 028a 01       		.uleb128 0x1
 2772 028b 9C       		.byte	0x9c
 2773 028c C3020000 		.4byte	0x2c3
 2774 0290 12       		.uleb128 0x12
 2775 0291 F4060000 		.4byte	.LASF40
 2776 0295 01       		.byte	0x1
 2777 0296 3502     		.2byte	0x235
 2778 0298 83000000 		.4byte	0x83
 2779 029c 92000000 		.4byte	.LLST5
 2780 02a0 13       		.uleb128 0x13
 2781 02a1 27020000 		.4byte	.LASF32
 2782 02a5 01       		.byte	0x1
 2783 02a6 3702     		.2byte	0x237
 2784 02a8 6B000000 		.4byte	0x6b
 2785 02ac BE000000 		.4byte	.LLST6
 2786 02b0 14       		.uleb128 0x14
 2787 02b1 08000000 		.4byte	.LVL12
 2788 02b5 980D0000 		.4byte	0xd98
 2789 02b9 14       		.uleb128 0x14
 2790 02ba 1E000000 		.4byte	.LVL13
 2791 02be A30D0000 		.4byte	0xda3
 2792 02c2 00       		.byte	0
 2793 02c3 17       		.uleb128 0x17
 2794 02c4 CC060000 		.4byte	.LASF41
 2795 02c8 01       		.byte	0x1
 2796 02c9 9104     		.2byte	0x491
 2797 02cb 00000000 		.4byte	.LFB10
 2798 02cf 24000000 		.4byte	.LFE10-.LFB10
 2799 02d3 01       		.uleb128 0x1
 2800 02d4 9C       		.byte	0x9c
 2801 02d5 18       		.uleb128 0x18
 2802 02d6 11010000 		.4byte	0x111
 2803 02da 00000000 		.4byte	.LFB11
 2804 02de 10000000 		.4byte	.LFE11-.LFB11
 2805 02e2 01       		.uleb128 0x1
 2806 02e3 9C       		.byte	0x9c
 2807 02e4 F2020000 		.4byte	0x2f2
 2808 02e8 19       		.uleb128 0x19
 2809 02e9 22010000 		.4byte	0x122
 2810 02ed D1000000 		.4byte	.LLST7
 2811 02f1 00       		.byte	0
 2812 02f2 11       		.uleb128 0x11
 2813 02f3 FC060000 		.4byte	.LASF42
 2814 02f7 01       		.byte	0x1
 2815 02f8 E204     		.2byte	0x4e2
 2816 02fa 00000000 		.4byte	.LFB12
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 109


 2817 02fe 38000000 		.4byte	.LFE12-.LFB12
 2818 0302 01       		.uleb128 0x1
 2819 0303 9C       		.byte	0x9c
 2820 0304 59030000 		.4byte	0x359
 2821 0308 12       		.uleb128 0x12
 2822 0309 F4060000 		.4byte	.LASF40
 2823 030d 01       		.byte	0x1
 2824 030e E204     		.2byte	0x4e2
 2825 0310 83000000 		.4byte	0x83
 2826 0314 F3000000 		.4byte	.LLST8
 2827 0318 13       		.uleb128 0x13
 2828 0319 27020000 		.4byte	.LASF32
 2829 031d 01       		.byte	0x1
 2830 031e E404     		.2byte	0x4e4
 2831 0320 6B000000 		.4byte	0x6b
 2832 0324 2A010000 		.4byte	.LLST9
 2833 0328 1A       		.uleb128 0x1a
 2834 0329 F7000000 		.4byte	0xf7
 2835 032d 2A000000 		.4byte	.LBB28
 2836 0331 02000000 		.4byte	.LBE28-.LBB28
 2837 0335 01       		.byte	0x1
 2838 0336 F204     		.2byte	0x4f2
 2839 0338 46030000 		.4byte	0x346
 2840 033c 1B       		.uleb128 0x1b
 2841 033d 04010000 		.4byte	0x104
 2842 0341 3D010000 		.4byte	.LLST10
 2843 0345 00       		.byte	0
 2844 0346 14       		.uleb128 0x14
 2845 0347 16000000 		.4byte	.LVL18
 2846 034b 980D0000 		.4byte	0xd98
 2847 034f 14       		.uleb128 0x14
 2848 0350 28000000 		.4byte	.LVL19
 2849 0354 A30D0000 		.4byte	0xda3
 2850 0358 00       		.byte	0
 2851 0359 17       		.uleb128 0x17
 2852 035a AD060000 		.4byte	.LASF43
 2853 035e 01       		.byte	0x1
 2854 035f 6408     		.2byte	0x864
 2855 0361 00000000 		.4byte	.LFB14
 2856 0365 20000000 		.4byte	.LFE14-.LFB14
 2857 0369 01       		.uleb128 0x1
 2858 036a 9C       		.byte	0x9c
 2859 036b 1C       		.uleb128 0x1c
 2860 036c 7E030000 		.4byte	.LASF92
 2861 0370 01       		.byte	0x1
 2862 0371 7608     		.2byte	0x876
 2863 0373 83000000 		.4byte	0x83
 2864 0377 00000000 		.4byte	.LFB15
 2865 037b 10000000 		.4byte	.LFE15-.LFB15
 2866 037f 01       		.uleb128 0x1
 2867 0380 9C       		.byte	0x9c
 2868 0381 1D       		.uleb128 0x1d
 2869 0382 2F010000 		.4byte	0x12f
 2870 0386 00000000 		.4byte	.LFB16
 2871 038a 0C000000 		.4byte	.LFE16-.LFB16
 2872 038e 01       		.uleb128 0x1
 2873 038f 9C       		.byte	0x9c
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 110


 2874 0390 16       		.uleb128 0x16
 2875 0391 D0030000 		.4byte	.LASF45
 2876 0395 01       		.byte	0x1
 2877 0396 A008     		.2byte	0x8a0
 2878 0398 83000000 		.4byte	0x83
 2879 039c 00000000 		.4byte	.LFB17
 2880 03a0 14000000 		.4byte	.LFE17-.LFB17
 2881 03a4 01       		.uleb128 0x1
 2882 03a5 9C       		.byte	0x9c
 2883 03a6 CB030000 		.4byte	0x3cb
 2884 03aa 12       		.uleb128 0x12
 2885 03ab F4050000 		.4byte	.LASF23
 2886 03af 01       		.byte	0x1
 2887 03b0 A008     		.2byte	0x8a0
 2888 03b2 83000000 		.4byte	0x83
 2889 03b6 51010000 		.4byte	.LLST11
 2890 03ba 13       		.uleb128 0x13
 2891 03bb 8C040000 		.4byte	.LASF46
 2892 03bf 01       		.byte	0x1
 2893 03c0 A208     		.2byte	0x8a2
 2894 03c2 83000000 		.4byte	0x83
 2895 03c6 6F010000 		.4byte	.LLST12
 2896 03ca 00       		.byte	0
 2897 03cb 16       		.uleb128 0x16
 2898 03cc EF000000 		.4byte	.LASF47
 2899 03d0 01       		.byte	0x1
 2900 03d1 B708     		.2byte	0x8b7
 2901 03d3 83000000 		.4byte	0x83
 2902 03d7 00000000 		.4byte	.LFB18
 2903 03db 10000000 		.4byte	.LFE18-.LFB18
 2904 03df 01       		.uleb128 0x1
 2905 03e0 9C       		.byte	0x9c
 2906 03e1 F4030000 		.4byte	0x3f4
 2907 03e5 1E       		.uleb128 0x1e
 2908 03e6 AC000000 		.4byte	.LASF48
 2909 03ea 01       		.byte	0x1
 2910 03eb B908     		.2byte	0x8b9
 2911 03ed 83000000 		.4byte	0x83
 2912 03f1 01       		.uleb128 0x1
 2913 03f2 50       		.byte	0x50
 2914 03f3 00       		.byte	0
 2915 03f4 11       		.uleb128 0x11
 2916 03f5 2E040000 		.4byte	.LASF49
 2917 03f9 01       		.byte	0x1
 2918 03fa CE08     		.2byte	0x8ce
 2919 03fc 00000000 		.4byte	.LFB19
 2920 0400 0C000000 		.4byte	.LFE19-.LFB19
 2921 0404 01       		.uleb128 0x1
 2922 0405 9C       		.byte	0x9c
 2923 0406 19040000 		.4byte	0x419
 2924 040a 15       		.uleb128 0x15
 2925 040b D1020000 		.4byte	.LASF50
 2926 040f 01       		.byte	0x1
 2927 0410 CE08     		.2byte	0x8ce
 2928 0412 83000000 		.4byte	0x83
 2929 0416 01       		.uleb128 0x1
 2930 0417 50       		.byte	0x50
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 111


 2931 0418 00       		.byte	0
 2932 0419 0B       		.uleb128 0xb
 2933 041a 50040000 		.4byte	.LASF52
 2934 041e 01       		.byte	0x1
 2935 041f E708     		.2byte	0x8e7
 2936 0421 D2000000 		.4byte	0xd2
 2937 0425 01       		.byte	0x1
 2938 0426 5B040000 		.4byte	0x45b
 2939 042a 0A       		.uleb128 0xa
 2940 042b 1E040000 		.4byte	.LASF53
 2941 042f 01       		.byte	0x1
 2942 0430 E708     		.2byte	0x8e7
 2943 0432 6B000000 		.4byte	0x6b
 2944 0436 0A       		.uleb128 0xa
 2945 0437 B4040000 		.4byte	.LASF54
 2946 043b 01       		.byte	0x1
 2947 043c E708     		.2byte	0x8e7
 2948 043e D2000000 		.4byte	0xd2
 2949 0442 0C       		.uleb128 0xc
 2950 0443 E1000000 		.4byte	.LASF55
 2951 0447 01       		.byte	0x1
 2952 0448 E908     		.2byte	0x8e9
 2953 044a D2000000 		.4byte	0xd2
 2954 044e 0C       		.uleb128 0xc
 2955 044f 00000000 		.4byte	.LASF56
 2956 0453 01       		.byte	0x1
 2957 0454 EA08     		.2byte	0x8ea
 2958 0456 5B040000 		.4byte	0x45b
 2959 045a 00       		.byte	0
 2960 045b 06       		.uleb128 0x6
 2961 045c 04       		.byte	0x4
 2962 045d D2000000 		.4byte	0xd2
 2963 0461 18       		.uleb128 0x18
 2964 0462 19040000 		.4byte	0x419
 2965 0466 00000000 		.4byte	.LFB20
 2966 046a 14000000 		.4byte	.LFE20-.LFB20
 2967 046e 01       		.uleb128 0x1
 2968 046f 9C       		.byte	0x9c
 2969 0470 AF040000 		.4byte	0x4af
 2970 0474 1B       		.uleb128 0x1b
 2971 0475 2A040000 		.4byte	0x42a
 2972 0479 91010000 		.4byte	.LLST13
 2973 047d 1F       		.uleb128 0x1f
 2974 047e 36040000 		.4byte	0x436
 2975 0482 01       		.uleb128 0x1
 2976 0483 51       		.byte	0x51
 2977 0484 20       		.uleb128 0x20
 2978 0485 42040000 		.4byte	0x442
 2979 0489 01       		.uleb128 0x1
 2980 048a 50       		.byte	0x50
 2981 048b 21       		.uleb128 0x21
 2982 048c 4E040000 		.4byte	0x44e
 2983 0490 00000020 		.4byte	0x20000000
 2984 0494 22       		.uleb128 0x22
 2985 0495 F7000000 		.4byte	0xf7
 2986 0499 04000000 		.4byte	.LBB32
 2987 049d 02000000 		.4byte	.LBE32-.LBB32
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 112


 2988 04a1 01       		.byte	0x1
 2989 04a2 EC08     		.2byte	0x8ec
 2990 04a4 1B       		.uleb128 0x1b
 2991 04a5 04010000 		.4byte	0x104
 2992 04a9 B2010000 		.4byte	.LLST14
 2993 04ad 00       		.byte	0
 2994 04ae 00       		.byte	0
 2995 04af 16       		.uleb128 0x16
 2996 04b0 BD050000 		.4byte	.LASF57
 2997 04b4 01       		.byte	0x1
 2998 04b5 0909     		.2byte	0x909
 2999 04b7 D2000000 		.4byte	0xd2
 3000 04bb 00000000 		.4byte	.LFB21
 3001 04bf 12000000 		.4byte	.LFE21-.LFB21
 3002 04c3 01       		.uleb128 0x1
 3003 04c4 9C       		.byte	0x9c
 3004 04c5 04050000 		.4byte	0x504
 3005 04c9 12       		.uleb128 0x12
 3006 04ca 1E040000 		.4byte	.LASF53
 3007 04ce 01       		.byte	0x1
 3008 04cf 0909     		.2byte	0x909
 3009 04d1 6B000000 		.4byte	0x6b
 3010 04d5 C6010000 		.4byte	.LLST15
 3011 04d9 23       		.uleb128 0x23
 3012 04da 00000000 		.4byte	.LASF56
 3013 04de 01       		.byte	0x1
 3014 04df 0B09     		.2byte	0x90b
 3015 04e1 5B040000 		.4byte	0x45b
 3016 04e5 00000020 		.4byte	0x20000000
 3017 04e9 22       		.uleb128 0x22
 3018 04ea F7000000 		.4byte	0xf7
 3019 04ee 04000000 		.4byte	.LBB34
 3020 04f2 02000000 		.4byte	.LBE34-.LBB34
 3021 04f6 01       		.byte	0x1
 3022 04f7 0D09     		.2byte	0x90d
 3023 04f9 1B       		.uleb128 0x1b
 3024 04fa 04010000 		.4byte	0x104
 3025 04fe E7010000 		.4byte	.LLST16
 3026 0502 00       		.byte	0
 3027 0503 00       		.byte	0
 3028 0504 16       		.uleb128 0x16
 3029 0505 0F040000 		.4byte	.LASF58
 3030 0509 01       		.byte	0x1
 3031 050a 1F09     		.2byte	0x91f
 3032 050c D2000000 		.4byte	0xd2
 3033 0510 00000000 		.4byte	.LFB22
 3034 0514 18000000 		.4byte	.LFE22-.LFB22
 3035 0518 01       		.uleb128 0x1
 3036 0519 9C       		.byte	0x9c
 3037 051a 75050000 		.4byte	0x575
 3038 051e 12       		.uleb128 0x12
 3039 051f 1E040000 		.4byte	.LASF53
 3040 0523 01       		.byte	0x1
 3041 0524 1F09     		.2byte	0x91f
 3042 0526 6B000000 		.4byte	0x6b
 3043 052a FB010000 		.4byte	.LLST17
 3044 052e 15       		.uleb128 0x15
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 113


 3045 052f B4040000 		.4byte	.LASF54
 3046 0533 01       		.byte	0x1
 3047 0534 1F09     		.2byte	0x91f
 3048 0536 D2000000 		.4byte	0xd2
 3049 053a 01       		.uleb128 0x1
 3050 053b 51       		.byte	0x51
 3051 053c 1E       		.uleb128 0x1e
 3052 053d E1000000 		.4byte	.LASF55
 3053 0541 01       		.byte	0x1
 3054 0542 2109     		.2byte	0x921
 3055 0544 D2000000 		.4byte	0xd2
 3056 0548 01       		.uleb128 0x1
 3057 0549 50       		.byte	0x50
 3058 054a 23       		.uleb128 0x23
 3059 054b 00000000 		.4byte	.LASF56
 3060 054f 01       		.byte	0x1
 3061 0550 2209     		.2byte	0x922
 3062 0552 5B040000 		.4byte	0x45b
 3063 0556 00000020 		.4byte	0x20000000
 3064 055a 22       		.uleb128 0x22
 3065 055b F7000000 		.4byte	0xf7
 3066 055f 04000000 		.4byte	.LBB36
 3067 0563 02000000 		.4byte	.LBE36-.LBB36
 3068 0567 01       		.byte	0x1
 3069 0568 2409     		.2byte	0x924
 3070 056a 1B       		.uleb128 0x1b
 3071 056b 04010000 		.4byte	0x104
 3072 056f 1C020000 		.4byte	.LLST18
 3073 0573 00       		.byte	0
 3074 0574 00       		.byte	0
 3075 0575 16       		.uleb128 0x16
 3076 0576 59050000 		.4byte	.LASF59
 3077 057a 01       		.byte	0x1
 3078 057b 3B09     		.2byte	0x93b
 3079 057d D2000000 		.4byte	0xd2
 3080 0581 00000000 		.4byte	.LFB23
 3081 0585 14000000 		.4byte	.LFE23-.LFB23
 3082 0589 01       		.uleb128 0x1
 3083 058a 9C       		.byte	0x9c
 3084 058b CA050000 		.4byte	0x5ca
 3085 058f 12       		.uleb128 0x12
 3086 0590 1E040000 		.4byte	.LASF53
 3087 0594 01       		.byte	0x1
 3088 0595 3B09     		.2byte	0x93b
 3089 0597 6B000000 		.4byte	0x6b
 3090 059b 30020000 		.4byte	.LLST19
 3091 059f 23       		.uleb128 0x23
 3092 05a0 00000000 		.4byte	.LASF56
 3093 05a4 01       		.byte	0x1
 3094 05a5 3D09     		.2byte	0x93d
 3095 05a7 5B040000 		.4byte	0x45b
 3096 05ab 00000020 		.4byte	0x20000000
 3097 05af 22       		.uleb128 0x22
 3098 05b0 F7000000 		.4byte	0xf7
 3099 05b4 04000000 		.4byte	.LBB38
 3100 05b8 02000000 		.4byte	.LBE38-.LBB38
 3101 05bc 01       		.byte	0x1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 114


 3102 05bd 3F09     		.2byte	0x93f
 3103 05bf 1B       		.uleb128 0x1b
 3104 05c0 04010000 		.4byte	0x104
 3105 05c4 51020000 		.4byte	.LLST20
 3106 05c8 00       		.byte	0
 3107 05c9 00       		.byte	0
 3108 05ca 11       		.uleb128 0x11
 3109 05cb 0B050000 		.4byte	.LASF60
 3110 05cf 01       		.byte	0x1
 3111 05d0 4E09     		.2byte	0x94e
 3112 05d2 00000000 		.4byte	.LFB24
 3113 05d6 3C000000 		.4byte	.LFE24-.LFB24
 3114 05da 01       		.uleb128 0x1
 3115 05db 9C       		.byte	0x9c
 3116 05dc 7F060000 		.4byte	0x67f
 3117 05e0 12       		.uleb128 0x12
 3118 05e1 1E040000 		.4byte	.LASF53
 3119 05e5 01       		.byte	0x1
 3120 05e6 4E09     		.2byte	0x94e
 3121 05e8 6B000000 		.4byte	0x6b
 3122 05ec 65020000 		.4byte	.LLST21
 3123 05f0 12       		.uleb128 0x12
 3124 05f1 25040000 		.4byte	.LASF61
 3125 05f5 01       		.byte	0x1
 3126 05f6 4E09     		.2byte	0x94e
 3127 05f8 6B000000 		.4byte	0x6b
 3128 05fc 86020000 		.4byte	.LLST22
 3129 0600 13       		.uleb128 0x13
 3130 0601 27020000 		.4byte	.LASF32
 3131 0605 01       		.byte	0x1
 3132 0606 5009     		.2byte	0x950
 3133 0608 6B000000 		.4byte	0x6b
 3134 060c A7020000 		.4byte	.LLST23
 3135 0610 13       		.uleb128 0x13
 3136 0611 97020000 		.4byte	.LASF62
 3137 0615 01       		.byte	0x1
 3138 0616 5109     		.2byte	0x951
 3139 0618 83000000 		.4byte	0x83
 3140 061c BA020000 		.4byte	.LLST24
 3141 0620 13       		.uleb128 0x13
 3142 0621 1A030000 		.4byte	.LASF27
 3143 0625 01       		.byte	0x1
 3144 0626 5209     		.2byte	0x952
 3145 0628 83000000 		.4byte	0x83
 3146 062c D8020000 		.4byte	.LLST25
 3147 0630 1A       		.uleb128 0x1a
 3148 0631 F7000000 		.4byte	0xf7
 3149 0635 0A000000 		.4byte	.LBB40
 3150 0639 02000000 		.4byte	.LBE40-.LBB40
 3151 063d 01       		.byte	0x1
 3152 063e 5409     		.2byte	0x954
 3153 0640 4E060000 		.4byte	0x64e
 3154 0644 1B       		.uleb128 0x1b
 3155 0645 04010000 		.4byte	0x104
 3156 0649 EB020000 		.4byte	.LLST26
 3157 064d 00       		.byte	0
 3158 064e 1A       		.uleb128 0x1a
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 115


 3159 064f F7000000 		.4byte	0xf7
 3160 0653 10000000 		.4byte	.LBB42
 3161 0657 02000000 		.4byte	.LBE42-.LBB42
 3162 065b 01       		.byte	0x1
 3163 065c 5509     		.2byte	0x955
 3164 065e 6C060000 		.4byte	0x66c
 3165 0662 1B       		.uleb128 0x1b
 3166 0663 04010000 		.4byte	0x104
 3167 0667 FF020000 		.4byte	.LLST27
 3168 066b 00       		.byte	0
 3169 066c 14       		.uleb128 0x14
 3170 066d 16000000 		.4byte	.LVL51
 3171 0671 980D0000 		.4byte	0xd98
 3172 0675 14       		.uleb128 0x14
 3173 0676 36000000 		.4byte	.LVL56
 3174 067a A30D0000 		.4byte	0xda3
 3175 067e 00       		.byte	0
 3176 067f 16       		.uleb128 0x16
 3177 0680 EE020000 		.4byte	.LASF63
 3178 0684 01       		.byte	0x1
 3179 0685 7009     		.2byte	0x970
 3180 0687 6B000000 		.4byte	0x6b
 3181 068b 00000000 		.4byte	.LFB25
 3182 068f 28000000 		.4byte	.LFE25-.LFB25
 3183 0693 01       		.uleb128 0x1
 3184 0694 9C       		.byte	0x9c
 3185 0695 D4060000 		.4byte	0x6d4
 3186 0699 12       		.uleb128 0x12
 3187 069a 1E040000 		.4byte	.LASF53
 3188 069e 01       		.byte	0x1
 3189 069f 7009     		.2byte	0x970
 3190 06a1 6B000000 		.4byte	0x6b
 3191 06a5 13030000 		.4byte	.LLST28
 3192 06a9 13       		.uleb128 0x13
 3193 06aa 25040000 		.4byte	.LASF61
 3194 06ae 01       		.byte	0x1
 3195 06af 7209     		.2byte	0x972
 3196 06b1 6B000000 		.4byte	0x6b
 3197 06b5 34030000 		.4byte	.LLST29
 3198 06b9 22       		.uleb128 0x22
 3199 06ba F7000000 		.4byte	0xf7
 3200 06be 04000000 		.4byte	.LBB44
 3201 06c2 02000000 		.4byte	.LBE44-.LBB44
 3202 06c6 01       		.byte	0x1
 3203 06c7 7409     		.2byte	0x974
 3204 06c9 1B       		.uleb128 0x1b
 3205 06ca 04010000 		.4byte	0x104
 3206 06ce 55030000 		.4byte	.LLST30
 3207 06d2 00       		.byte	0
 3208 06d3 00       		.byte	0
 3209 06d4 09       		.uleb128 0x9
 3210 06d5 B1050000 		.4byte	.LASF64
 3211 06d9 01       		.byte	0x1
 3212 06da 8509     		.2byte	0x985
 3213 06dc 01       		.byte	0x1
 3214 06dd EE060000 		.4byte	0x6ee
 3215 06e1 0A       		.uleb128 0xa
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 116


 3216 06e2 1E040000 		.4byte	.LASF53
 3217 06e6 01       		.byte	0x1
 3218 06e7 8509     		.2byte	0x985
 3219 06e9 6B000000 		.4byte	0x6b
 3220 06ed 00       		.byte	0
 3221 06ee 18       		.uleb128 0x18
 3222 06ef D4060000 		.4byte	0x6d4
 3223 06f3 00000000 		.4byte	.LFB26
 3224 06f7 14000000 		.4byte	.LFE26-.LFB26
 3225 06fb 01       		.uleb128 0x1
 3226 06fc 9C       		.byte	0x9c
 3227 06fd 0B070000 		.4byte	0x70b
 3228 0701 1B       		.uleb128 0x1b
 3229 0702 E1060000 		.4byte	0x6e1
 3230 0706 69030000 		.4byte	.LLST31
 3231 070a 00       		.byte	0
 3232 070b 16       		.uleb128 0x16
 3233 070c EE010000 		.4byte	.LASF65
 3234 0710 01       		.byte	0x1
 3235 0711 9709     		.2byte	0x997
 3236 0713 6B000000 		.4byte	0x6b
 3237 0717 00000000 		.4byte	.LFB27
 3238 071b 18000000 		.4byte	.LFE27-.LFB27
 3239 071f 01       		.uleb128 0x1
 3240 0720 9C       		.byte	0x9c
 3241 0721 36070000 		.4byte	0x736
 3242 0725 12       		.uleb128 0x12
 3243 0726 1E040000 		.4byte	.LASF53
 3244 072a 01       		.byte	0x1
 3245 072b 9709     		.2byte	0x997
 3246 072d 6B000000 		.4byte	0x6b
 3247 0731 8A030000 		.4byte	.LLST32
 3248 0735 00       		.byte	0
 3249 0736 11       		.uleb128 0x11
 3250 0737 52020000 		.4byte	.LASF66
 3251 073b 01       		.byte	0x1
 3252 073c A709     		.2byte	0x9a7
 3253 073e 00000000 		.4byte	.LFB28
 3254 0742 14000000 		.4byte	.LFE28-.LFB28
 3255 0746 01       		.uleb128 0x1
 3256 0747 9C       		.byte	0x9c
 3257 0748 5D070000 		.4byte	0x75d
 3258 074c 12       		.uleb128 0x12
 3259 074d 1E040000 		.4byte	.LASF53
 3260 0751 01       		.byte	0x1
 3261 0752 A709     		.2byte	0x9a7
 3262 0754 6B000000 		.4byte	0x6b
 3263 0758 AB030000 		.4byte	.LLST33
 3264 075c 00       		.byte	0
 3265 075d 11       		.uleb128 0x11
 3266 075e C0030000 		.4byte	.LASF67
 3267 0762 01       		.byte	0x1
 3268 0763 B509     		.2byte	0x9b5
 3269 0765 00000000 		.4byte	.LFB29
 3270 0769 14000000 		.4byte	.LFE29-.LFB29
 3271 076d 01       		.uleb128 0x1
 3272 076e 9C       		.byte	0x9c
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 117


 3273 076f 84070000 		.4byte	0x784
 3274 0773 12       		.uleb128 0x12
 3275 0774 1E040000 		.4byte	.LASF53
 3276 0778 01       		.byte	0x1
 3277 0779 B509     		.2byte	0x9b5
 3278 077b 6B000000 		.4byte	0x6b
 3279 077f CC030000 		.4byte	.LLST34
 3280 0783 00       		.byte	0
 3281 0784 11       		.uleb128 0x11
 3282 0785 A2040000 		.4byte	.LASF68
 3283 0789 01       		.byte	0x1
 3284 078a C409     		.2byte	0x9c4
 3285 078c 00000000 		.4byte	.LFB30
 3286 0790 14000000 		.4byte	.LFE30-.LFB30
 3287 0794 01       		.uleb128 0x1
 3288 0795 9C       		.byte	0x9c
 3289 0796 AB070000 		.4byte	0x7ab
 3290 079a 12       		.uleb128 0x12
 3291 079b 1E040000 		.4byte	.LASF53
 3292 079f 01       		.byte	0x1
 3293 07a0 C409     		.2byte	0x9c4
 3294 07a2 6B000000 		.4byte	0x6b
 3295 07a6 ED030000 		.4byte	.LLST35
 3296 07aa 00       		.byte	0
 3297 07ab 18       		.uleb128 0x18
 3298 07ac F7000000 		.4byte	0xf7
 3299 07b0 00000000 		.4byte	.LFB31
 3300 07b4 04000000 		.4byte	.LFE31-.LFB31
 3301 07b8 01       		.uleb128 0x1
 3302 07b9 9C       		.byte	0x9c
 3303 07ba C6070000 		.4byte	0x7c6
 3304 07be 1F       		.uleb128 0x1f
 3305 07bf 04010000 		.4byte	0x104
 3306 07c3 01       		.uleb128 0x1
 3307 07c4 50       		.byte	0x50
 3308 07c5 00       		.byte	0
 3309 07c6 17       		.uleb128 0x17
 3310 07c7 C5010000 		.4byte	.LASF69
 3311 07cb 01       		.byte	0x1
 3312 07cc EB09     		.2byte	0x9eb
 3313 07ce 00000000 		.4byte	.LFB32
 3314 07d2 18000000 		.4byte	.LFE32-.LFB32
 3315 07d6 01       		.uleb128 0x1
 3316 07d7 9C       		.byte	0x9c
 3317 07d8 11       		.uleb128 0x11
 3318 07d9 73060000 		.4byte	.LASF70
 3319 07dd 01       		.byte	0x1
 3320 07de FF09     		.2byte	0x9ff
 3321 07e0 00000000 		.4byte	.LFB33
 3322 07e4 2C000000 		.4byte	.LFE33-.LFB33
 3323 07e8 01       		.uleb128 0x1
 3324 07e9 9C       		.byte	0x9c
 3325 07ea 11080000 		.4byte	0x811
 3326 07ee 12       		.uleb128 0x12
 3327 07ef 68050000 		.4byte	.LASF71
 3328 07f3 01       		.byte	0x1
 3329 07f4 FF09     		.2byte	0x9ff
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 118


 3330 07f6 83000000 		.4byte	0x83
 3331 07fa 0E040000 		.4byte	.LLST36
 3332 07fe 14       		.uleb128 0x14
 3333 07ff 14000000 		.4byte	.LVL76
 3334 0803 B40D0000 		.4byte	0xdb4
 3335 0807 14       		.uleb128 0x14
 3336 0808 22000000 		.4byte	.LVL78
 3337 080c B40D0000 		.4byte	0xdb4
 3338 0810 00       		.byte	0
 3339 0811 11       		.uleb128 0x11
 3340 0812 EA050000 		.4byte	.LASF72
 3341 0816 01       		.byte	0x1
 3342 0817 160A     		.2byte	0xa16
 3343 0819 00000000 		.4byte	.LFB34
 3344 081d 14000000 		.4byte	.LFE34-.LFB34
 3345 0821 01       		.uleb128 0x1
 3346 0822 9C       		.byte	0x9c
 3347 0823 41080000 		.4byte	0x841
 3348 0827 12       		.uleb128 0x12
 3349 0828 5A070000 		.4byte	.LASF73
 3350 082c 01       		.byte	0x1
 3351 082d 160A     		.2byte	0xa16
 3352 082f 77000000 		.4byte	0x77
 3353 0833 2C040000 		.4byte	.LLST37
 3354 0837 14       		.uleb128 0x14
 3355 0838 0C000000 		.4byte	.LVL82
 3356 083c B40D0000 		.4byte	0xdb4
 3357 0840 00       		.byte	0
 3358 0841 11       		.uleb128 0x11
 3359 0842 3B040000 		.4byte	.LASF74
 3360 0846 01       		.byte	0x1
 3361 0847 6F02     		.2byte	0x26f
 3362 0849 00000000 		.4byte	.LFB8
 3363 084d 28010000 		.4byte	.LFE8-.LFB8
 3364 0851 01       		.uleb128 0x1
 3365 0852 9C       		.byte	0x9c
 3366 0853 39090000 		.4byte	0x939
 3367 0857 12       		.uleb128 0x12
 3368 0858 16020000 		.4byte	.LASF75
 3369 085c 01       		.byte	0x1
 3370 085d 6F02     		.2byte	0x26f
 3371 085f 83000000 		.4byte	0x83
 3372 0863 4D040000 		.4byte	.LLST38
 3373 0867 13       		.uleb128 0x13
 3374 0868 0F000000 		.4byte	.LASF76
 3375 086c 01       		.byte	0x1
 3376 086d 7502     		.2byte	0x275
 3377 086f 6B000000 		.4byte	0x6b
 3378 0873 97040000 		.4byte	.LLST39
 3379 0877 13       		.uleb128 0x13
 3380 0878 BC040000 		.4byte	.LASF77
 3381 087c 01       		.byte	0x1
 3382 087d 7602     		.2byte	0x276
 3383 087f 6B000000 		.4byte	0x6b
 3384 0883 D6040000 		.4byte	.LLST40
 3385 0887 13       		.uleb128 0x13
 3386 0888 2A070000 		.4byte	.LASF78
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 119


 3387 088c 01       		.byte	0x1
 3388 088d 7702     		.2byte	0x277
 3389 088f 6B000000 		.4byte	0x6b
 3390 0893 EA040000 		.4byte	.LLST41
 3391 0897 13       		.uleb128 0x13
 3392 0898 FD000000 		.4byte	.LASF79
 3393 089c 01       		.byte	0x1
 3394 089d 7802     		.2byte	0x278
 3395 089f 6B000000 		.4byte	0x6b
 3396 08a3 FE040000 		.4byte	.LLST42
 3397 08a7 13       		.uleb128 0x13
 3398 08a8 5C060000 		.4byte	.LASF80
 3399 08ac 01       		.byte	0x1
 3400 08ad 7902     		.2byte	0x279
 3401 08af 6B000000 		.4byte	0x6b
 3402 08b3 11050000 		.4byte	.LLST43
 3403 08b7 1E       		.uleb128 0x1e
 3404 08b8 27020000 		.4byte	.LASF32
 3405 08bc 01       		.byte	0x1
 3406 08bd 8402     		.2byte	0x284
 3407 08bf 6B000000 		.4byte	0x6b
 3408 08c3 02       		.uleb128 0x2
 3409 08c4 91       		.byte	0x91
 3410 08c5 60       		.sleb128 -32
 3411 08c6 1A       		.uleb128 0x1a
 3412 08c7 F7000000 		.4byte	0xf7
 3413 08cb CE000000 		.4byte	.LBB46
 3414 08cf 02000000 		.4byte	.LBE46-.LBB46
 3415 08d3 01       		.byte	0x1
 3416 08d4 2403     		.2byte	0x324
 3417 08d6 E4080000 		.4byte	0x8e4
 3418 08da 1B       		.uleb128 0x1b
 3419 08db 04010000 		.4byte	0x104
 3420 08df 43050000 		.4byte	.LLST44
 3421 08e3 00       		.byte	0
 3422 08e4 14       		.uleb128 0x14
 3423 08e5 0A000000 		.4byte	.LVL84
 3424 08e9 980D0000 		.4byte	0xd98
 3425 08ed 24       		.uleb128 0x24
 3426 08ee 9C000000 		.4byte	.LVL99
 3427 08f2 B40D0000 		.4byte	0xdb4
 3428 08f6 00090000 		.4byte	0x900
 3429 08fa 25       		.uleb128 0x25
 3430 08fb 01       		.uleb128 0x1
 3431 08fc 50       		.byte	0x50
 3432 08fd 01       		.uleb128 0x1
 3433 08fe 35       		.byte	0x35
 3434 08ff 00       		.byte	0
 3435 0900 24       		.uleb128 0x24
 3436 0901 B8000000 		.4byte	.LVL105
 3437 0905 11080000 		.4byte	0x811
 3438 0909 13090000 		.4byte	0x913
 3439 090d 25       		.uleb128 0x25
 3440 090e 01       		.uleb128 0x1
 3441 090f 50       		.byte	0x50
 3442 0910 01       		.uleb128 0x1
 3443 0911 35       		.byte	0x35
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 120


 3444 0912 00       		.byte	0
 3445 0913 24       		.uleb128 0x24
 3446 0914 CC000000 		.4byte	.LVL106
 3447 0918 B40D0000 		.4byte	0xdb4
 3448 091c 26090000 		.4byte	0x926
 3449 0920 25       		.uleb128 0x25
 3450 0921 01       		.uleb128 0x1
 3451 0922 50       		.byte	0x50
 3452 0923 01       		.uleb128 0x1
 3453 0924 35       		.byte	0x35
 3454 0925 00       		.byte	0
 3455 0926 26       		.uleb128 0x26
 3456 0927 D6000000 		.4byte	.LVL109
 3457 092b A30D0000 		.4byte	0xda3
 3458 092f 25       		.uleb128 0x25
 3459 0930 01       		.uleb128 0x1
 3460 0931 50       		.byte	0x50
 3461 0932 04       		.uleb128 0x4
 3462 0933 91       		.byte	0x91
 3463 0934 60       		.sleb128 -32
 3464 0935 94       		.byte	0x94
 3465 0936 01       		.byte	0x1
 3466 0937 00       		.byte	0
 3467 0938 00       		.byte	0
 3468 0939 16       		.uleb128 0x16
 3469 093a D9050000 		.4byte	.LASF81
 3470 093e 01       		.byte	0x1
 3471 093f 0304     		.2byte	0x403
 3472 0941 A4000000 		.4byte	0xa4
 3473 0945 00000000 		.4byte	.LFB9
 3474 0949 54000000 		.4byte	.LFE9-.LFB9
 3475 094d 01       		.uleb128 0x1
 3476 094e 9C       		.byte	0x9c
 3477 094f AB090000 		.4byte	0x9ab
 3478 0953 12       		.uleb128 0x12
 3479 0954 EA060000 		.4byte	.LASF82
 3480 0958 01       		.byte	0x1
 3481 0959 0304     		.2byte	0x403
 3482 095b 83000000 		.4byte	0x83
 3483 095f 57050000 		.4byte	.LLST45
 3484 0963 13       		.uleb128 0x13
 3485 0964 8C040000 		.4byte	.LASF46
 3486 0968 01       		.byte	0x1
 3487 0969 0504     		.2byte	0x405
 3488 096b A4000000 		.4byte	0xa4
 3489 096f 75050000 		.4byte	.LLST46
 3490 0973 1A       		.uleb128 0x1a
 3491 0974 11010000 		.4byte	0x111
 3492 0978 2E000000 		.4byte	.LBB48
 3493 097c 04000000 		.4byte	.LBE48-.LBB48
 3494 0980 01       		.byte	0x1
 3495 0981 7904     		.2byte	0x479
 3496 0983 9B090000 		.4byte	0x99b
 3497 0987 27       		.uleb128 0x27
 3498 0988 2E000000 		.4byte	.LBB49
 3499 098c 04000000 		.4byte	.LBE49-.LBB49
 3500 0990 19       		.uleb128 0x19
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 121


 3501 0991 22010000 		.4byte	0x122
 3502 0995 94050000 		.4byte	.LLST47
 3503 0999 00       		.byte	0
 3504 099a 00       		.byte	0
 3505 099b 26       		.uleb128 0x26
 3506 099c 2E000000 		.4byte	.LVL112
 3507 09a0 11080000 		.4byte	0x811
 3508 09a4 25       		.uleb128 0x25
 3509 09a5 01       		.uleb128 0x1
 3510 09a6 50       		.byte	0x50
 3511 09a7 01       		.uleb128 0x1
 3512 09a8 31       		.byte	0x31
 3513 09a9 00       		.byte	0
 3514 09aa 00       		.byte	0
 3515 09ab 11       		.uleb128 0x11
 3516 09ac 38050000 		.4byte	.LASF83
 3517 09b0 01       		.byte	0x1
 3518 09b1 4608     		.2byte	0x846
 3519 09b3 00000000 		.4byte	.LFB13
 3520 09b7 44000000 		.4byte	.LFE13-.LFB13
 3521 09bb 01       		.uleb128 0x1
 3522 09bc 9C       		.byte	0x9c
 3523 09bd F3090000 		.4byte	0x9f3
 3524 09c1 12       		.uleb128 0x12
 3525 09c2 88050000 		.4byte	.LASF84
 3526 09c6 01       		.byte	0x1
 3527 09c7 4608     		.2byte	0x846
 3528 09c9 83000000 		.4byte	0x83
 3529 09cd AB050000 		.4byte	.LLST48
 3530 09d1 28       		.uleb128 0x28
 3531 09d2 2F010000 		.4byte	0x12f
 3532 09d6 2C000000 		.4byte	.LBB50
 3533 09da 00000000 		.4byte	.Ldebug_ranges0+0
 3534 09de 01       		.byte	0x1
 3535 09df 5608     		.2byte	0x856
 3536 09e1 26       		.uleb128 0x26
 3537 09e2 2C000000 		.4byte	.LVL120
 3538 09e6 11080000 		.4byte	0x811
 3539 09ea 25       		.uleb128 0x25
 3540 09eb 01       		.uleb128 0x1
 3541 09ec 50       		.byte	0x50
 3542 09ed 03       		.uleb128 0x3
 3543 09ee 0A       		.byte	0xa
 3544 09ef E803     		.2byte	0x3e8
 3545 09f1 00       		.byte	0
 3546 09f2 00       		.byte	0
 3547 09f3 29       		.uleb128 0x29
 3548 09f4 1B020000 		.4byte	.LASF85
 3549 09f8 01       		.byte	0x1
 3550 09f9 240A     		.2byte	0xa24
 3551 09fb 00000000 		.4byte	.LFB35
 3552 09ff 48000000 		.4byte	.LFE35-.LFB35
 3553 0a03 01       		.uleb128 0x1
 3554 0a04 9C       		.byte	0x9c
 3555 0a05 1A0A0000 		.4byte	0xa1a
 3556 0a09 12       		.uleb128 0x12
 3557 0a0a 16020000 		.4byte	.LASF75
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 122


 3558 0a0e 01       		.byte	0x1
 3559 0a0f 240A     		.2byte	0xa24
 3560 0a11 83000000 		.4byte	0x83
 3561 0a15 CC050000 		.4byte	.LLST49
 3562 0a19 00       		.byte	0
 3563 0a1a 29       		.uleb128 0x29
 3564 0a1b 0C030000 		.4byte	.LASF86
 3565 0a1f 01       		.byte	0x1
 3566 0a20 610A     		.2byte	0xa61
 3567 0a22 00000000 		.4byte	.LFB37
 3568 0a26 60000000 		.4byte	.LFE37-.LFB37
 3569 0a2a 01       		.uleb128 0x1
 3570 0a2b 9C       		.byte	0x9c
 3571 0a2c EC0A0000 		.4byte	0xaec
 3572 0a30 2A       		.uleb128 0x2a
 3573 0a31 6900     		.ascii	"i\000"
 3574 0a33 01       		.byte	0x1
 3575 0a34 630A     		.2byte	0xa63
 3576 0a36 83000000 		.4byte	0x83
 3577 0a3a ED050000 		.4byte	.LLST50
 3578 0a3e 2B       		.uleb128 0x2b
 3579 0a3f 38010000 		.4byte	0x138
 3580 0a43 04000000 		.4byte	.LBB68
 3581 0a47 18000000 		.4byte	.Ldebug_ranges0+0x18
 3582 0a4b 01       		.byte	0x1
 3583 0a4c 6D0A     		.2byte	0xa6d
 3584 0a4e 650A0000 		.4byte	0xa65
 3585 0a52 2C       		.uleb128 0x2c
 3586 0a53 45010000 		.4byte	0x145
 3587 0a57 01       		.byte	0x1
 3588 0a58 2D       		.uleb128 0x2d
 3589 0a59 18000000 		.4byte	.Ldebug_ranges0+0x18
 3590 0a5d 2C       		.uleb128 0x2c
 3591 0a5e 45010000 		.4byte	0x145
 3592 0a62 01       		.byte	0x1
 3593 0a63 00       		.byte	0
 3594 0a64 00       		.byte	0
 3595 0a65 2B       		.uleb128 0x2b
 3596 0a66 19040000 		.4byte	0x419
 3597 0a6a 08000000 		.4byte	.LBB75
 3598 0a6e 38000000 		.4byte	.Ldebug_ranges0+0x38
 3599 0a72 01       		.byte	0x1
 3600 0a73 6A0A     		.2byte	0xa6a
 3601 0a75 A40A0000 		.4byte	0xaa4
 3602 0a79 1F       		.uleb128 0x1f
 3603 0a7a 36040000 		.4byte	0x436
 3604 0a7e 06       		.uleb128 0x6
 3605 0a7f 03       		.byte	0x3
 3606 0a80 00000000 		.4byte	CySysTickServiceCallbacks
 3607 0a84 9F       		.byte	0x9f
 3608 0a85 2C       		.uleb128 0x2c
 3609 0a86 2A040000 		.4byte	0x42a
 3610 0a8a 0F       		.byte	0xf
 3611 0a8b 2D       		.uleb128 0x2d
 3612 0a8c 38000000 		.4byte	.Ldebug_ranges0+0x38
 3613 0a90 19       		.uleb128 0x19
 3614 0a91 42040000 		.4byte	0x442
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 123


 3615 0a95 31060000 		.4byte	.LLST51
 3616 0a99 21       		.uleb128 0x21
 3617 0a9a 4E040000 		.4byte	0x44e
 3618 0a9e 00000020 		.4byte	0x20000000
 3619 0aa2 00       		.byte	0
 3620 0aa3 00       		.byte	0
 3621 0aa4 2B       		.uleb128 0x2b
 3622 0aa5 D4060000 		.4byte	0x6d4
 3623 0aa9 2C000000 		.4byte	.LBB83
 3624 0aad 58000000 		.4byte	.Ldebug_ranges0+0x58
 3625 0ab1 01       		.byte	0x1
 3626 0ab2 720A     		.2byte	0xa72
 3627 0ab4 BF0A0000 		.4byte	0xabf
 3628 0ab8 2C       		.uleb128 0x2c
 3629 0ab9 E1060000 		.4byte	0x6e1
 3630 0abd 0F       		.byte	0xf
 3631 0abe 00       		.byte	0
 3632 0abf 2B       		.uleb128 0x2b
 3633 0ac0 6A010000 		.4byte	0x16a
 3634 0ac4 2E000000 		.4byte	.LBB87
 3635 0ac8 78000000 		.4byte	.Ldebug_ranges0+0x78
 3636 0acc 01       		.byte	0x1
 3637 0acd 700A     		.2byte	0xa70
 3638 0acf DB0A0000 		.4byte	0xadb
 3639 0ad3 1F       		.uleb128 0x1f
 3640 0ad4 77010000 		.4byte	0x177
 3641 0ad8 01       		.uleb128 0x1
 3642 0ad9 50       		.byte	0x50
 3643 0ada 00       		.byte	0
 3644 0adb 2E       		.uleb128 0x2e
 3645 0adc 84010000 		.4byte	0x184
 3646 0ae0 34000000 		.4byte	.LBB92
 3647 0ae4 04000000 		.4byte	.LBE92-.LBB92
 3648 0ae8 01       		.byte	0x1
 3649 0ae9 710A     		.2byte	0xa71
 3650 0aeb 00       		.byte	0
 3651 0aec 17       		.uleb128 0x17
 3652 0aed DC060000 		.4byte	.LASF87
 3653 0af1 01       		.byte	0x1
 3654 0af2 910A     		.2byte	0xa91
 3655 0af4 00000000 		.4byte	.LFB39
 3656 0af8 10000000 		.4byte	.LFE39-.LFB39
 3657 0afc 01       		.uleb128 0x1
 3658 0afd 9C       		.byte	0x9c
 3659 0afe 17       		.uleb128 0x17
 3660 0aff D5010000 		.4byte	.LASF88
 3661 0b03 01       		.byte	0x1
 3662 0b04 A10A     		.2byte	0xaa1
 3663 0b06 00000000 		.4byte	.LFB40
 3664 0b0a 10000000 		.4byte	.LFE40-.LFB40
 3665 0b0e 01       		.uleb128 0x1
 3666 0b0f 9C       		.byte	0x9c
 3667 0b10 11       		.uleb128 0x11
 3668 0b11 0D060000 		.4byte	.LASF89
 3669 0b15 01       		.byte	0x1
 3670 0b16 800A     		.2byte	0xa80
 3671 0b18 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 124


 3672 0b1c 18000000 		.4byte	.LFE38-.LFB38
 3673 0b20 01       		.uleb128 0x1
 3674 0b21 9C       		.byte	0x9c
 3675 0b22 300B0000 		.4byte	0xb30
 3676 0b26 14       		.uleb128 0x14
 3677 0b27 06000000 		.4byte	.LVL134
 3678 0b2b FE0A0000 		.4byte	0xafe
 3679 0b2f 00       		.byte	0
 3680 0b30 11       		.uleb128 0x11
 3681 0b31 7D040000 		.4byte	.LASF90
 3682 0b35 01       		.byte	0x1
 3683 0b36 440A     		.2byte	0xa44
 3684 0b38 00000000 		.4byte	.LFB36
 3685 0b3c 1C000000 		.4byte	.LFE36-.LFB36
 3686 0b40 01       		.uleb128 0x1
 3687 0b41 9C       		.byte	0x9c
 3688 0b42 590B0000 		.4byte	0xb59
 3689 0b46 14       		.uleb128 0x14
 3690 0b47 0E000000 		.4byte	.LVL135
 3691 0b4b 1A0A0000 		.4byte	0xa1a
 3692 0b4f 14       		.uleb128 0x14
 3693 0b50 16000000 		.4byte	.LVL136
 3694 0b54 100B0000 		.4byte	0xb10
 3695 0b58 00       		.byte	0
 3696 0b59 17       		.uleb128 0x17
 3697 0b5a 93060000 		.4byte	.LASF91
 3698 0b5e 01       		.byte	0x1
 3699 0b5f B10A     		.2byte	0xab1
 3700 0b61 00000000 		.4byte	.LFB41
 3701 0b65 10000000 		.4byte	.LFE41-.LFB41
 3702 0b69 01       		.uleb128 0x1
 3703 0b6a 9C       		.byte	0x9c
 3704 0b6b 18       		.uleb128 0x18
 3705 0b6c 6A010000 		.4byte	0x16a
 3706 0b70 00000000 		.4byte	.LFB42
 3707 0b74 10000000 		.4byte	.LFE42-.LFB42
 3708 0b78 01       		.uleb128 0x1
 3709 0b79 9C       		.byte	0x9c
 3710 0b7a 880B0000 		.4byte	0xb88
 3711 0b7e 1B       		.uleb128 0x1b
 3712 0b7f 77010000 		.4byte	0x177
 3713 0b83 54060000 		.4byte	.LLST52
 3714 0b87 00       		.byte	0
 3715 0b88 1C       		.uleb128 0x1c
 3716 0b89 36020000 		.4byte	.LASF93
 3717 0b8d 01       		.byte	0x1
 3718 0b8e D20A     		.2byte	0xad2
 3719 0b90 83000000 		.4byte	0x83
 3720 0b94 00000000 		.4byte	.LFB43
 3721 0b98 10000000 		.4byte	.LFE43-.LFB43
 3722 0b9c 01       		.uleb128 0x1
 3723 0b9d 9C       		.byte	0x9c
 3724 0b9e 1C       		.uleb128 0x1c
 3725 0b9f EB040000 		.4byte	.LASF94
 3726 0ba3 01       		.byte	0x1
 3727 0ba4 E20A     		.2byte	0xae2
 3728 0ba6 83000000 		.4byte	0x83
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 125


 3729 0baa 00000000 		.4byte	.LFB44
 3730 0bae 10000000 		.4byte	.LFE44-.LFB44
 3731 0bb2 01       		.uleb128 0x1
 3732 0bb3 9C       		.byte	0x9c
 3733 0bb4 18       		.uleb128 0x18
 3734 0bb5 38010000 		.4byte	0x138
 3735 0bb9 00000000 		.4byte	.LFB45
 3736 0bbd 18000000 		.4byte	.LFE45-.LFB45
 3737 0bc1 01       		.uleb128 0x1
 3738 0bc2 9C       		.byte	0x9c
 3739 0bc3 DE0B0000 		.4byte	0xbde
 3740 0bc7 1F       		.uleb128 0x1f
 3741 0bc8 45010000 		.4byte	0x145
 3742 0bcc 01       		.uleb128 0x1
 3743 0bcd 50       		.byte	0x50
 3744 0bce 2D       		.uleb128 0x2d
 3745 0bcf 90000000 		.4byte	.Ldebug_ranges0+0x90
 3746 0bd3 1B       		.uleb128 0x1b
 3747 0bd4 45010000 		.4byte	0x145
 3748 0bd8 75060000 		.4byte	.LLST53
 3749 0bdc 00       		.byte	0
 3750 0bdd 00       		.byte	0
 3751 0bde 1C       		.uleb128 0x1c
 3752 0bdf 7B060000 		.4byte	.LASF95
 3753 0be3 01       		.byte	0x1
 3754 0be4 1B0B     		.2byte	0xb1b
 3755 0be6 83000000 		.4byte	0x83
 3756 0bea 00000000 		.4byte	.LFB46
 3757 0bee 10000000 		.4byte	.LFE46-.LFB46
 3758 0bf2 01       		.uleb128 0x1
 3759 0bf3 9C       		.byte	0x9c
 3760 0bf4 1C       		.uleb128 0x1c
 3761 0bf5 3A030000 		.4byte	.LASF96
 3762 0bf9 01       		.byte	0x1
 3763 0bfa 320B     		.2byte	0xb32
 3764 0bfc 83000000 		.4byte	0x83
 3765 0c00 00000000 		.4byte	.LFB47
 3766 0c04 10000000 		.4byte	.LFE47-.LFB47
 3767 0c08 01       		.uleb128 0x1
 3768 0c09 9C       		.byte	0x9c
 3769 0c0a 2F       		.uleb128 0x2f
 3770 0c0b 52010000 		.4byte	0x152
 3771 0c0f 00000000 		.4byte	.LFB51
 3772 0c13 24000000 		.4byte	.LFE51-.LFB51
 3773 0c17 01       		.uleb128 0x1
 3774 0c18 9C       		.byte	0x9c
 3775 0c19 3F0C0000 		.4byte	0xc3f
 3776 0c1d 30       		.uleb128 0x30
 3777 0c1e 5F010000 		.4byte	0x15f
 3778 0c22 31       		.uleb128 0x31
 3779 0c23 0C000000 		.4byte	.LBB103
 3780 0c27 10000000 		.4byte	.LBE103-.LBB103
 3781 0c2b 350C0000 		.4byte	0xc35
 3782 0c2f 30       		.uleb128 0x30
 3783 0c30 5F010000 		.4byte	0x15f
 3784 0c34 00       		.byte	0
 3785 0c35 14       		.uleb128 0x14
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 126


 3786 0c36 06000000 		.4byte	.LVL142
 3787 0c3a F40B0000 		.4byte	0xbf4
 3788 0c3e 00       		.byte	0
 3789 0c3f 1D       		.uleb128 0x1d
 3790 0c40 84010000 		.4byte	0x184
 3791 0c44 00000000 		.4byte	.LFB48
 3792 0c48 0C000000 		.4byte	.LFE48-.LFB48
 3793 0c4c 01       		.uleb128 0x1
 3794 0c4d 9C       		.byte	0x9c
 3795 0c4e 16       		.uleb128 0x16
 3796 0c4f 34060000 		.4byte	.LASF97
 3797 0c53 01       		.byte	0x1
 3798 0c54 620B     		.2byte	0xb62
 3799 0c56 EC000000 		.4byte	0xec
 3800 0c5a 00000000 		.4byte	.LFB49
 3801 0c5e 10000000 		.4byte	.LFE49-.LFB49
 3802 0c62 01       		.uleb128 0x1
 3803 0c63 9C       		.byte	0x9c
 3804 0c64 950C0000 		.4byte	0xc95
 3805 0c68 12       		.uleb128 0x12
 3806 0c69 1E040000 		.4byte	.LASF53
 3807 0c6d 01       		.byte	0x1
 3808 0c6e 620B     		.2byte	0xb62
 3809 0c70 83000000 		.4byte	0x83
 3810 0c74 89060000 		.4byte	.LLST54
 3811 0c78 15       		.uleb128 0x15
 3812 0c79 D1040000 		.4byte	.LASF98
 3813 0c7d 01       		.byte	0x1
 3814 0c7e 620B     		.2byte	0xb62
 3815 0c80 EC000000 		.4byte	0xec
 3816 0c84 01       		.uleb128 0x1
 3817 0c85 51       		.byte	0x51
 3818 0c86 1E       		.uleb128 0x1e
 3819 0c87 E8000000 		.4byte	.LASF99
 3820 0c8b 01       		.byte	0x1
 3821 0c8c 640B     		.2byte	0xb64
 3822 0c8e EC000000 		.4byte	0xec
 3823 0c92 01       		.uleb128 0x1
 3824 0c93 50       		.byte	0x50
 3825 0c94 00       		.byte	0
 3826 0c95 16       		.uleb128 0x16
 3827 0c96 5F020000 		.4byte	.LASF100
 3828 0c9a 01       		.byte	0x1
 3829 0c9b 7A0B     		.2byte	0xb7a
 3830 0c9d EC000000 		.4byte	0xec
 3831 0ca1 00000000 		.4byte	.LFB50
 3832 0ca5 0C000000 		.4byte	.LFE50-.LFB50
 3833 0ca9 01       		.uleb128 0x1
 3834 0caa 9C       		.byte	0x9c
 3835 0cab C00C0000 		.4byte	0xcc0
 3836 0caf 12       		.uleb128 0x12
 3837 0cb0 1E040000 		.4byte	.LASF53
 3838 0cb4 01       		.byte	0x1
 3839 0cb5 7A0B     		.2byte	0xb7a
 3840 0cb7 83000000 		.4byte	0x83
 3841 0cbb AA060000 		.4byte	.LLST55
 3842 0cbf 00       		.byte	0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 127


 3843 0cc0 11       		.uleb128 0x11
 3844 0cc1 2C030000 		.4byte	.LASF101
 3845 0cc5 01       		.byte	0x1
 3846 0cc6 A70B     		.2byte	0xba7
 3847 0cc8 00000000 		.4byte	.LFB52
 3848 0ccc 70000000 		.4byte	.LFE52-.LFB52
 3849 0cd0 01       		.uleb128 0x1
 3850 0cd1 9C       		.byte	0x9c
 3851 0cd2 E50C0000 		.4byte	0xce5
 3852 0cd6 15       		.uleb128 0x15
 3853 0cd7 6A060000 		.4byte	.LASF102
 3854 0cdb 01       		.byte	0x1
 3855 0cdc A70B     		.2byte	0xba7
 3856 0cde E50C0000 		.4byte	0xce5
 3857 0ce2 01       		.uleb128 0x1
 3858 0ce3 50       		.byte	0x50
 3859 0ce4 00       		.byte	0
 3860 0ce5 06       		.uleb128 0x6
 3861 0ce6 04       		.byte	0x4
 3862 0ce7 83000000 		.4byte	0x83
 3863 0ceb 32       		.uleb128 0x32
 3864 0cec EC000000 		.4byte	0xec
 3865 0cf0 FB0C0000 		.4byte	0xcfb
 3866 0cf4 33       		.uleb128 0x33
 3867 0cf5 E5000000 		.4byte	0xe5
 3868 0cf9 04       		.byte	0x4
 3869 0cfa 00       		.byte	0
 3870 0cfb 34       		.uleb128 0x34
 3871 0cfc 49060000 		.4byte	.LASF103
 3872 0d00 01       		.byte	0x1
 3873 0d01 22       		.byte	0x22
 3874 0d02 EB0C0000 		.4byte	0xceb
 3875 0d06 05       		.uleb128 0x5
 3876 0d07 03       		.byte	0x3
 3877 0d08 00000000 		.4byte	CySysTickCallbacks
 3878 0d0c 35       		.uleb128 0x35
 3879 0d0d FD040000 		.4byte	.LASF104
 3880 0d11 01       		.byte	0x1
 3881 0d12 1B       		.byte	0x1b
 3882 0d13 83000000 		.4byte	0x83
 3883 0d17 05       		.uleb128 0x5
 3884 0d18 03       		.byte	0x3
 3885 0d19 00000000 		.4byte	cydelayFreqHz
 3886 0d1d 35       		.uleb128 0x35
 3887 0d1e 7A020000 		.4byte	.LASF105
 3888 0d22 01       		.byte	0x1
 3889 0d23 1C       		.byte	0x1c
 3890 0d24 83000000 		.4byte	0x83
 3891 0d28 05       		.uleb128 0x5
 3892 0d29 03       		.byte	0x3
 3893 0d2a 00000000 		.4byte	cydelayFreqKhz
 3894 0d2e 35       		.uleb128 0x35
 3895 0d2f BD060000 		.4byte	.LASF106
 3896 0d33 01       		.byte	0x1
 3897 0d34 1D       		.byte	0x1d
 3898 0d35 6B000000 		.4byte	0x6b
 3899 0d39 05       		.uleb128 0x5
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 128


 3900 0d3a 03       		.byte	0x3
 3901 0d3b 00000000 		.4byte	cydelayFreqMhz
 3902 0d3f 35       		.uleb128 0x35
 3903 0d40 FF020000 		.4byte	.LASF107
 3904 0d44 01       		.byte	0x1
 3905 0d45 1E       		.byte	0x1e
 3906 0d46 83000000 		.4byte	0x83
 3907 0d4a 05       		.uleb128 0x5
 3908 0d4b 03       		.byte	0x3
 3909 0d4c 00000000 		.4byte	cydelay32kMs
 3910 0d50 35       		.uleb128 0x35
 3911 0d51 29010000 		.4byte	.LASF108
 3912 0d55 01       		.byte	0x1
 3913 0d56 36       		.byte	0x36
 3914 0d57 83000000 		.4byte	0x83
 3915 0d5b 05       		.uleb128 0x5
 3916 0d5c 03       		.byte	0x3
 3917 0d5d 00000000 		.4byte	CySysTickInitVar
 3918 0d61 32       		.uleb128 0x32
 3919 0d62 6B000000 		.4byte	0x6b
 3920 0d66 710D0000 		.4byte	0xd71
 3921 0d6a 33       		.uleb128 0x33
 3922 0d6b E5000000 		.4byte	0xe5
 3923 0d6f 2D       		.byte	0x2d
 3924 0d70 00       		.byte	0
 3925 0d71 35       		.uleb128 0x35
 3926 0d72 DA040000 		.4byte	.LASF109
 3927 0d76 01       		.byte	0x1
 3928 0d77 3B       		.byte	0x3b
 3929 0d78 820D0000 		.4byte	0xd82
 3930 0d7c 05       		.uleb128 0x5
 3931 0d7d 03       		.byte	0x3
 3932 0d7e 00000000 		.4byte	cyImoFreqMhz2Reg
 3933 0d82 36       		.uleb128 0x36
 3934 0d83 610D0000 		.4byte	0xd61
 3935 0d87 35       		.uleb128 0x35
 3936 0d88 CE000000 		.4byte	.LASF110
 3937 0d8c 01       		.byte	0x1
 3938 0d8d 5B       		.byte	0x5b
 3939 0d8e 83000000 		.4byte	0x83
 3940 0d92 05       		.uleb128 0x5
 3941 0d93 03       		.byte	0x3
 3942 0d94 00000000 		.4byte	CySysClkPumpConfig
 3943 0d98 37       		.uleb128 0x37
 3944 0d99 A9030000 		.4byte	.LASF116
 3945 0d9d 03       		.byte	0x3
 3946 0d9e E5       		.byte	0xe5
 3947 0d9f 6B000000 		.4byte	0x6b
 3948 0da3 38       		.uleb128 0x38
 3949 0da4 22050000 		.4byte	.LASF111
 3950 0da8 03       		.byte	0x3
 3951 0da9 E6       		.byte	0xe6
 3952 0daa B40D0000 		.4byte	0xdb4
 3953 0dae 39       		.uleb128 0x39
 3954 0daf 6B000000 		.4byte	0x6b
 3955 0db3 00       		.byte	0
 3956 0db4 3A       		.uleb128 0x3a
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 129


 3957 0db5 75050000 		.4byte	.LASF117
 3958 0db9 03       		.byte	0x3
 3959 0dba DC       		.byte	0xdc
 3960 0dbb 39       		.uleb128 0x39
 3961 0dbc 83000000 		.4byte	0x83
 3962 0dc0 00       		.byte	0
 3963 0dc1 00       		.byte	0
 3964              		.section	.debug_abbrev,"",%progbits
 3965              	.Ldebug_abbrev0:
 3966 0000 01       		.uleb128 0x1
 3967 0001 11       		.uleb128 0x11
 3968 0002 01       		.byte	0x1
 3969 0003 25       		.uleb128 0x25
 3970 0004 0E       		.uleb128 0xe
 3971 0005 13       		.uleb128 0x13
 3972 0006 0B       		.uleb128 0xb
 3973 0007 03       		.uleb128 0x3
 3974 0008 0E       		.uleb128 0xe
 3975 0009 1B       		.uleb128 0x1b
 3976 000a 0E       		.uleb128 0xe
 3977 000b 55       		.uleb128 0x55
 3978 000c 17       		.uleb128 0x17
 3979 000d 11       		.uleb128 0x11
 3980 000e 01       		.uleb128 0x1
 3981 000f 10       		.uleb128 0x10
 3982 0010 17       		.uleb128 0x17
 3983 0011 00       		.byte	0
 3984 0012 00       		.byte	0
 3985 0013 02       		.uleb128 0x2
 3986 0014 24       		.uleb128 0x24
 3987 0015 00       		.byte	0
 3988 0016 0B       		.uleb128 0xb
 3989 0017 0B       		.uleb128 0xb
 3990 0018 3E       		.uleb128 0x3e
 3991 0019 0B       		.uleb128 0xb
 3992 001a 03       		.uleb128 0x3
 3993 001b 0E       		.uleb128 0xe
 3994 001c 00       		.byte	0
 3995 001d 00       		.byte	0
 3996 001e 03       		.uleb128 0x3
 3997 001f 24       		.uleb128 0x24
 3998 0020 00       		.byte	0
 3999 0021 0B       		.uleb128 0xb
 4000 0022 0B       		.uleb128 0xb
 4001 0023 3E       		.uleb128 0x3e
 4002 0024 0B       		.uleb128 0xb
 4003 0025 03       		.uleb128 0x3
 4004 0026 08       		.uleb128 0x8
 4005 0027 00       		.byte	0
 4006 0028 00       		.byte	0
 4007 0029 04       		.uleb128 0x4
 4008 002a 16       		.uleb128 0x16
 4009 002b 00       		.byte	0
 4010 002c 03       		.uleb128 0x3
 4011 002d 0E       		.uleb128 0xe
 4012 002e 3A       		.uleb128 0x3a
 4013 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 130


 4014 0030 3B       		.uleb128 0x3b
 4015 0031 05       		.uleb128 0x5
 4016 0032 49       		.uleb128 0x49
 4017 0033 13       		.uleb128 0x13
 4018 0034 00       		.byte	0
 4019 0035 00       		.byte	0
 4020 0036 05       		.uleb128 0x5
 4021 0037 35       		.uleb128 0x35
 4022 0038 00       		.byte	0
 4023 0039 49       		.uleb128 0x49
 4024 003a 13       		.uleb128 0x13
 4025 003b 00       		.byte	0
 4026 003c 00       		.byte	0
 4027 003d 06       		.uleb128 0x6
 4028 003e 0F       		.uleb128 0xf
 4029 003f 00       		.byte	0
 4030 0040 0B       		.uleb128 0xb
 4031 0041 0B       		.uleb128 0xb
 4032 0042 49       		.uleb128 0x49
 4033 0043 13       		.uleb128 0x13
 4034 0044 00       		.byte	0
 4035 0045 00       		.byte	0
 4036 0046 07       		.uleb128 0x7
 4037 0047 15       		.uleb128 0x15
 4038 0048 00       		.byte	0
 4039 0049 27       		.uleb128 0x27
 4040 004a 19       		.uleb128 0x19
 4041 004b 00       		.byte	0
 4042 004c 00       		.byte	0
 4043 004d 08       		.uleb128 0x8
 4044 004e 16       		.uleb128 0x16
 4045 004f 00       		.byte	0
 4046 0050 03       		.uleb128 0x3
 4047 0051 0E       		.uleb128 0xe
 4048 0052 3A       		.uleb128 0x3a
 4049 0053 0B       		.uleb128 0xb
 4050 0054 3B       		.uleb128 0x3b
 4051 0055 0B       		.uleb128 0xb
 4052 0056 49       		.uleb128 0x49
 4053 0057 13       		.uleb128 0x13
 4054 0058 00       		.byte	0
 4055 0059 00       		.byte	0
 4056 005a 09       		.uleb128 0x9
 4057 005b 2E       		.uleb128 0x2e
 4058 005c 01       		.byte	0x1
 4059 005d 3F       		.uleb128 0x3f
 4060 005e 19       		.uleb128 0x19
 4061 005f 03       		.uleb128 0x3
 4062 0060 0E       		.uleb128 0xe
 4063 0061 3A       		.uleb128 0x3a
 4064 0062 0B       		.uleb128 0xb
 4065 0063 3B       		.uleb128 0x3b
 4066 0064 05       		.uleb128 0x5
 4067 0065 27       		.uleb128 0x27
 4068 0066 19       		.uleb128 0x19
 4069 0067 20       		.uleb128 0x20
 4070 0068 0B       		.uleb128 0xb
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 131


 4071 0069 01       		.uleb128 0x1
 4072 006a 13       		.uleb128 0x13
 4073 006b 00       		.byte	0
 4074 006c 00       		.byte	0
 4075 006d 0A       		.uleb128 0xa
 4076 006e 05       		.uleb128 0x5
 4077 006f 00       		.byte	0
 4078 0070 03       		.uleb128 0x3
 4079 0071 0E       		.uleb128 0xe
 4080 0072 3A       		.uleb128 0x3a
 4081 0073 0B       		.uleb128 0xb
 4082 0074 3B       		.uleb128 0x3b
 4083 0075 05       		.uleb128 0x5
 4084 0076 49       		.uleb128 0x49
 4085 0077 13       		.uleb128 0x13
 4086 0078 00       		.byte	0
 4087 0079 00       		.byte	0
 4088 007a 0B       		.uleb128 0xb
 4089 007b 2E       		.uleb128 0x2e
 4090 007c 01       		.byte	0x1
 4091 007d 3F       		.uleb128 0x3f
 4092 007e 19       		.uleb128 0x19
 4093 007f 03       		.uleb128 0x3
 4094 0080 0E       		.uleb128 0xe
 4095 0081 3A       		.uleb128 0x3a
 4096 0082 0B       		.uleb128 0xb
 4097 0083 3B       		.uleb128 0x3b
 4098 0084 05       		.uleb128 0x5
 4099 0085 27       		.uleb128 0x27
 4100 0086 19       		.uleb128 0x19
 4101 0087 49       		.uleb128 0x49
 4102 0088 13       		.uleb128 0x13
 4103 0089 20       		.uleb128 0x20
 4104 008a 0B       		.uleb128 0xb
 4105 008b 01       		.uleb128 0x1
 4106 008c 13       		.uleb128 0x13
 4107 008d 00       		.byte	0
 4108 008e 00       		.byte	0
 4109 008f 0C       		.uleb128 0xc
 4110 0090 34       		.uleb128 0x34
 4111 0091 00       		.byte	0
 4112 0092 03       		.uleb128 0x3
 4113 0093 0E       		.uleb128 0xe
 4114 0094 3A       		.uleb128 0x3a
 4115 0095 0B       		.uleb128 0xb
 4116 0096 3B       		.uleb128 0x3b
 4117 0097 05       		.uleb128 0x5
 4118 0098 49       		.uleb128 0x49
 4119 0099 13       		.uleb128 0x13
 4120 009a 00       		.byte	0
 4121 009b 00       		.byte	0
 4122 009c 0D       		.uleb128 0xd
 4123 009d 2E       		.uleb128 0x2e
 4124 009e 00       		.byte	0
 4125 009f 3F       		.uleb128 0x3f
 4126 00a0 19       		.uleb128 0x19
 4127 00a1 03       		.uleb128 0x3
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 132


 4128 00a2 0E       		.uleb128 0xe
 4129 00a3 3A       		.uleb128 0x3a
 4130 00a4 0B       		.uleb128 0xb
 4131 00a5 3B       		.uleb128 0x3b
 4132 00a6 05       		.uleb128 0x5
 4133 00a7 27       		.uleb128 0x27
 4134 00a8 19       		.uleb128 0x19
 4135 00a9 20       		.uleb128 0x20
 4136 00aa 0B       		.uleb128 0xb
 4137 00ab 00       		.byte	0
 4138 00ac 00       		.byte	0
 4139 00ad 0E       		.uleb128 0xe
 4140 00ae 2E       		.uleb128 0x2e
 4141 00af 01       		.byte	0x1
 4142 00b0 03       		.uleb128 0x3
 4143 00b1 0E       		.uleb128 0xe
 4144 00b2 3A       		.uleb128 0x3a
 4145 00b3 0B       		.uleb128 0xb
 4146 00b4 3B       		.uleb128 0x3b
 4147 00b5 05       		.uleb128 0x5
 4148 00b6 27       		.uleb128 0x27
 4149 00b7 19       		.uleb128 0x19
 4150 00b8 20       		.uleb128 0x20
 4151 00b9 0B       		.uleb128 0xb
 4152 00ba 01       		.uleb128 0x1
 4153 00bb 13       		.uleb128 0x13
 4154 00bc 00       		.byte	0
 4155 00bd 00       		.byte	0
 4156 00be 0F       		.uleb128 0xf
 4157 00bf 34       		.uleb128 0x34
 4158 00c0 00       		.byte	0
 4159 00c1 03       		.uleb128 0x3
 4160 00c2 08       		.uleb128 0x8
 4161 00c3 3A       		.uleb128 0x3a
 4162 00c4 0B       		.uleb128 0xb
 4163 00c5 3B       		.uleb128 0x3b
 4164 00c6 05       		.uleb128 0x5
 4165 00c7 49       		.uleb128 0x49
 4166 00c8 13       		.uleb128 0x13
 4167 00c9 00       		.byte	0
 4168 00ca 00       		.byte	0
 4169 00cb 10       		.uleb128 0x10
 4170 00cc 2E       		.uleb128 0x2e
 4171 00cd 00       		.byte	0
 4172 00ce 3F       		.uleb128 0x3f
 4173 00cf 19       		.uleb128 0x19
 4174 00d0 03       		.uleb128 0x3
 4175 00d1 0E       		.uleb128 0xe
 4176 00d2 3A       		.uleb128 0x3a
 4177 00d3 0B       		.uleb128 0xb
 4178 00d4 3B       		.uleb128 0x3b
 4179 00d5 0B       		.uleb128 0xb
 4180 00d6 27       		.uleb128 0x27
 4181 00d7 19       		.uleb128 0x19
 4182 00d8 11       		.uleb128 0x11
 4183 00d9 01       		.uleb128 0x1
 4184 00da 12       		.uleb128 0x12
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 133


 4185 00db 06       		.uleb128 0x6
 4186 00dc 40       		.uleb128 0x40
 4187 00dd 18       		.uleb128 0x18
 4188 00de 9742     		.uleb128 0x2117
 4189 00e0 19       		.uleb128 0x19
 4190 00e1 00       		.byte	0
 4191 00e2 00       		.byte	0
 4192 00e3 11       		.uleb128 0x11
 4193 00e4 2E       		.uleb128 0x2e
 4194 00e5 01       		.byte	0x1
 4195 00e6 3F       		.uleb128 0x3f
 4196 00e7 19       		.uleb128 0x19
 4197 00e8 03       		.uleb128 0x3
 4198 00e9 0E       		.uleb128 0xe
 4199 00ea 3A       		.uleb128 0x3a
 4200 00eb 0B       		.uleb128 0xb
 4201 00ec 3B       		.uleb128 0x3b
 4202 00ed 05       		.uleb128 0x5
 4203 00ee 27       		.uleb128 0x27
 4204 00ef 19       		.uleb128 0x19
 4205 00f0 11       		.uleb128 0x11
 4206 00f1 01       		.uleb128 0x1
 4207 00f2 12       		.uleb128 0x12
 4208 00f3 06       		.uleb128 0x6
 4209 00f4 40       		.uleb128 0x40
 4210 00f5 18       		.uleb128 0x18
 4211 00f6 9742     		.uleb128 0x2117
 4212 00f8 19       		.uleb128 0x19
 4213 00f9 01       		.uleb128 0x1
 4214 00fa 13       		.uleb128 0x13
 4215 00fb 00       		.byte	0
 4216 00fc 00       		.byte	0
 4217 00fd 12       		.uleb128 0x12
 4218 00fe 05       		.uleb128 0x5
 4219 00ff 00       		.byte	0
 4220 0100 03       		.uleb128 0x3
 4221 0101 0E       		.uleb128 0xe
 4222 0102 3A       		.uleb128 0x3a
 4223 0103 0B       		.uleb128 0xb
 4224 0104 3B       		.uleb128 0x3b
 4225 0105 05       		.uleb128 0x5
 4226 0106 49       		.uleb128 0x49
 4227 0107 13       		.uleb128 0x13
 4228 0108 02       		.uleb128 0x2
 4229 0109 17       		.uleb128 0x17
 4230 010a 00       		.byte	0
 4231 010b 00       		.byte	0
 4232 010c 13       		.uleb128 0x13
 4233 010d 34       		.uleb128 0x34
 4234 010e 00       		.byte	0
 4235 010f 03       		.uleb128 0x3
 4236 0110 0E       		.uleb128 0xe
 4237 0111 3A       		.uleb128 0x3a
 4238 0112 0B       		.uleb128 0xb
 4239 0113 3B       		.uleb128 0x3b
 4240 0114 05       		.uleb128 0x5
 4241 0115 49       		.uleb128 0x49
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 134


 4242 0116 13       		.uleb128 0x13
 4243 0117 02       		.uleb128 0x2
 4244 0118 17       		.uleb128 0x17
 4245 0119 00       		.byte	0
 4246 011a 00       		.byte	0
 4247 011b 14       		.uleb128 0x14
 4248 011c 898201   		.uleb128 0x4109
 4249 011f 00       		.byte	0
 4250 0120 11       		.uleb128 0x11
 4251 0121 01       		.uleb128 0x1
 4252 0122 31       		.uleb128 0x31
 4253 0123 13       		.uleb128 0x13
 4254 0124 00       		.byte	0
 4255 0125 00       		.byte	0
 4256 0126 15       		.uleb128 0x15
 4257 0127 05       		.uleb128 0x5
 4258 0128 00       		.byte	0
 4259 0129 03       		.uleb128 0x3
 4260 012a 0E       		.uleb128 0xe
 4261 012b 3A       		.uleb128 0x3a
 4262 012c 0B       		.uleb128 0xb
 4263 012d 3B       		.uleb128 0x3b
 4264 012e 05       		.uleb128 0x5
 4265 012f 49       		.uleb128 0x49
 4266 0130 13       		.uleb128 0x13
 4267 0131 02       		.uleb128 0x2
 4268 0132 18       		.uleb128 0x18
 4269 0133 00       		.byte	0
 4270 0134 00       		.byte	0
 4271 0135 16       		.uleb128 0x16
 4272 0136 2E       		.uleb128 0x2e
 4273 0137 01       		.byte	0x1
 4274 0138 3F       		.uleb128 0x3f
 4275 0139 19       		.uleb128 0x19
 4276 013a 03       		.uleb128 0x3
 4277 013b 0E       		.uleb128 0xe
 4278 013c 3A       		.uleb128 0x3a
 4279 013d 0B       		.uleb128 0xb
 4280 013e 3B       		.uleb128 0x3b
 4281 013f 05       		.uleb128 0x5
 4282 0140 27       		.uleb128 0x27
 4283 0141 19       		.uleb128 0x19
 4284 0142 49       		.uleb128 0x49
 4285 0143 13       		.uleb128 0x13
 4286 0144 11       		.uleb128 0x11
 4287 0145 01       		.uleb128 0x1
 4288 0146 12       		.uleb128 0x12
 4289 0147 06       		.uleb128 0x6
 4290 0148 40       		.uleb128 0x40
 4291 0149 18       		.uleb128 0x18
 4292 014a 9742     		.uleb128 0x2117
 4293 014c 19       		.uleb128 0x19
 4294 014d 01       		.uleb128 0x1
 4295 014e 13       		.uleb128 0x13
 4296 014f 00       		.byte	0
 4297 0150 00       		.byte	0
 4298 0151 17       		.uleb128 0x17
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 135


 4299 0152 2E       		.uleb128 0x2e
 4300 0153 00       		.byte	0
 4301 0154 3F       		.uleb128 0x3f
 4302 0155 19       		.uleb128 0x19
 4303 0156 03       		.uleb128 0x3
 4304 0157 0E       		.uleb128 0xe
 4305 0158 3A       		.uleb128 0x3a
 4306 0159 0B       		.uleb128 0xb
 4307 015a 3B       		.uleb128 0x3b
 4308 015b 05       		.uleb128 0x5
 4309 015c 27       		.uleb128 0x27
 4310 015d 19       		.uleb128 0x19
 4311 015e 11       		.uleb128 0x11
 4312 015f 01       		.uleb128 0x1
 4313 0160 12       		.uleb128 0x12
 4314 0161 06       		.uleb128 0x6
 4315 0162 40       		.uleb128 0x40
 4316 0163 18       		.uleb128 0x18
 4317 0164 9742     		.uleb128 0x2117
 4318 0166 19       		.uleb128 0x19
 4319 0167 00       		.byte	0
 4320 0168 00       		.byte	0
 4321 0169 18       		.uleb128 0x18
 4322 016a 2E       		.uleb128 0x2e
 4323 016b 01       		.byte	0x1
 4324 016c 31       		.uleb128 0x31
 4325 016d 13       		.uleb128 0x13
 4326 016e 11       		.uleb128 0x11
 4327 016f 01       		.uleb128 0x1
 4328 0170 12       		.uleb128 0x12
 4329 0171 06       		.uleb128 0x6
 4330 0172 40       		.uleb128 0x40
 4331 0173 18       		.uleb128 0x18
 4332 0174 9742     		.uleb128 0x2117
 4333 0176 19       		.uleb128 0x19
 4334 0177 01       		.uleb128 0x1
 4335 0178 13       		.uleb128 0x13
 4336 0179 00       		.byte	0
 4337 017a 00       		.byte	0
 4338 017b 19       		.uleb128 0x19
 4339 017c 34       		.uleb128 0x34
 4340 017d 00       		.byte	0
 4341 017e 31       		.uleb128 0x31
 4342 017f 13       		.uleb128 0x13
 4343 0180 02       		.uleb128 0x2
 4344 0181 17       		.uleb128 0x17
 4345 0182 00       		.byte	0
 4346 0183 00       		.byte	0
 4347 0184 1A       		.uleb128 0x1a
 4348 0185 1D       		.uleb128 0x1d
 4349 0186 01       		.byte	0x1
 4350 0187 31       		.uleb128 0x31
 4351 0188 13       		.uleb128 0x13
 4352 0189 11       		.uleb128 0x11
 4353 018a 01       		.uleb128 0x1
 4354 018b 12       		.uleb128 0x12
 4355 018c 06       		.uleb128 0x6
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 136


 4356 018d 58       		.uleb128 0x58
 4357 018e 0B       		.uleb128 0xb
 4358 018f 59       		.uleb128 0x59
 4359 0190 05       		.uleb128 0x5
 4360 0191 01       		.uleb128 0x1
 4361 0192 13       		.uleb128 0x13
 4362 0193 00       		.byte	0
 4363 0194 00       		.byte	0
 4364 0195 1B       		.uleb128 0x1b
 4365 0196 05       		.uleb128 0x5
 4366 0197 00       		.byte	0
 4367 0198 31       		.uleb128 0x31
 4368 0199 13       		.uleb128 0x13
 4369 019a 02       		.uleb128 0x2
 4370 019b 17       		.uleb128 0x17
 4371 019c 00       		.byte	0
 4372 019d 00       		.byte	0
 4373 019e 1C       		.uleb128 0x1c
 4374 019f 2E       		.uleb128 0x2e
 4375 01a0 00       		.byte	0
 4376 01a1 3F       		.uleb128 0x3f
 4377 01a2 19       		.uleb128 0x19
 4378 01a3 03       		.uleb128 0x3
 4379 01a4 0E       		.uleb128 0xe
 4380 01a5 3A       		.uleb128 0x3a
 4381 01a6 0B       		.uleb128 0xb
 4382 01a7 3B       		.uleb128 0x3b
 4383 01a8 05       		.uleb128 0x5
 4384 01a9 27       		.uleb128 0x27
 4385 01aa 19       		.uleb128 0x19
 4386 01ab 49       		.uleb128 0x49
 4387 01ac 13       		.uleb128 0x13
 4388 01ad 11       		.uleb128 0x11
 4389 01ae 01       		.uleb128 0x1
 4390 01af 12       		.uleb128 0x12
 4391 01b0 06       		.uleb128 0x6
 4392 01b1 40       		.uleb128 0x40
 4393 01b2 18       		.uleb128 0x18
 4394 01b3 9742     		.uleb128 0x2117
 4395 01b5 19       		.uleb128 0x19
 4396 01b6 00       		.byte	0
 4397 01b7 00       		.byte	0
 4398 01b8 1D       		.uleb128 0x1d
 4399 01b9 2E       		.uleb128 0x2e
 4400 01ba 00       		.byte	0
 4401 01bb 31       		.uleb128 0x31
 4402 01bc 13       		.uleb128 0x13
 4403 01bd 11       		.uleb128 0x11
 4404 01be 01       		.uleb128 0x1
 4405 01bf 12       		.uleb128 0x12
 4406 01c0 06       		.uleb128 0x6
 4407 01c1 40       		.uleb128 0x40
 4408 01c2 18       		.uleb128 0x18
 4409 01c3 9742     		.uleb128 0x2117
 4410 01c5 19       		.uleb128 0x19
 4411 01c6 00       		.byte	0
 4412 01c7 00       		.byte	0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 137


 4413 01c8 1E       		.uleb128 0x1e
 4414 01c9 34       		.uleb128 0x34
 4415 01ca 00       		.byte	0
 4416 01cb 03       		.uleb128 0x3
 4417 01cc 0E       		.uleb128 0xe
 4418 01cd 3A       		.uleb128 0x3a
 4419 01ce 0B       		.uleb128 0xb
 4420 01cf 3B       		.uleb128 0x3b
 4421 01d0 05       		.uleb128 0x5
 4422 01d1 49       		.uleb128 0x49
 4423 01d2 13       		.uleb128 0x13
 4424 01d3 02       		.uleb128 0x2
 4425 01d4 18       		.uleb128 0x18
 4426 01d5 00       		.byte	0
 4427 01d6 00       		.byte	0
 4428 01d7 1F       		.uleb128 0x1f
 4429 01d8 05       		.uleb128 0x5
 4430 01d9 00       		.byte	0
 4431 01da 31       		.uleb128 0x31
 4432 01db 13       		.uleb128 0x13
 4433 01dc 02       		.uleb128 0x2
 4434 01dd 18       		.uleb128 0x18
 4435 01de 00       		.byte	0
 4436 01df 00       		.byte	0
 4437 01e0 20       		.uleb128 0x20
 4438 01e1 34       		.uleb128 0x34
 4439 01e2 00       		.byte	0
 4440 01e3 31       		.uleb128 0x31
 4441 01e4 13       		.uleb128 0x13
 4442 01e5 02       		.uleb128 0x2
 4443 01e6 18       		.uleb128 0x18
 4444 01e7 00       		.byte	0
 4445 01e8 00       		.byte	0
 4446 01e9 21       		.uleb128 0x21
 4447 01ea 34       		.uleb128 0x34
 4448 01eb 00       		.byte	0
 4449 01ec 31       		.uleb128 0x31
 4450 01ed 13       		.uleb128 0x13
 4451 01ee 1C       		.uleb128 0x1c
 4452 01ef 06       		.uleb128 0x6
 4453 01f0 00       		.byte	0
 4454 01f1 00       		.byte	0
 4455 01f2 22       		.uleb128 0x22
 4456 01f3 1D       		.uleb128 0x1d
 4457 01f4 01       		.byte	0x1
 4458 01f5 31       		.uleb128 0x31
 4459 01f6 13       		.uleb128 0x13
 4460 01f7 11       		.uleb128 0x11
 4461 01f8 01       		.uleb128 0x1
 4462 01f9 12       		.uleb128 0x12
 4463 01fa 06       		.uleb128 0x6
 4464 01fb 58       		.uleb128 0x58
 4465 01fc 0B       		.uleb128 0xb
 4466 01fd 59       		.uleb128 0x59
 4467 01fe 05       		.uleb128 0x5
 4468 01ff 00       		.byte	0
 4469 0200 00       		.byte	0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 138


 4470 0201 23       		.uleb128 0x23
 4471 0202 34       		.uleb128 0x34
 4472 0203 00       		.byte	0
 4473 0204 03       		.uleb128 0x3
 4474 0205 0E       		.uleb128 0xe
 4475 0206 3A       		.uleb128 0x3a
 4476 0207 0B       		.uleb128 0xb
 4477 0208 3B       		.uleb128 0x3b
 4478 0209 05       		.uleb128 0x5
 4479 020a 49       		.uleb128 0x49
 4480 020b 13       		.uleb128 0x13
 4481 020c 1C       		.uleb128 0x1c
 4482 020d 06       		.uleb128 0x6
 4483 020e 00       		.byte	0
 4484 020f 00       		.byte	0
 4485 0210 24       		.uleb128 0x24
 4486 0211 898201   		.uleb128 0x4109
 4487 0214 01       		.byte	0x1
 4488 0215 11       		.uleb128 0x11
 4489 0216 01       		.uleb128 0x1
 4490 0217 31       		.uleb128 0x31
 4491 0218 13       		.uleb128 0x13
 4492 0219 01       		.uleb128 0x1
 4493 021a 13       		.uleb128 0x13
 4494 021b 00       		.byte	0
 4495 021c 00       		.byte	0
 4496 021d 25       		.uleb128 0x25
 4497 021e 8A8201   		.uleb128 0x410a
 4498 0221 00       		.byte	0
 4499 0222 02       		.uleb128 0x2
 4500 0223 18       		.uleb128 0x18
 4501 0224 9142     		.uleb128 0x2111
 4502 0226 18       		.uleb128 0x18
 4503 0227 00       		.byte	0
 4504 0228 00       		.byte	0
 4505 0229 26       		.uleb128 0x26
 4506 022a 898201   		.uleb128 0x4109
 4507 022d 01       		.byte	0x1
 4508 022e 11       		.uleb128 0x11
 4509 022f 01       		.uleb128 0x1
 4510 0230 31       		.uleb128 0x31
 4511 0231 13       		.uleb128 0x13
 4512 0232 00       		.byte	0
 4513 0233 00       		.byte	0
 4514 0234 27       		.uleb128 0x27
 4515 0235 0B       		.uleb128 0xb
 4516 0236 01       		.byte	0x1
 4517 0237 11       		.uleb128 0x11
 4518 0238 01       		.uleb128 0x1
 4519 0239 12       		.uleb128 0x12
 4520 023a 06       		.uleb128 0x6
 4521 023b 00       		.byte	0
 4522 023c 00       		.byte	0
 4523 023d 28       		.uleb128 0x28
 4524 023e 1D       		.uleb128 0x1d
 4525 023f 00       		.byte	0
 4526 0240 31       		.uleb128 0x31
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 139


 4527 0241 13       		.uleb128 0x13
 4528 0242 52       		.uleb128 0x52
 4529 0243 01       		.uleb128 0x1
 4530 0244 55       		.uleb128 0x55
 4531 0245 17       		.uleb128 0x17
 4532 0246 58       		.uleb128 0x58
 4533 0247 0B       		.uleb128 0xb
 4534 0248 59       		.uleb128 0x59
 4535 0249 05       		.uleb128 0x5
 4536 024a 00       		.byte	0
 4537 024b 00       		.byte	0
 4538 024c 29       		.uleb128 0x29
 4539 024d 2E       		.uleb128 0x2e
 4540 024e 01       		.byte	0x1
 4541 024f 3F       		.uleb128 0x3f
 4542 0250 19       		.uleb128 0x19
 4543 0251 03       		.uleb128 0x3
 4544 0252 0E       		.uleb128 0xe
 4545 0253 3A       		.uleb128 0x3a
 4546 0254 0B       		.uleb128 0xb
 4547 0255 3B       		.uleb128 0x3b
 4548 0256 05       		.uleb128 0x5
 4549 0257 27       		.uleb128 0x27
 4550 0258 19       		.uleb128 0x19
 4551 0259 11       		.uleb128 0x11
 4552 025a 01       		.uleb128 0x1
 4553 025b 12       		.uleb128 0x12
 4554 025c 06       		.uleb128 0x6
 4555 025d 40       		.uleb128 0x40
 4556 025e 18       		.uleb128 0x18
 4557 025f 9642     		.uleb128 0x2116
 4558 0261 19       		.uleb128 0x19
 4559 0262 01       		.uleb128 0x1
 4560 0263 13       		.uleb128 0x13
 4561 0264 00       		.byte	0
 4562 0265 00       		.byte	0
 4563 0266 2A       		.uleb128 0x2a
 4564 0267 34       		.uleb128 0x34
 4565 0268 00       		.byte	0
 4566 0269 03       		.uleb128 0x3
 4567 026a 08       		.uleb128 0x8
 4568 026b 3A       		.uleb128 0x3a
 4569 026c 0B       		.uleb128 0xb
 4570 026d 3B       		.uleb128 0x3b
 4571 026e 05       		.uleb128 0x5
 4572 026f 49       		.uleb128 0x49
 4573 0270 13       		.uleb128 0x13
 4574 0271 02       		.uleb128 0x2
 4575 0272 17       		.uleb128 0x17
 4576 0273 00       		.byte	0
 4577 0274 00       		.byte	0
 4578 0275 2B       		.uleb128 0x2b
 4579 0276 1D       		.uleb128 0x1d
 4580 0277 01       		.byte	0x1
 4581 0278 31       		.uleb128 0x31
 4582 0279 13       		.uleb128 0x13
 4583 027a 52       		.uleb128 0x52
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 140


 4584 027b 01       		.uleb128 0x1
 4585 027c 55       		.uleb128 0x55
 4586 027d 17       		.uleb128 0x17
 4587 027e 58       		.uleb128 0x58
 4588 027f 0B       		.uleb128 0xb
 4589 0280 59       		.uleb128 0x59
 4590 0281 05       		.uleb128 0x5
 4591 0282 01       		.uleb128 0x1
 4592 0283 13       		.uleb128 0x13
 4593 0284 00       		.byte	0
 4594 0285 00       		.byte	0
 4595 0286 2C       		.uleb128 0x2c
 4596 0287 05       		.uleb128 0x5
 4597 0288 00       		.byte	0
 4598 0289 31       		.uleb128 0x31
 4599 028a 13       		.uleb128 0x13
 4600 028b 1C       		.uleb128 0x1c
 4601 028c 0B       		.uleb128 0xb
 4602 028d 00       		.byte	0
 4603 028e 00       		.byte	0
 4604 028f 2D       		.uleb128 0x2d
 4605 0290 0B       		.uleb128 0xb
 4606 0291 01       		.byte	0x1
 4607 0292 55       		.uleb128 0x55
 4608 0293 17       		.uleb128 0x17
 4609 0294 00       		.byte	0
 4610 0295 00       		.byte	0
 4611 0296 2E       		.uleb128 0x2e
 4612 0297 1D       		.uleb128 0x1d
 4613 0298 00       		.byte	0
 4614 0299 31       		.uleb128 0x31
 4615 029a 13       		.uleb128 0x13
 4616 029b 11       		.uleb128 0x11
 4617 029c 01       		.uleb128 0x1
 4618 029d 12       		.uleb128 0x12
 4619 029e 06       		.uleb128 0x6
 4620 029f 58       		.uleb128 0x58
 4621 02a0 0B       		.uleb128 0xb
 4622 02a1 59       		.uleb128 0x59
 4623 02a2 05       		.uleb128 0x5
 4624 02a3 00       		.byte	0
 4625 02a4 00       		.byte	0
 4626 02a5 2F       		.uleb128 0x2f
 4627 02a6 2E       		.uleb128 0x2e
 4628 02a7 01       		.byte	0x1
 4629 02a8 31       		.uleb128 0x31
 4630 02a9 13       		.uleb128 0x13
 4631 02aa 11       		.uleb128 0x11
 4632 02ab 01       		.uleb128 0x1
 4633 02ac 12       		.uleb128 0x12
 4634 02ad 06       		.uleb128 0x6
 4635 02ae 40       		.uleb128 0x40
 4636 02af 18       		.uleb128 0x18
 4637 02b0 9642     		.uleb128 0x2116
 4638 02b2 19       		.uleb128 0x19
 4639 02b3 01       		.uleb128 0x1
 4640 02b4 13       		.uleb128 0x13
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 141


 4641 02b5 00       		.byte	0
 4642 02b6 00       		.byte	0
 4643 02b7 30       		.uleb128 0x30
 4644 02b8 34       		.uleb128 0x34
 4645 02b9 00       		.byte	0
 4646 02ba 31       		.uleb128 0x31
 4647 02bb 13       		.uleb128 0x13
 4648 02bc 00       		.byte	0
 4649 02bd 00       		.byte	0
 4650 02be 31       		.uleb128 0x31
 4651 02bf 0B       		.uleb128 0xb
 4652 02c0 01       		.byte	0x1
 4653 02c1 11       		.uleb128 0x11
 4654 02c2 01       		.uleb128 0x1
 4655 02c3 12       		.uleb128 0x12
 4656 02c4 06       		.uleb128 0x6
 4657 02c5 01       		.uleb128 0x1
 4658 02c6 13       		.uleb128 0x13
 4659 02c7 00       		.byte	0
 4660 02c8 00       		.byte	0
 4661 02c9 32       		.uleb128 0x32
 4662 02ca 01       		.uleb128 0x1
 4663 02cb 01       		.byte	0x1
 4664 02cc 49       		.uleb128 0x49
 4665 02cd 13       		.uleb128 0x13
 4666 02ce 01       		.uleb128 0x1
 4667 02cf 13       		.uleb128 0x13
 4668 02d0 00       		.byte	0
 4669 02d1 00       		.byte	0
 4670 02d2 33       		.uleb128 0x33
 4671 02d3 21       		.uleb128 0x21
 4672 02d4 00       		.byte	0
 4673 02d5 49       		.uleb128 0x49
 4674 02d6 13       		.uleb128 0x13
 4675 02d7 2F       		.uleb128 0x2f
 4676 02d8 0B       		.uleb128 0xb
 4677 02d9 00       		.byte	0
 4678 02da 00       		.byte	0
 4679 02db 34       		.uleb128 0x34
 4680 02dc 34       		.uleb128 0x34
 4681 02dd 00       		.byte	0
 4682 02de 03       		.uleb128 0x3
 4683 02df 0E       		.uleb128 0xe
 4684 02e0 3A       		.uleb128 0x3a
 4685 02e1 0B       		.uleb128 0xb
 4686 02e2 3B       		.uleb128 0x3b
 4687 02e3 0B       		.uleb128 0xb
 4688 02e4 49       		.uleb128 0x49
 4689 02e5 13       		.uleb128 0x13
 4690 02e6 02       		.uleb128 0x2
 4691 02e7 18       		.uleb128 0x18
 4692 02e8 00       		.byte	0
 4693 02e9 00       		.byte	0
 4694 02ea 35       		.uleb128 0x35
 4695 02eb 34       		.uleb128 0x34
 4696 02ec 00       		.byte	0
 4697 02ed 03       		.uleb128 0x3
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 142


 4698 02ee 0E       		.uleb128 0xe
 4699 02ef 3A       		.uleb128 0x3a
 4700 02f0 0B       		.uleb128 0xb
 4701 02f1 3B       		.uleb128 0x3b
 4702 02f2 0B       		.uleb128 0xb
 4703 02f3 49       		.uleb128 0x49
 4704 02f4 13       		.uleb128 0x13
 4705 02f5 3F       		.uleb128 0x3f
 4706 02f6 19       		.uleb128 0x19
 4707 02f7 02       		.uleb128 0x2
 4708 02f8 18       		.uleb128 0x18
 4709 02f9 00       		.byte	0
 4710 02fa 00       		.byte	0
 4711 02fb 36       		.uleb128 0x36
 4712 02fc 26       		.uleb128 0x26
 4713 02fd 00       		.byte	0
 4714 02fe 49       		.uleb128 0x49
 4715 02ff 13       		.uleb128 0x13
 4716 0300 00       		.byte	0
 4717 0301 00       		.byte	0
 4718 0302 37       		.uleb128 0x37
 4719 0303 2E       		.uleb128 0x2e
 4720 0304 00       		.byte	0
 4721 0305 3F       		.uleb128 0x3f
 4722 0306 19       		.uleb128 0x19
 4723 0307 03       		.uleb128 0x3
 4724 0308 0E       		.uleb128 0xe
 4725 0309 3A       		.uleb128 0x3a
 4726 030a 0B       		.uleb128 0xb
 4727 030b 3B       		.uleb128 0x3b
 4728 030c 0B       		.uleb128 0xb
 4729 030d 27       		.uleb128 0x27
 4730 030e 19       		.uleb128 0x19
 4731 030f 49       		.uleb128 0x49
 4732 0310 13       		.uleb128 0x13
 4733 0311 3C       		.uleb128 0x3c
 4734 0312 19       		.uleb128 0x19
 4735 0313 00       		.byte	0
 4736 0314 00       		.byte	0
 4737 0315 38       		.uleb128 0x38
 4738 0316 2E       		.uleb128 0x2e
 4739 0317 01       		.byte	0x1
 4740 0318 3F       		.uleb128 0x3f
 4741 0319 19       		.uleb128 0x19
 4742 031a 03       		.uleb128 0x3
 4743 031b 0E       		.uleb128 0xe
 4744 031c 3A       		.uleb128 0x3a
 4745 031d 0B       		.uleb128 0xb
 4746 031e 3B       		.uleb128 0x3b
 4747 031f 0B       		.uleb128 0xb
 4748 0320 27       		.uleb128 0x27
 4749 0321 19       		.uleb128 0x19
 4750 0322 3C       		.uleb128 0x3c
 4751 0323 19       		.uleb128 0x19
 4752 0324 01       		.uleb128 0x1
 4753 0325 13       		.uleb128 0x13
 4754 0326 00       		.byte	0
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 143


 4755 0327 00       		.byte	0
 4756 0328 39       		.uleb128 0x39
 4757 0329 05       		.uleb128 0x5
 4758 032a 00       		.byte	0
 4759 032b 49       		.uleb128 0x49
 4760 032c 13       		.uleb128 0x13
 4761 032d 00       		.byte	0
 4762 032e 00       		.byte	0
 4763 032f 3A       		.uleb128 0x3a
 4764 0330 2E       		.uleb128 0x2e
 4765 0331 01       		.byte	0x1
 4766 0332 3F       		.uleb128 0x3f
 4767 0333 19       		.uleb128 0x19
 4768 0334 03       		.uleb128 0x3
 4769 0335 0E       		.uleb128 0xe
 4770 0336 3A       		.uleb128 0x3a
 4771 0337 0B       		.uleb128 0xb
 4772 0338 3B       		.uleb128 0x3b
 4773 0339 0B       		.uleb128 0xb
 4774 033a 27       		.uleb128 0x27
 4775 033b 19       		.uleb128 0x19
 4776 033c 3C       		.uleb128 0x3c
 4777 033d 19       		.uleb128 0x19
 4778 033e 00       		.byte	0
 4779 033f 00       		.byte	0
 4780 0340 00       		.byte	0
 4781              		.section	.debug_loc,"",%progbits
 4782              	.Ldebug_loc0:
 4783              	.LLST0:
 4784 0000 00000000 		.4byte	.LVL0
 4785 0004 07000000 		.4byte	.LVL1-1
 4786 0008 0100     		.2byte	0x1
 4787 000a 50       		.byte	0x50
 4788 000b 07000000 		.4byte	.LVL1-1
 4789 000f 1A000000 		.4byte	.LVL5
 4790 0013 0100     		.2byte	0x1
 4791 0015 54       		.byte	0x54
 4792 0016 1A000000 		.4byte	.LVL5
 4793 001a 20000000 		.4byte	.LFE4
 4794 001e 0400     		.2byte	0x4
 4795 0020 F3       		.byte	0xf3
 4796 0021 01       		.uleb128 0x1
 4797 0022 50       		.byte	0x50
 4798 0023 9F       		.byte	0x9f
 4799 0024 00000000 		.4byte	0
 4800 0028 00000000 		.4byte	0
 4801              	.LLST1:
 4802 002c 08000000 		.4byte	.LVL1
 4803 0030 19000000 		.4byte	.LVL4-1
 4804 0034 0100     		.2byte	0x1
 4805 0036 50       		.byte	0x50
 4806 0037 00000000 		.4byte	0
 4807 003b 00000000 		.4byte	0
 4808              	.LLST2:
 4809 003f 10000000 		.4byte	.LVL2
 4810 0043 14000000 		.4byte	.LVL3
 4811 0047 0100     		.2byte	0x1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 144


 4812 0049 52       		.byte	0x52
 4813 004a 14000000 		.4byte	.LVL3
 4814 004e 19000000 		.4byte	.LVL4-1
 4815 0052 0100     		.2byte	0x1
 4816 0054 53       		.byte	0x53
 4817 0055 00000000 		.4byte	0
 4818 0059 00000000 		.4byte	0
 4819              	.LLST3:
 4820 005d 06000000 		.4byte	.LVL7
 4821 0061 0D000000 		.4byte	.LVL9-1
 4822 0065 0100     		.2byte	0x1
 4823 0067 50       		.byte	0x50
 4824 0068 00000000 		.4byte	0
 4825 006c 00000000 		.4byte	0
 4826              	.LLST4:
 4827 0070 0A000000 		.4byte	.LVL8
 4828 0074 12000000 		.4byte	.LVL10
 4829 0078 0500     		.2byte	0x5
 4830 007a 74       		.byte	0x74
 4831 007b 00       		.sleb128 0
 4832 007c 37       		.byte	0x37
 4833 007d 1A       		.byte	0x1a
 4834 007e 9F       		.byte	0x9f
 4835 007f 12000000 		.4byte	.LVL10
 4836 0083 18000000 		.4byte	.LFE6
 4837 0087 0100     		.2byte	0x1
 4838 0089 50       		.byte	0x50
 4839 008a 00000000 		.4byte	0
 4840 008e 00000000 		.4byte	0
 4841              	.LLST5:
 4842 0092 00000000 		.4byte	.LVL11
 4843 0096 07000000 		.4byte	.LVL12-1
 4844 009a 0100     		.2byte	0x1
 4845 009c 50       		.byte	0x50
 4846 009d 07000000 		.4byte	.LVL12-1
 4847 00a1 1E000000 		.4byte	.LVL14
 4848 00a5 0100     		.2byte	0x1
 4849 00a7 55       		.byte	0x55
 4850 00a8 1E000000 		.4byte	.LVL14
 4851 00ac 28000000 		.4byte	.LFE7
 4852 00b0 0400     		.2byte	0x4
 4853 00b2 F3       		.byte	0xf3
 4854 00b3 01       		.uleb128 0x1
 4855 00b4 50       		.byte	0x50
 4856 00b5 9F       		.byte	0x9f
 4857 00b6 00000000 		.4byte	0
 4858 00ba 00000000 		.4byte	0
 4859              	.LLST6:
 4860 00be 08000000 		.4byte	.LVL12
 4861 00c2 1D000000 		.4byte	.LVL13-1
 4862 00c6 0100     		.2byte	0x1
 4863 00c8 50       		.byte	0x50
 4864 00c9 00000000 		.4byte	0
 4865 00cd 00000000 		.4byte	0
 4866              	.LLST7:
 4867 00d1 04000000 		.4byte	.LVL15
 4868 00d5 08000000 		.4byte	.LVL16
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 145


 4869 00d9 0500     		.2byte	0x5
 4870 00db 70       		.byte	0x70
 4871 00dc 00       		.sleb128 0
 4872 00dd 31       		.byte	0x31
 4873 00de 1A       		.byte	0x1a
 4874 00df 9F       		.byte	0x9f
 4875 00e0 08000000 		.4byte	.LVL16
 4876 00e4 10000000 		.4byte	.LFE11
 4877 00e8 0100     		.2byte	0x1
 4878 00ea 50       		.byte	0x50
 4879 00eb 00000000 		.4byte	0
 4880 00ef 00000000 		.4byte	0
 4881              	.LLST8:
 4882 00f3 00000000 		.4byte	.LVL17
 4883 00f7 15000000 		.4byte	.LVL18-1
 4884 00fb 0100     		.2byte	0x1
 4885 00fd 50       		.byte	0x50
 4886 00fe 15000000 		.4byte	.LVL18-1
 4887 0102 2A000000 		.4byte	.LVL20
 4888 0106 0100     		.2byte	0x1
 4889 0108 54       		.byte	0x54
 4890 0109 2A000000 		.4byte	.LVL20
 4891 010d 2C000000 		.4byte	.LVL21
 4892 0111 0100     		.2byte	0x1
 4893 0113 50       		.byte	0x50
 4894 0114 2C000000 		.4byte	.LVL21
 4895 0118 38000000 		.4byte	.LFE12
 4896 011c 0400     		.2byte	0x4
 4897 011e F3       		.byte	0xf3
 4898 011f 01       		.uleb128 0x1
 4899 0120 50       		.byte	0x50
 4900 0121 9F       		.byte	0x9f
 4901 0122 00000000 		.4byte	0
 4902 0126 00000000 		.4byte	0
 4903              	.LLST9:
 4904 012a 16000000 		.4byte	.LVL18
 4905 012e 27000000 		.4byte	.LVL19-1
 4906 0132 0100     		.2byte	0x1
 4907 0134 50       		.byte	0x50
 4908 0135 00000000 		.4byte	0
 4909 0139 00000000 		.4byte	0
 4910              	.LLST10:
 4911 013d 2A000000 		.4byte	.LVL20
 4912 0141 2C000000 		.4byte	.LVL21
 4913 0145 0200     		.2byte	0x2
 4914 0147 30       		.byte	0x30
 4915 0148 9F       		.byte	0x9f
 4916 0149 00000000 		.4byte	0
 4917 014d 00000000 		.4byte	0
 4918              	.LLST11:
 4919 0151 00000000 		.4byte	.LVL22
 4920 0155 08000000 		.4byte	.LVL23
 4921 0159 0100     		.2byte	0x1
 4922 015b 50       		.byte	0x50
 4923 015c 08000000 		.4byte	.LVL23
 4924 0160 14000000 		.4byte	.LFE17
 4925 0164 0100     		.2byte	0x1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 146


 4926 0166 52       		.byte	0x52
 4927 0167 00000000 		.4byte	0
 4928 016b 00000000 		.4byte	0
 4929              	.LLST12:
 4930 016f 0A000000 		.4byte	.LVL24
 4931 0173 0C000000 		.4byte	.LVL25
 4932 0177 0500     		.2byte	0x5
 4933 0179 70       		.byte	0x70
 4934 017a 00       		.sleb128 0
 4935 017b 49       		.byte	0x49
 4936 017c 1A       		.byte	0x1a
 4937 017d 9F       		.byte	0x9f
 4938 017e 0C000000 		.4byte	.LVL25
 4939 0182 14000000 		.4byte	.LFE17
 4940 0186 0100     		.2byte	0x1
 4941 0188 50       		.byte	0x50
 4942 0189 00000000 		.4byte	0
 4943 018d 00000000 		.4byte	0
 4944              	.LLST13:
 4945 0191 00000000 		.4byte	.LVL28
 4946 0195 0A000000 		.4byte	.LVL31
 4947 0199 0100     		.2byte	0x1
 4948 019b 50       		.byte	0x50
 4949 019c 0A000000 		.4byte	.LVL31
 4950 01a0 14000000 		.4byte	.LFE20
 4951 01a4 0400     		.2byte	0x4
 4952 01a6 F3       		.byte	0xf3
 4953 01a7 01       		.uleb128 0x1
 4954 01a8 50       		.byte	0x50
 4955 01a9 9F       		.byte	0x9f
 4956 01aa 00000000 		.4byte	0
 4957 01ae 00000000 		.4byte	0
 4958              	.LLST14:
 4959 01b2 04000000 		.4byte	.LVL29
 4960 01b6 06000000 		.4byte	.LVL30
 4961 01ba 0200     		.2byte	0x2
 4962 01bc 30       		.byte	0x30
 4963 01bd 9F       		.byte	0x9f
 4964 01be 00000000 		.4byte	0
 4965 01c2 00000000 		.4byte	0
 4966              	.LLST15:
 4967 01c6 00000000 		.4byte	.LVL33
 4968 01ca 0A000000 		.4byte	.LVL36
 4969 01ce 0100     		.2byte	0x1
 4970 01d0 50       		.byte	0x50
 4971 01d1 0A000000 		.4byte	.LVL36
 4972 01d5 12000000 		.4byte	.LFE21
 4973 01d9 0400     		.2byte	0x4
 4974 01db F3       		.byte	0xf3
 4975 01dc 01       		.uleb128 0x1
 4976 01dd 50       		.byte	0x50
 4977 01de 9F       		.byte	0x9f
 4978 01df 00000000 		.4byte	0
 4979 01e3 00000000 		.4byte	0
 4980              	.LLST16:
 4981 01e7 04000000 		.4byte	.LVL34
 4982 01eb 06000000 		.4byte	.LVL35
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 147


 4983 01ef 0200     		.2byte	0x2
 4984 01f1 30       		.byte	0x30
 4985 01f2 9F       		.byte	0x9f
 4986 01f3 00000000 		.4byte	0
 4987 01f7 00000000 		.4byte	0
 4988              	.LLST17:
 4989 01fb 00000000 		.4byte	.LVL37
 4990 01ff 0A000000 		.4byte	.LVL40
 4991 0203 0100     		.2byte	0x1
 4992 0205 50       		.byte	0x50
 4993 0206 0A000000 		.4byte	.LVL40
 4994 020a 18000000 		.4byte	.LFE22
 4995 020e 0400     		.2byte	0x4
 4996 0210 F3       		.byte	0xf3
 4997 0211 01       		.uleb128 0x1
 4998 0212 50       		.byte	0x50
 4999 0213 9F       		.byte	0x9f
 5000 0214 00000000 		.4byte	0
 5001 0218 00000000 		.4byte	0
 5002              	.LLST18:
 5003 021c 04000000 		.4byte	.LVL38
 5004 0220 06000000 		.4byte	.LVL39
 5005 0224 0200     		.2byte	0x2
 5006 0226 30       		.byte	0x30
 5007 0227 9F       		.byte	0x9f
 5008 0228 00000000 		.4byte	0
 5009 022c 00000000 		.4byte	0
 5010              	.LLST19:
 5011 0230 00000000 		.4byte	.LVL42
 5012 0234 0A000000 		.4byte	.LVL45
 5013 0238 0100     		.2byte	0x1
 5014 023a 50       		.byte	0x50
 5015 023b 0A000000 		.4byte	.LVL45
 5016 023f 14000000 		.4byte	.LFE23
 5017 0243 0400     		.2byte	0x4
 5018 0245 F3       		.byte	0xf3
 5019 0246 01       		.uleb128 0x1
 5020 0247 50       		.byte	0x50
 5021 0248 9F       		.byte	0x9f
 5022 0249 00000000 		.4byte	0
 5023 024d 00000000 		.4byte	0
 5024              	.LLST20:
 5025 0251 04000000 		.4byte	.LVL43
 5026 0255 06000000 		.4byte	.LVL44
 5027 0259 0200     		.2byte	0x2
 5028 025b 30       		.byte	0x30
 5029 025c 9F       		.byte	0x9f
 5030 025d 00000000 		.4byte	0
 5031 0261 00000000 		.4byte	0
 5032              	.LLST21:
 5033 0265 00000000 		.4byte	.LVL46
 5034 0269 15000000 		.4byte	.LVL51-1
 5035 026d 0100     		.2byte	0x1
 5036 026f 50       		.byte	0x50
 5037 0270 15000000 		.4byte	.LVL51-1
 5038 0274 3C000000 		.4byte	.LFE24
 5039 0278 0400     		.2byte	0x4
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 148


 5040 027a F3       		.byte	0xf3
 5041 027b 01       		.uleb128 0x1
 5042 027c 50       		.byte	0x50
 5043 027d 9F       		.byte	0x9f
 5044 027e 00000000 		.4byte	0
 5045 0282 00000000 		.4byte	0
 5046              	.LLST22:
 5047 0286 00000000 		.4byte	.LVL46
 5048 028a 15000000 		.4byte	.LVL51-1
 5049 028e 0100     		.2byte	0x1
 5050 0290 51       		.byte	0x51
 5051 0291 15000000 		.4byte	.LVL51-1
 5052 0295 3C000000 		.4byte	.LFE24
 5053 0299 0400     		.2byte	0x4
 5054 029b F3       		.byte	0xf3
 5055 029c 01       		.uleb128 0x1
 5056 029d 51       		.byte	0x51
 5057 029e 9F       		.byte	0x9f
 5058 029f 00000000 		.4byte	0
 5059 02a3 00000000 		.4byte	0
 5060              	.LLST23:
 5061 02a7 16000000 		.4byte	.LVL51
 5062 02ab 35000000 		.4byte	.LVL56-1
 5063 02af 0100     		.2byte	0x1
 5064 02b1 50       		.byte	0x50
 5065 02b2 00000000 		.4byte	0
 5066 02b6 00000000 		.4byte	0
 5067              	.LLST24:
 5068 02ba 12000000 		.4byte	.LVL50
 5069 02be 22000000 		.4byte	.LVL52
 5070 02c2 0C00     		.2byte	0xc
 5071 02c4 74       		.byte	0x74
 5072 02c5 00       		.sleb128 0
 5073 02c6 33       		.byte	0x33
 5074 02c7 1A       		.byte	0x1a
 5075 02c8 08       		.byte	0x8
 5076 02c9 FF       		.byte	0xff
 5077 02ca 1A       		.byte	0x1a
 5078 02cb 33       		.byte	0x33
 5079 02cc 24       		.byte	0x24
 5080 02cd 23       		.byte	0x23
 5081 02ce 06       		.uleb128 0x6
 5082 02cf 9F       		.byte	0x9f
 5083 02d0 00000000 		.4byte	0
 5084 02d4 00000000 		.4byte	0
 5085              	.LLST25:
 5086 02d8 2C000000 		.4byte	.LVL53
 5087 02dc 35000000 		.4byte	.LVL56-1
 5088 02e0 0100     		.2byte	0x1
 5089 02e2 51       		.byte	0x51
 5090 02e3 00000000 		.4byte	0
 5091 02e7 00000000 		.4byte	0
 5092              	.LLST26:
 5093 02eb 0A000000 		.4byte	.LVL47
 5094 02ef 0C000000 		.4byte	.LVL48
 5095 02f3 0200     		.2byte	0x2
 5096 02f5 30       		.byte	0x30
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 149


 5097 02f6 9F       		.byte	0x9f
 5098 02f7 00000000 		.4byte	0
 5099 02fb 00000000 		.4byte	0
 5100              	.LLST27:
 5101 02ff 10000000 		.4byte	.LVL49
 5102 0303 12000000 		.4byte	.LVL50
 5103 0307 0200     		.2byte	0x2
 5104 0309 30       		.byte	0x30
 5105 030a 9F       		.byte	0x9f
 5106 030b 00000000 		.4byte	0
 5107 030f 00000000 		.4byte	0
 5108              	.LLST28:
 5109 0313 00000000 		.4byte	.LVL57
 5110 0317 1E000000 		.4byte	.LVL62
 5111 031b 0100     		.2byte	0x1
 5112 031d 50       		.byte	0x50
 5113 031e 1E000000 		.4byte	.LVL62
 5114 0322 28000000 		.4byte	.LFE25
 5115 0326 0400     		.2byte	0x4
 5116 0328 F3       		.byte	0xf3
 5117 0329 01       		.uleb128 0x1
 5118 032a 50       		.byte	0x50
 5119 032b 9F       		.byte	0x9f
 5120 032c 00000000 		.4byte	0
 5121 0330 00000000 		.4byte	0
 5122              	.LLST29:
 5123 0334 10000000 		.4byte	.LVL60
 5124 0338 1C000000 		.4byte	.LVL61
 5125 033c 0F00     		.2byte	0xf
 5126 033e 71       		.byte	0x71
 5127 033f 00       		.sleb128 0
 5128 0340 70       		.byte	0x70
 5129 0341 00       		.sleb128 0
 5130 0342 33       		.byte	0x33
 5131 0343 1A       		.byte	0x1a
 5132 0344 08       		.byte	0x8
 5133 0345 FF       		.byte	0xff
 5134 0346 1A       		.byte	0x1a
 5135 0347 33       		.byte	0x33
 5136 0348 24       		.byte	0x24
 5137 0349 23       		.byte	0x23
 5138 034a 06       		.uleb128 0x6
 5139 034b 25       		.byte	0x25
 5140 034c 9F       		.byte	0x9f
 5141 034d 00000000 		.4byte	0
 5142 0351 00000000 		.4byte	0
 5143              	.LLST30:
 5144 0355 04000000 		.4byte	.LVL58
 5145 0359 06000000 		.4byte	.LVL59
 5146 035d 0200     		.2byte	0x2
 5147 035f 30       		.byte	0x30
 5148 0360 9F       		.byte	0x9f
 5149 0361 00000000 		.4byte	0
 5150 0365 00000000 		.4byte	0
 5151              	.LLST31:
 5152 0369 00000000 		.4byte	.LVL63
 5153 036d 04000000 		.4byte	.LVL64
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 150


 5154 0371 0100     		.2byte	0x1
 5155 0373 50       		.byte	0x50
 5156 0374 04000000 		.4byte	.LVL64
 5157 0378 14000000 		.4byte	.LFE26
 5158 037c 0400     		.2byte	0x4
 5159 037e F3       		.byte	0xf3
 5160 037f 01       		.uleb128 0x1
 5161 0380 50       		.byte	0x50
 5162 0381 9F       		.byte	0x9f
 5163 0382 00000000 		.4byte	0
 5164 0386 00000000 		.4byte	0
 5165              	.LLST32:
 5166 038a 00000000 		.4byte	.LVL65
 5167 038e 06000000 		.4byte	.LVL66
 5168 0392 0100     		.2byte	0x1
 5169 0394 50       		.byte	0x50
 5170 0395 06000000 		.4byte	.LVL66
 5171 0399 18000000 		.4byte	.LFE27
 5172 039d 0400     		.2byte	0x4
 5173 039f F3       		.byte	0xf3
 5174 03a0 01       		.uleb128 0x1
 5175 03a1 50       		.byte	0x50
 5176 03a2 9F       		.byte	0x9f
 5177 03a3 00000000 		.4byte	0
 5178 03a7 00000000 		.4byte	0
 5179              	.LLST33:
 5180 03ab 00000000 		.4byte	.LVL67
 5181 03af 04000000 		.4byte	.LVL68
 5182 03b3 0100     		.2byte	0x1
 5183 03b5 50       		.byte	0x50
 5184 03b6 04000000 		.4byte	.LVL68
 5185 03ba 14000000 		.4byte	.LFE28
 5186 03be 0400     		.2byte	0x4
 5187 03c0 F3       		.byte	0xf3
 5188 03c1 01       		.uleb128 0x1
 5189 03c2 50       		.byte	0x50
 5190 03c3 9F       		.byte	0x9f
 5191 03c4 00000000 		.4byte	0
 5192 03c8 00000000 		.4byte	0
 5193              	.LLST34:
 5194 03cc 00000000 		.4byte	.LVL69
 5195 03d0 04000000 		.4byte	.LVL70
 5196 03d4 0100     		.2byte	0x1
 5197 03d6 50       		.byte	0x50
 5198 03d7 04000000 		.4byte	.LVL70
 5199 03db 14000000 		.4byte	.LFE29
 5200 03df 0400     		.2byte	0x4
 5201 03e1 F3       		.byte	0xf3
 5202 03e2 01       		.uleb128 0x1
 5203 03e3 50       		.byte	0x50
 5204 03e4 9F       		.byte	0x9f
 5205 03e5 00000000 		.4byte	0
 5206 03e9 00000000 		.4byte	0
 5207              	.LLST35:
 5208 03ed 00000000 		.4byte	.LVL71
 5209 03f1 04000000 		.4byte	.LVL72
 5210 03f5 0100     		.2byte	0x1
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 151


 5211 03f7 50       		.byte	0x50
 5212 03f8 04000000 		.4byte	.LVL72
 5213 03fc 14000000 		.4byte	.LFE30
 5214 0400 0400     		.2byte	0x4
 5215 0402 F3       		.byte	0xf3
 5216 0403 01       		.uleb128 0x1
 5217 0404 50       		.byte	0x50
 5218 0405 9F       		.byte	0x9f
 5219 0406 00000000 		.4byte	0
 5220 040a 00000000 		.4byte	0
 5221              	.LLST36:
 5222 040e 00000000 		.4byte	.LVL74
 5223 0412 04000000 		.4byte	.LVL75
 5224 0416 0100     		.2byte	0x1
 5225 0418 50       		.byte	0x50
 5226 0419 04000000 		.4byte	.LVL75
 5227 041d 22000000 		.4byte	.LVL79
 5228 0421 0100     		.2byte	0x1
 5229 0423 54       		.byte	0x54
 5230 0424 00000000 		.4byte	0
 5231 0428 00000000 		.4byte	0
 5232              	.LLST37:
 5233 042c 00000000 		.4byte	.LVL80
 5234 0430 08000000 		.4byte	.LVL81
 5235 0434 0100     		.2byte	0x1
 5236 0436 50       		.byte	0x50
 5237 0437 08000000 		.4byte	.LVL81
 5238 043b 14000000 		.4byte	.LFE34
 5239 043f 0400     		.2byte	0x4
 5240 0441 F3       		.byte	0xf3
 5241 0442 01       		.uleb128 0x1
 5242 0443 50       		.byte	0x50
 5243 0444 9F       		.byte	0x9f
 5244 0445 00000000 		.4byte	0
 5245 0449 00000000 		.4byte	0
 5246              	.LLST38:
 5247 044d 00000000 		.4byte	.LVL83
 5248 0451 09000000 		.4byte	.LVL84-1
 5249 0455 0100     		.2byte	0x1
 5250 0457 50       		.byte	0x50
 5251 0458 09000000 		.4byte	.LVL84-1
 5252 045c A2000000 		.4byte	.LVL100
 5253 0460 0100     		.2byte	0x1
 5254 0462 55       		.byte	0x55
 5255 0463 A2000000 		.4byte	.LVL100
 5256 0467 CE000000 		.4byte	.LVL107
 5257 046b 0700     		.2byte	0x7
 5258 046d 75       		.byte	0x75
 5259 046e B3998080 		.sleb128 -268432205
 5259      7F
 5260 0473 9F       		.byte	0x9f
 5261 0474 CE000000 		.4byte	.LVL107
 5262 0478 D0000000 		.4byte	.LVL108
 5263 047c 0100     		.2byte	0x1
 5264 047e 55       		.byte	0x55
 5265 047f D0000000 		.4byte	.LVL108
 5266 0483 28010000 		.4byte	.LFE8
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 152


 5267 0487 0600     		.2byte	0x6
 5268 0489 91       		.byte	0x91
 5269 048a 5C       		.sleb128 -36
 5270 048b 06       		.byte	0x6
 5271 048c 23       		.byte	0x23
 5272 048d 03       		.uleb128 0x3
 5273 048e 9F       		.byte	0x9f
 5274 048f 00000000 		.4byte	0
 5275 0493 00000000 		.4byte	0
 5276              	.LLST39:
 5277 0497 24000000 		.4byte	.LVL86
 5278 049b 26000000 		.4byte	.LVL87
 5279 049f 0100     		.2byte	0x1
 5280 04a1 54       		.byte	0x54
 5281 04a2 36000000 		.4byte	.LVL88
 5282 04a6 38000000 		.4byte	.LVL89
 5283 04aa 0100     		.2byte	0x1
 5284 04ac 54       		.byte	0x54
 5285 04ad 48000000 		.4byte	.LVL90
 5286 04b1 4A000000 		.4byte	.LVL91
 5287 04b5 0100     		.2byte	0x1
 5288 04b7 54       		.byte	0x54
 5289 04b8 5A000000 		.4byte	.LVL92
 5290 04bc 5C000000 		.4byte	.LVL93
 5291 04c0 0100     		.2byte	0x1
 5292 04c2 54       		.byte	0x54
 5293 04c3 64000000 		.4byte	.LVL94
 5294 04c7 CE000000 		.4byte	.LVL107
 5295 04cb 0100     		.2byte	0x1
 5296 04cd 54       		.byte	0x54
 5297 04ce 00000000 		.4byte	0
 5298 04d2 00000000 		.4byte	0
 5299              	.LLST40:
 5300 04d6 6C000000 		.4byte	.LVL95
 5301 04da CE000000 		.4byte	.LVL107
 5302 04de 0200     		.2byte	0x2
 5303 04e0 91       		.byte	0x91
 5304 04e1 54       		.sleb128 -44
 5305 04e2 00000000 		.4byte	0
 5306 04e6 00000000 		.4byte	0
 5307              	.LLST41:
 5308 04ea 76000000 		.4byte	.LVL96
 5309 04ee CE000000 		.4byte	.LVL107
 5310 04f2 0200     		.2byte	0x2
 5311 04f4 91       		.byte	0x91
 5312 04f5 58       		.sleb128 -40
 5313 04f6 00000000 		.4byte	0
 5314 04fa 00000000 		.4byte	0
 5315              	.LLST42:
 5316 04fe 8A000000 		.4byte	.LVL97
 5317 0502 96000000 		.4byte	.LVL98
 5318 0506 0100     		.2byte	0x1
 5319 0508 56       		.byte	0x56
 5320 0509 00000000 		.4byte	0
 5321 050d 00000000 		.4byte	0
 5322              	.LLST43:
 5323 0511 A8000000 		.4byte	.LVL101
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 153


 5324 0515 AC000000 		.4byte	.LVL102
 5325 0519 0100     		.2byte	0x1
 5326 051b 53       		.byte	0x53
 5327 051c AC000000 		.4byte	.LVL102
 5328 0520 AE000000 		.4byte	.LVL103
 5329 0524 0400     		.2byte	0x4
 5330 0526 72       		.byte	0x72
 5331 0527 00       		.sleb128 0
 5332 0528 06       		.byte	0x6
 5333 0529 9F       		.byte	0x9f
 5334 052a AE000000 		.4byte	.LVL103
 5335 052e B0000000 		.4byte	.LVL104
 5336 0532 0700     		.2byte	0x7
 5337 0534 0C       		.byte	0xc
 5338 0535 28FF0B40 		.4byte	0x400bff28
 5339 0539 06       		.byte	0x6
 5340 053a 9F       		.byte	0x9f
 5341 053b 00000000 		.4byte	0
 5342 053f 00000000 		.4byte	0
 5343              	.LLST44:
 5344 0543 CE000000 		.4byte	.LVL107
 5345 0547 D0000000 		.4byte	.LVL108
 5346 054b 0200     		.2byte	0x2
 5347 054d 30       		.byte	0x30
 5348 054e 9F       		.byte	0x9f
 5349 054f 00000000 		.4byte	0
 5350 0553 00000000 		.4byte	0
 5351              	.LLST45:
 5352 0557 00000000 		.4byte	.LVL110
 5353 055b 24000000 		.4byte	.LVL111
 5354 055f 0100     		.2byte	0x1
 5355 0561 50       		.byte	0x50
 5356 0562 24000000 		.4byte	.LVL111
 5357 0566 3E000000 		.4byte	.LVL117
 5358 056a 0100     		.2byte	0x1
 5359 056c 54       		.byte	0x54
 5360 056d 00000000 		.4byte	0
 5361 0571 00000000 		.4byte	0
 5362              	.LLST46:
 5363 0575 00000000 		.4byte	.LVL110
 5364 0579 3E000000 		.4byte	.LVL116
 5365 057d 0200     		.2byte	0x2
 5366 057f 30       		.byte	0x30
 5367 0580 9F       		.byte	0x9f
 5368 0581 3E000000 		.4byte	.LVL116
 5369 0585 54000000 		.4byte	.LFE9
 5370 0589 0100     		.2byte	0x1
 5371 058b 50       		.byte	0x50
 5372 058c 00000000 		.4byte	0
 5373 0590 00000000 		.4byte	0
 5374              	.LLST47:
 5375 0594 32000000 		.4byte	.LVL113
 5376 0598 36000000 		.4byte	.LVL114
 5377 059c 0500     		.2byte	0x5
 5378 059e 73       		.byte	0x73
 5379 059f 00       		.sleb128 0
 5380 05a0 31       		.byte	0x31
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 154


 5381 05a1 1A       		.byte	0x1a
 5382 05a2 9F       		.byte	0x9f
 5383 05a3 00000000 		.4byte	0
 5384 05a7 00000000 		.4byte	0
 5385              	.LLST48:
 5386 05ab 00000000 		.4byte	.LVL118
 5387 05af 0E000000 		.4byte	.LVL119
 5388 05b3 0100     		.2byte	0x1
 5389 05b5 50       		.byte	0x50
 5390 05b6 0E000000 		.4byte	.LVL119
 5391 05ba 44000000 		.4byte	.LFE13
 5392 05be 0400     		.2byte	0x4
 5393 05c0 F3       		.byte	0xf3
 5394 05c1 01       		.uleb128 0x1
 5395 05c2 50       		.byte	0x50
 5396 05c3 9F       		.byte	0x9f
 5397 05c4 00000000 		.4byte	0
 5398 05c8 00000000 		.4byte	0
 5399              	.LLST49:
 5400 05cc 00000000 		.4byte	.LVL121
 5401 05d0 18000000 		.4byte	.LVL122
 5402 05d4 0100     		.2byte	0x1
 5403 05d6 50       		.byte	0x50
 5404 05d7 18000000 		.4byte	.LVL122
 5405 05db 48000000 		.4byte	.LFE35
 5406 05df 0400     		.2byte	0x4
 5407 05e1 F3       		.byte	0xf3
 5408 05e2 01       		.uleb128 0x1
 5409 05e3 50       		.byte	0x50
 5410 05e4 9F       		.byte	0x9f
 5411 05e5 00000000 		.4byte	0
 5412 05e9 00000000 		.4byte	0
 5413              	.LLST50:
 5414 05ed 00000000 		.4byte	.LVL125
 5415 05f1 0C000000 		.4byte	.LVL126
 5416 05f5 0200     		.2byte	0x2
 5417 05f7 30       		.byte	0x30
 5418 05f8 9F       		.byte	0x9f
 5419 05f9 0C000000 		.4byte	.LVL126
 5420 05fd 10000000 		.4byte	.LVL127
 5421 0601 0200     		.2byte	0x2
 5422 0603 31       		.byte	0x31
 5423 0604 9F       		.byte	0x9f
 5424 0605 10000000 		.4byte	.LVL127
 5425 0609 12000000 		.4byte	.LVL128
 5426 060d 0200     		.2byte	0x2
 5427 060f 32       		.byte	0x32
 5428 0610 9F       		.byte	0x9f
 5429 0611 12000000 		.4byte	.LVL128
 5430 0615 14000000 		.4byte	.LVL129
 5431 0619 0200     		.2byte	0x2
 5432 061b 33       		.byte	0x33
 5433 061c 9F       		.byte	0x9f
 5434 061d 14000000 		.4byte	.LVL129
 5435 0621 60000000 		.4byte	.LFE37
 5436 0625 0200     		.2byte	0x2
 5437 0627 35       		.byte	0x35
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 155


 5438 0628 9F       		.byte	0x9f
 5439 0629 00000000 		.4byte	0
 5440 062d 00000000 		.4byte	0
 5441              	.LLST51:
 5442 0631 14000000 		.4byte	.LVL129
 5443 0635 16000000 		.4byte	.LVL130
 5444 0639 0500     		.2byte	0x5
 5445 063b 0C       		.byte	0xc
 5446 063c 3C000020 		.4byte	0x2000003c
 5447 0640 16000000 		.4byte	.LVL130
 5448 0644 18000000 		.4byte	.LVL131
 5449 0648 0200     		.2byte	0x2
 5450 064a 73       		.byte	0x73
 5451 064b 00       		.sleb128 0
 5452 064c 00000000 		.4byte	0
 5453 0650 00000000 		.4byte	0
 5454              	.LLST52:
 5455 0654 00000000 		.4byte	.LVL137
 5456 0658 04000000 		.4byte	.LVL138
 5457 065c 0100     		.2byte	0x1
 5458 065e 50       		.byte	0x50
 5459 065f 04000000 		.4byte	.LVL138
 5460 0663 10000000 		.4byte	.LFE42
 5461 0667 0400     		.2byte	0x4
 5462 0669 F3       		.byte	0xf3
 5463 066a 01       		.uleb128 0x1
 5464 066b 50       		.byte	0x50
 5465 066c 9F       		.byte	0x9f
 5466 066d 00000000 		.4byte	0
 5467 0671 00000000 		.4byte	0
 5468              	.LLST53:
 5469 0675 0A000000 		.4byte	.LVL140
 5470 0679 0E000000 		.4byte	.LVL141
 5471 067d 0200     		.2byte	0x2
 5472 067f 31       		.byte	0x31
 5473 0680 9F       		.byte	0x9f
 5474 0681 00000000 		.4byte	0
 5475 0685 00000000 		.4byte	0
 5476              	.LLST54:
 5477 0689 00000000 		.4byte	.LVL144
 5478 068d 06000000 		.4byte	.LVL145
 5479 0691 0100     		.2byte	0x1
 5480 0693 50       		.byte	0x50
 5481 0694 06000000 		.4byte	.LVL145
 5482 0698 10000000 		.4byte	.LFE49
 5483 069c 0400     		.2byte	0x4
 5484 069e F3       		.byte	0xf3
 5485 069f 01       		.uleb128 0x1
 5486 06a0 50       		.byte	0x50
 5487 06a1 9F       		.byte	0x9f
 5488 06a2 00000000 		.4byte	0
 5489 06a6 00000000 		.4byte	0
 5490              	.LLST55:
 5491 06aa 00000000 		.4byte	.LVL146
 5492 06ae 04000000 		.4byte	.LVL147
 5493 06b2 0100     		.2byte	0x1
 5494 06b4 50       		.byte	0x50
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 156


 5495 06b5 04000000 		.4byte	.LVL147
 5496 06b9 0C000000 		.4byte	.LFE50
 5497 06bd 0400     		.2byte	0x4
 5498 06bf F3       		.byte	0xf3
 5499 06c0 01       		.uleb128 0x1
 5500 06c1 50       		.byte	0x50
 5501 06c2 9F       		.byte	0x9f
 5502 06c3 00000000 		.4byte	0
 5503 06c7 00000000 		.4byte	0
 5504              		.section	.debug_aranges,"",%progbits
 5505 0000 AC010000 		.4byte	0x1ac
 5506 0004 0200     		.2byte	0x2
 5507 0006 00000000 		.4byte	.Ldebug_info0
 5508 000a 04       		.byte	0x4
 5509 000b 00       		.byte	0
 5510 000c 0000     		.2byte	0
 5511 000e 0000     		.2byte	0
 5512 0010 00000000 		.4byte	.LFB2
 5513 0014 14000000 		.4byte	.LFE2-.LFB2
 5514 0018 00000000 		.4byte	.LFB3
 5515 001c 10000000 		.4byte	.LFE3-.LFB3
 5516 0020 00000000 		.4byte	.LFB4
 5517 0024 20000000 		.4byte	.LFE4-.LFB4
 5518 0028 00000000 		.4byte	.LFB5
 5519 002c 34000000 		.4byte	.LFE5-.LFB5
 5520 0030 00000000 		.4byte	.LFB6
 5521 0034 18000000 		.4byte	.LFE6-.LFB6
 5522 0038 00000000 		.4byte	.LFB7
 5523 003c 28000000 		.4byte	.LFE7-.LFB7
 5524 0040 00000000 		.4byte	.LFB10
 5525 0044 24000000 		.4byte	.LFE10-.LFB10
 5526 0048 00000000 		.4byte	.LFB11
 5527 004c 10000000 		.4byte	.LFE11-.LFB11
 5528 0050 00000000 		.4byte	.LFB12
 5529 0054 38000000 		.4byte	.LFE12-.LFB12
 5530 0058 00000000 		.4byte	.LFB14
 5531 005c 20000000 		.4byte	.LFE14-.LFB14
 5532 0060 00000000 		.4byte	.LFB15
 5533 0064 10000000 		.4byte	.LFE15-.LFB15
 5534 0068 00000000 		.4byte	.LFB16
 5535 006c 0C000000 		.4byte	.LFE16-.LFB16
 5536 0070 00000000 		.4byte	.LFB17
 5537 0074 14000000 		.4byte	.LFE17-.LFB17
 5538 0078 00000000 		.4byte	.LFB18
 5539 007c 10000000 		.4byte	.LFE18-.LFB18
 5540 0080 00000000 		.4byte	.LFB19
 5541 0084 0C000000 		.4byte	.LFE19-.LFB19
 5542 0088 00000000 		.4byte	.LFB20
 5543 008c 14000000 		.4byte	.LFE20-.LFB20
 5544 0090 00000000 		.4byte	.LFB21
 5545 0094 12000000 		.4byte	.LFE21-.LFB21
 5546 0098 00000000 		.4byte	.LFB22
 5547 009c 18000000 		.4byte	.LFE22-.LFB22
 5548 00a0 00000000 		.4byte	.LFB23
 5549 00a4 14000000 		.4byte	.LFE23-.LFB23
 5550 00a8 00000000 		.4byte	.LFB24
 5551 00ac 3C000000 		.4byte	.LFE24-.LFB24
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 157


 5552 00b0 00000000 		.4byte	.LFB25
 5553 00b4 28000000 		.4byte	.LFE25-.LFB25
 5554 00b8 00000000 		.4byte	.LFB26
 5555 00bc 14000000 		.4byte	.LFE26-.LFB26
 5556 00c0 00000000 		.4byte	.LFB27
 5557 00c4 18000000 		.4byte	.LFE27-.LFB27
 5558 00c8 00000000 		.4byte	.LFB28
 5559 00cc 14000000 		.4byte	.LFE28-.LFB28
 5560 00d0 00000000 		.4byte	.LFB29
 5561 00d4 14000000 		.4byte	.LFE29-.LFB29
 5562 00d8 00000000 		.4byte	.LFB30
 5563 00dc 14000000 		.4byte	.LFE30-.LFB30
 5564 00e0 00000000 		.4byte	.LFB31
 5565 00e4 04000000 		.4byte	.LFE31-.LFB31
 5566 00e8 00000000 		.4byte	.LFB32
 5567 00ec 18000000 		.4byte	.LFE32-.LFB32
 5568 00f0 00000000 		.4byte	.LFB33
 5569 00f4 2C000000 		.4byte	.LFE33-.LFB33
 5570 00f8 00000000 		.4byte	.LFB34
 5571 00fc 14000000 		.4byte	.LFE34-.LFB34
 5572 0100 00000000 		.4byte	.LFB8
 5573 0104 28010000 		.4byte	.LFE8-.LFB8
 5574 0108 00000000 		.4byte	.LFB9
 5575 010c 54000000 		.4byte	.LFE9-.LFB9
 5576 0110 00000000 		.4byte	.LFB13
 5577 0114 44000000 		.4byte	.LFE13-.LFB13
 5578 0118 00000000 		.4byte	.LFB35
 5579 011c 48000000 		.4byte	.LFE35-.LFB35
 5580 0120 00000000 		.4byte	.LFB37
 5581 0124 60000000 		.4byte	.LFE37-.LFB37
 5582 0128 00000000 		.4byte	.LFB39
 5583 012c 10000000 		.4byte	.LFE39-.LFB39
 5584 0130 00000000 		.4byte	.LFB40
 5585 0134 10000000 		.4byte	.LFE40-.LFB40
 5586 0138 00000000 		.4byte	.LFB38
 5587 013c 18000000 		.4byte	.LFE38-.LFB38
 5588 0140 00000000 		.4byte	.LFB36
 5589 0144 1C000000 		.4byte	.LFE36-.LFB36
 5590 0148 00000000 		.4byte	.LFB41
 5591 014c 10000000 		.4byte	.LFE41-.LFB41
 5592 0150 00000000 		.4byte	.LFB42
 5593 0154 10000000 		.4byte	.LFE42-.LFB42
 5594 0158 00000000 		.4byte	.LFB43
 5595 015c 10000000 		.4byte	.LFE43-.LFB43
 5596 0160 00000000 		.4byte	.LFB44
 5597 0164 10000000 		.4byte	.LFE44-.LFB44
 5598 0168 00000000 		.4byte	.LFB45
 5599 016c 18000000 		.4byte	.LFE45-.LFB45
 5600 0170 00000000 		.4byte	.LFB46
 5601 0174 10000000 		.4byte	.LFE46-.LFB46
 5602 0178 00000000 		.4byte	.LFB47
 5603 017c 10000000 		.4byte	.LFE47-.LFB47
 5604 0180 00000000 		.4byte	.LFB51
 5605 0184 24000000 		.4byte	.LFE51-.LFB51
 5606 0188 00000000 		.4byte	.LFB48
 5607 018c 0C000000 		.4byte	.LFE48-.LFB48
 5608 0190 00000000 		.4byte	.LFB49
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 158


 5609 0194 10000000 		.4byte	.LFE49-.LFB49
 5610 0198 00000000 		.4byte	.LFB50
 5611 019c 0C000000 		.4byte	.LFE50-.LFB50
 5612 01a0 00000000 		.4byte	.LFB52
 5613 01a4 70000000 		.4byte	.LFE52-.LFB52
 5614 01a8 00000000 		.4byte	0
 5615 01ac 00000000 		.4byte	0
 5616              		.section	.debug_ranges,"",%progbits
 5617              	.Ldebug_ranges0:
 5618 0000 2C000000 		.4byte	.LBB50
 5619 0004 2E000000 		.4byte	.LBE50
 5620 0008 2E000000 		.4byte	.LBB53
 5621 000c 30000000 		.4byte	.LBE53
 5622 0010 00000000 		.4byte	0
 5623 0014 00000000 		.4byte	0
 5624 0018 04000000 		.4byte	.LBB68
 5625 001c 06000000 		.4byte	.LBE68
 5626 0020 18000000 		.4byte	.LBB81
 5627 0024 1E000000 		.4byte	.LBE81
 5628 0028 20000000 		.4byte	.LBB82
 5629 002c 22000000 		.4byte	.LBE82
 5630 0030 00000000 		.4byte	0
 5631 0034 00000000 		.4byte	0
 5632 0038 08000000 		.4byte	.LBB75
 5633 003c 0A000000 		.4byte	.LBE75
 5634 0040 14000000 		.4byte	.LBB79
 5635 0044 16000000 		.4byte	.LBE79
 5636 0048 16000000 		.4byte	.LBB80
 5637 004c 18000000 		.4byte	.LBE80
 5638 0050 00000000 		.4byte	0
 5639 0054 00000000 		.4byte	0
 5640 0058 2C000000 		.4byte	.LBB83
 5641 005c 2E000000 		.4byte	.LBE83
 5642 0060 30000000 		.4byte	.LBB90
 5643 0064 32000000 		.4byte	.LBE90
 5644 0068 38000000 		.4byte	.LBB94
 5645 006c 3C000000 		.4byte	.LBE94
 5646 0070 00000000 		.4byte	0
 5647 0074 00000000 		.4byte	0
 5648 0078 2E000000 		.4byte	.LBB87
 5649 007c 30000000 		.4byte	.LBE87
 5650 0080 32000000 		.4byte	.LBB91
 5651 0084 34000000 		.4byte	.LBE91
 5652 0088 00000000 		.4byte	0
 5653 008c 00000000 		.4byte	0
 5654 0090 04000000 		.4byte	.LBB97
 5655 0094 06000000 		.4byte	.LBE97
 5656 0098 0A000000 		.4byte	.LBB100
 5657 009c 0E000000 		.4byte	.LBE100
 5658 00a0 00000000 		.4byte	0
 5659 00a4 00000000 		.4byte	0
 5660 00a8 00000000 		.4byte	.LFB2
 5661 00ac 14000000 		.4byte	.LFE2
 5662 00b0 00000000 		.4byte	.LFB3
 5663 00b4 10000000 		.4byte	.LFE3
 5664 00b8 00000000 		.4byte	.LFB4
 5665 00bc 20000000 		.4byte	.LFE4
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 159


 5666 00c0 00000000 		.4byte	.LFB5
 5667 00c4 34000000 		.4byte	.LFE5
 5668 00c8 00000000 		.4byte	.LFB6
 5669 00cc 18000000 		.4byte	.LFE6
 5670 00d0 00000000 		.4byte	.LFB7
 5671 00d4 28000000 		.4byte	.LFE7
 5672 00d8 00000000 		.4byte	.LFB10
 5673 00dc 24000000 		.4byte	.LFE10
 5674 00e0 00000000 		.4byte	.LFB11
 5675 00e4 10000000 		.4byte	.LFE11
 5676 00e8 00000000 		.4byte	.LFB12
 5677 00ec 38000000 		.4byte	.LFE12
 5678 00f0 00000000 		.4byte	.LFB14
 5679 00f4 20000000 		.4byte	.LFE14
 5680 00f8 00000000 		.4byte	.LFB15
 5681 00fc 10000000 		.4byte	.LFE15
 5682 0100 00000000 		.4byte	.LFB16
 5683 0104 0C000000 		.4byte	.LFE16
 5684 0108 00000000 		.4byte	.LFB17
 5685 010c 14000000 		.4byte	.LFE17
 5686 0110 00000000 		.4byte	.LFB18
 5687 0114 10000000 		.4byte	.LFE18
 5688 0118 00000000 		.4byte	.LFB19
 5689 011c 0C000000 		.4byte	.LFE19
 5690 0120 00000000 		.4byte	.LFB20
 5691 0124 14000000 		.4byte	.LFE20
 5692 0128 00000000 		.4byte	.LFB21
 5693 012c 12000000 		.4byte	.LFE21
 5694 0130 00000000 		.4byte	.LFB22
 5695 0134 18000000 		.4byte	.LFE22
 5696 0138 00000000 		.4byte	.LFB23
 5697 013c 14000000 		.4byte	.LFE23
 5698 0140 00000000 		.4byte	.LFB24
 5699 0144 3C000000 		.4byte	.LFE24
 5700 0148 00000000 		.4byte	.LFB25
 5701 014c 28000000 		.4byte	.LFE25
 5702 0150 00000000 		.4byte	.LFB26
 5703 0154 14000000 		.4byte	.LFE26
 5704 0158 00000000 		.4byte	.LFB27
 5705 015c 18000000 		.4byte	.LFE27
 5706 0160 00000000 		.4byte	.LFB28
 5707 0164 14000000 		.4byte	.LFE28
 5708 0168 00000000 		.4byte	.LFB29
 5709 016c 14000000 		.4byte	.LFE29
 5710 0170 00000000 		.4byte	.LFB30
 5711 0174 14000000 		.4byte	.LFE30
 5712 0178 00000000 		.4byte	.LFB31
 5713 017c 04000000 		.4byte	.LFE31
 5714 0180 00000000 		.4byte	.LFB32
 5715 0184 18000000 		.4byte	.LFE32
 5716 0188 00000000 		.4byte	.LFB33
 5717 018c 2C000000 		.4byte	.LFE33
 5718 0190 00000000 		.4byte	.LFB34
 5719 0194 14000000 		.4byte	.LFE34
 5720 0198 00000000 		.4byte	.LFB8
 5721 019c 28010000 		.4byte	.LFE8
 5722 01a0 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 160


 5723 01a4 54000000 		.4byte	.LFE9
 5724 01a8 00000000 		.4byte	.LFB13
 5725 01ac 44000000 		.4byte	.LFE13
 5726 01b0 00000000 		.4byte	.LFB35
 5727 01b4 48000000 		.4byte	.LFE35
 5728 01b8 00000000 		.4byte	.LFB37
 5729 01bc 60000000 		.4byte	.LFE37
 5730 01c0 00000000 		.4byte	.LFB39
 5731 01c4 10000000 		.4byte	.LFE39
 5732 01c8 00000000 		.4byte	.LFB40
 5733 01cc 10000000 		.4byte	.LFE40
 5734 01d0 00000000 		.4byte	.LFB38
 5735 01d4 18000000 		.4byte	.LFE38
 5736 01d8 00000000 		.4byte	.LFB36
 5737 01dc 1C000000 		.4byte	.LFE36
 5738 01e0 00000000 		.4byte	.LFB41
 5739 01e4 10000000 		.4byte	.LFE41
 5740 01e8 00000000 		.4byte	.LFB42
 5741 01ec 10000000 		.4byte	.LFE42
 5742 01f0 00000000 		.4byte	.LFB43
 5743 01f4 10000000 		.4byte	.LFE43
 5744 01f8 00000000 		.4byte	.LFB44
 5745 01fc 10000000 		.4byte	.LFE44
 5746 0200 00000000 		.4byte	.LFB45
 5747 0204 18000000 		.4byte	.LFE45
 5748 0208 00000000 		.4byte	.LFB46
 5749 020c 10000000 		.4byte	.LFE46
 5750 0210 00000000 		.4byte	.LFB47
 5751 0214 10000000 		.4byte	.LFE47
 5752 0218 00000000 		.4byte	.LFB51
 5753 021c 24000000 		.4byte	.LFE51
 5754 0220 00000000 		.4byte	.LFB48
 5755 0224 0C000000 		.4byte	.LFE48
 5756 0228 00000000 		.4byte	.LFB49
 5757 022c 10000000 		.4byte	.LFE49
 5758 0230 00000000 		.4byte	.LFB50
 5759 0234 0C000000 		.4byte	.LFE50
 5760 0238 00000000 		.4byte	.LFB52
 5761 023c 70000000 		.4byte	.LFE52
 5762 0240 00000000 		.4byte	0
 5763 0244 00000000 		.4byte	0
 5764              		.section	.debug_line,"",%progbits
 5765              	.Ldebug_line0:
 5766 0000 C1050000 		.section	.debug_str,"MS",%progbits,1
 5766      02004D00 
 5766      00000201 
 5766      FB0E0D00 
 5766      01010101 
 5767              	.LASF56:
 5768 0000 72616D56 		.ascii	"ramVectorTable\000"
 5768      6563746F 
 5768      72546162 
 5768      6C6500
 5769              	.LASF76:
 5770 000f 62675472 		.ascii	"bgTrim4\000"
 5770      696D3400 
 5771              	.LASF10:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 161


 5772 0017 75696E74 		.ascii	"uint16\000"
 5772      313600
 5773              	.LASF112:
 5774 001e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5774      4320342E 
 5774      392E3320 
 5774      32303135 
 5774      30333033 
 5775 0051 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5775      20726576 
 5775      6973696F 
 5775      6E203232 
 5775      31323230 
 5776 0084 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 5776      66756E63 
 5776      74696F6E 
 5776      2D736563 
 5776      74696F6E 
 5777              	.LASF48:
 5778 00ac 696E7453 		.ascii	"intState\000"
 5778      74617465 
 5778      00
 5779              	.LASF34:
 5780 00b5 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5780      73436C6B 
 5780      57726974 
 5780      65486663 
 5780      6C6B4469 
 5781              	.LASF110:
 5782 00ce 43795379 		.ascii	"CySysClkPumpConfig\000"
 5782      73436C6B 
 5782      50756D70 
 5782      436F6E66 
 5782      696700
 5783              	.LASF55:
 5784 00e1 6F6C6449 		.ascii	"oldIsr\000"
 5784      737200
 5785              	.LASF99:
 5786 00e8 72657456 		.ascii	"retVal\000"
 5786      616C00
 5787              	.LASF47:
 5788 00ef 43794469 		.ascii	"CyDisableInts\000"
 5788      7361626C 
 5788      65496E74 
 5788      7300
 5789              	.LASF79:
 5790 00fd 63757272 		.ascii	"currentImoTrim2Value\000"
 5790      656E7449 
 5790      6D6F5472 
 5790      696D3256 
 5790      616C7565 
 5791              	.LASF7:
 5792 0112 6C6F6E67 		.ascii	"long long unsigned int\000"
 5792      206C6F6E 
 5792      6720756E 
 5792      7369676E 
 5792      65642069 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 162


 5793              	.LASF108:
 5794 0129 43795379 		.ascii	"CySysTickInitVar\000"
 5794      73546963 
 5794      6B496E69 
 5794      74566172 
 5794      00
 5795              	.LASF114:
 5796 013a 433A5C55 		.ascii	"C:\\Users\\zhiantec\\Documents\\Tencent Files\\1241"
 5796      73657273 
 5796      5C7A6869 
 5796      616E7465 
 5796      635C446F 
 5797 0168 39333938 		.ascii	"939835\\FileRecv\\MobileFile\\second_images[4-8]\\E"
 5797      33355C46 
 5797      696C6552 
 5797      6563765C 
 5797      4D6F6269 
 5798 0197 6E747261 		.ascii	"ntranceGuard_171019-12.50\\EntranceGuard.cydsn\000"
 5798      6E636547 
 5798      75617264 
 5798      5F313731 
 5798      3031392D 
 5799              	.LASF69:
 5800 01c5 4379536F 		.ascii	"CySoftwareReset\000"
 5800      66747761 
 5800      72655265 
 5800      73657400 
 5801              	.LASF88:
 5802 01d5 43795379 		.ascii	"CySysTickEnableInterrupt\000"
 5802      73546963 
 5802      6B456E61 
 5802      626C6549 
 5802      6E746572 
 5803              	.LASF65:
 5804 01ee 4379496E 		.ascii	"CyIntGetState\000"
 5804      74476574 
 5804      53746174 
 5804      6500
 5805              	.LASF6:
 5806 01fc 6C6F6E67 		.ascii	"long long int\000"
 5806      206C6F6E 
 5806      6720696E 
 5806      7400
 5807              	.LASF0:
 5808 020a 7369676E 		.ascii	"signed char\000"
 5808      65642063 
 5808      68617200 
 5809              	.LASF75:
 5810 0216 66726571 		.ascii	"freq\000"
 5810      00
 5811              	.LASF85:
 5812 021b 43794465 		.ascii	"CyDelayFreq\000"
 5812      6C617946 
 5812      72657100 
 5813              	.LASF32:
 5814 0227 696E7465 		.ascii	"interruptState\000"
 5814      72727570 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 163


 5814      74537461 
 5814      746500
 5815              	.LASF93:
 5816 0236 43795379 		.ascii	"CySysTickGetReload\000"
 5816      73546963 
 5816      6B476574 
 5816      52656C6F 
 5816      616400
 5817              	.LASF4:
 5818 0249 6C6F6E67 		.ascii	"long int\000"
 5818      20696E74 
 5818      00
 5819              	.LASF66:
 5820 0252 4379496E 		.ascii	"CyIntDisable\000"
 5820      74446973 
 5820      61626C65 
 5820      00
 5821              	.LASF100:
 5822 025f 43795379 		.ascii	"CySysTickGetCallback\000"
 5822      73546963 
 5822      6B476574 
 5822      43616C6C 
 5822      6261636B 
 5823              	.LASF9:
 5824 0274 75696E74 		.ascii	"uint8\000"
 5824      3800
 5825              	.LASF105:
 5826 027a 63796465 		.ascii	"cydelayFreqKhz\000"
 5826      6C617946 
 5826      7265714B 
 5826      687A00
 5827              	.LASF37:
 5828 0289 656E6162 		.ascii	"enable\000"
 5828      6C6500
 5829              	.LASF13:
 5830 0290 646F7562 		.ascii	"double\000"
 5830      6C6500
 5831              	.LASF62:
 5832 0297 73686966 		.ascii	"shift\000"
 5832      7400
 5833              	.LASF28:
 5834 029d 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5834      734C7664 
 5834      436C6561 
 5834      72496E74 
 5834      65727275 
 5835              	.LASF11:
 5836 02b4 75696E74 		.ascii	"uint32\000"
 5836      333200
 5837              	.LASF51:
 5838 02bb 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5838      73436C6B 
 5838      45636F52 
 5838      65616453 
 5838      74617475 
 5839              	.LASF50:
 5840 02d1 6D61736B 		.ascii	"mask\000"
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 164


 5840      00
 5841              	.LASF44:
 5842 02d6 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5842      73436C6B 
 5842      47657453 
 5842      7973636C 
 5842      6B536F75 
 5843              	.LASF63:
 5844 02ee 4379496E 		.ascii	"CyIntGetPriority\000"
 5844      74476574 
 5844      5072696F 
 5844      72697479 
 5844      00
 5845              	.LASF107:
 5846 02ff 63796465 		.ascii	"cydelay32kMs\000"
 5846      6C617933 
 5846      326B4D73 
 5846      00
 5847              	.LASF86:
 5848 030c 43795379 		.ascii	"CySysTickInit\000"
 5848      73546963 
 5848      6B496E69 
 5848      7400
 5849              	.LASF27:
 5850 031a 76616C75 		.ascii	"value\000"
 5850      6500
 5851              	.LASF24:
 5852 0320 636C6F63 		.ascii	"clockSource\000"
 5852      6B536F75 
 5852      72636500 
 5853              	.LASF101:
 5854 032c 43794765 		.ascii	"CyGetUniqueId\000"
 5854      74556E69 
 5854      71756549 
 5854      6400
 5855              	.LASF96:
 5856 033a 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5856      73546963 
 5856      6B476574 
 5856      436F756E 
 5856      74466C61 
 5857              	.LASF8:
 5858 0350 756E7369 		.ascii	"unsigned int\000"
 5858      676E6564 
 5858      20696E74 
 5858      00
 5859              	.LASF29:
 5860 035d 43795379 		.ascii	"CySysTickClear\000"
 5860      73546963 
 5860      6B436C65 
 5860      617200
 5861              	.LASF5:
 5862 036c 6C6F6E67 		.ascii	"long unsigned int\000"
 5862      20756E73 
 5862      69676E65 
 5862      6420696E 
 5862      7400
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 165


 5863              	.LASF92:
 5864 037e 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5864      734C7664 
 5864      47657449 
 5864      6E746572 
 5864      72757074 
 5865              	.LASF31:
 5866 0399 43795379 		.ascii	"CySysClkImoStop\000"
 5866      73436C6B 
 5866      496D6F53 
 5866      746F7000 
 5867              	.LASF116:
 5868 03a9 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5868      74657243 
 5868      72697469 
 5868      63616C53 
 5868      65637469 
 5869              	.LASF67:
 5870 03c0 4379496E 		.ascii	"CyIntSetPending\000"
 5870      74536574 
 5870      50656E64 
 5870      696E6700 
 5871              	.LASF45:
 5872 03d0 43795379 		.ascii	"CySysGetResetReason\000"
 5872      73476574 
 5872      52657365 
 5872      74526561 
 5872      736F6E00 
 5873              	.LASF3:
 5874 03e4 73686F72 		.ascii	"short unsigned int\000"
 5874      7420756E 
 5874      7369676E 
 5874      65642069 
 5874      6E7400
 5875              	.LASF22:
 5876 03f7 43795379 		.ascii	"CySysTickSetClockSource\000"
 5876      73546963 
 5876      6B536574 
 5876      436C6F63 
 5876      6B536F75 
 5877              	.LASF58:
 5878 040f 4379496E 		.ascii	"CyIntSetVector\000"
 5878      74536574 
 5878      56656374 
 5878      6F7200
 5879              	.LASF53:
 5880 041e 6E756D62 		.ascii	"number\000"
 5880      657200
 5881              	.LASF61:
 5882 0425 7072696F 		.ascii	"priority\000"
 5882      72697479 
 5882      00
 5883              	.LASF49:
 5884 042e 4379456E 		.ascii	"CyEnableInts\000"
 5884      61626C65 
 5884      496E7473 
 5884      00
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 166


 5885              	.LASF74:
 5886 043b 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5886      73436C6B 
 5886      57726974 
 5886      65496D6F 
 5886      46726571 
 5887              	.LASF52:
 5888 0450 4379496E 		.ascii	"CyIntSetSysVector\000"
 5888      74536574 
 5888      53797356 
 5888      6563746F 
 5888      7200
 5889              	.LASF35:
 5890 0462 43795379 		.ascii	"CySysEnablePumpClock\000"
 5890      73456E61 
 5890      626C6550 
 5890      756D7043 
 5890      6C6F636B 
 5891              	.LASF17:
 5892 0477 72656733 		.ascii	"reg32\000"
 5892      3200
 5893              	.LASF90:
 5894 047d 43795379 		.ascii	"CySysTickStart\000"
 5894      73546963 
 5894      6B537461 
 5894      727400
 5895              	.LASF46:
 5896 048c 72657475 		.ascii	"returnStatus\000"
 5896      726E5374 
 5896      61747573 
 5896      00
 5897              	.LASF19:
 5898 0499 73697A65 		.ascii	"sizetype\000"
 5898      74797065 
 5898      00
 5899              	.LASF68:
 5900 04a2 4379496E 		.ascii	"CyIntClearPending\000"
 5900      74436C65 
 5900      61725065 
 5900      6E64696E 
 5900      6700
 5901              	.LASF54:
 5902 04b4 61646472 		.ascii	"address\000"
 5902      65737300 
 5903              	.LASF77:
 5904 04bc 62675472 		.ascii	"bgTrim5\000"
 5904      696D3500 
 5905              	.LASF38:
 5906 04c4 73797363 		.ascii	"sysclkSource\000"
 5906      6C6B536F 
 5906      75726365 
 5906      00
 5907              	.LASF98:
 5908 04d1 66756E63 		.ascii	"function\000"
 5908      74696F6E 
 5908      00
 5909              	.LASF109:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 167


 5910 04da 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5910      6F467265 
 5910      714D687A 
 5910      32526567 
 5910      00
 5911              	.LASF94:
 5912 04eb 43795379 		.ascii	"CySysTickGetValue\000"
 5912      73546963 
 5912      6B476574 
 5912      56616C75 
 5912      6500
 5913              	.LASF104:
 5914 04fd 63796465 		.ascii	"cydelayFreqHz\000"
 5914      6C617946 
 5914      72657148 
 5914      7A00
 5915              	.LASF60:
 5916 050b 4379496E 		.ascii	"CyIntSetPriority\000"
 5916      74536574 
 5916      5072696F 
 5916      72697479 
 5916      00
 5917              	.LASF12:
 5918 051c 666C6F61 		.ascii	"float\000"
 5918      7400
 5919              	.LASF111:
 5920 0522 43794578 		.ascii	"CyExitCriticalSection\000"
 5920      69744372 
 5920      69746963 
 5920      616C5365 
 5920      6374696F 
 5921              	.LASF83:
 5922 0538 43795379 		.ascii	"CySysLvdEnable\000"
 5922      734C7664 
 5922      456E6162 
 5922      6C6500
 5923              	.LASF20:
 5924 0547 63795379 		.ascii	"cySysTickCallback\000"
 5924      73546963 
 5924      6B43616C 
 5924      6C626163 
 5924      6B00
 5925              	.LASF59:
 5926 0559 4379496E 		.ascii	"CyIntGetVector\000"
 5926      74476574 
 5926      56656374 
 5926      6F7200
 5927              	.LASF71:
 5928 0568 6D696C6C 		.ascii	"milliseconds\000"
 5928      69736563 
 5928      6F6E6473 
 5928      00
 5929              	.LASF117:
 5930 0575 43794465 		.ascii	"CyDelayCycles\000"
 5930      6C617943 
 5930      79636C65 
 5930      7300
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 168


 5931              	.LASF16:
 5932 0583 72656738 		.ascii	"reg8\000"
 5932      00
 5933              	.LASF84:
 5934 0588 74687265 		.ascii	"threshold\000"
 5934      73686F6C 
 5934      6400
 5935              	.LASF21:
 5936 0592 43794861 		.ascii	"CyHalt\000"
 5936      6C7400
 5937              	.LASF1:
 5938 0599 756E7369 		.ascii	"unsigned char\000"
 5938      676E6564 
 5938      20636861 
 5938      7200
 5939              	.LASF2:
 5940 05a7 73686F72 		.ascii	"short int\000"
 5940      7420696E 
 5940      7400
 5941              	.LASF64:
 5942 05b1 4379496E 		.ascii	"CyIntEnable\000"
 5942      74456E61 
 5942      626C6500 
 5943              	.LASF57:
 5944 05bd 4379496E 		.ascii	"CyIntGetSysVector\000"
 5944      74476574 
 5944      53797356 
 5944      6563746F 
 5944      7200
 5945              	.LASF36:
 5946 05cf 636C6B53 		.ascii	"clkSelect\000"
 5946      656C6563 
 5946      7400
 5947              	.LASF81:
 5948 05d9 43795379 		.ascii	"CySysClkEcoStart\000"
 5948      73436C6B 
 5948      45636F53 
 5948      74617274 
 5948      00
 5949              	.LASF72:
 5950 05ea 43794465 		.ascii	"CyDelayUs\000"
 5950      6C617955 
 5950      7300
 5951              	.LASF23:
 5952 05f4 72656173 		.ascii	"reason\000"
 5952      6F6E00
 5953              	.LASF14:
 5954 05fb 63686172 		.ascii	"char\000"
 5954      00
 5955              	.LASF18:
 5956 0600 63796973 		.ascii	"cyisraddress\000"
 5956      72616464 
 5956      72657373 
 5956      00
 5957              	.LASF89:
 5958 060d 43795379 		.ascii	"CySysTickEnable\000"
 5958      73546963 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 169


 5958      6B456E61 
 5958      626C6500 
 5959              	.LASF39:
 5960 061d 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5960      73436C6B 
 5960      57726974 
 5960      65537973 
 5960      636C6B44 
 5961              	.LASF97:
 5962 0634 43795379 		.ascii	"CySysTickSetCallback\000"
 5962      73546963 
 5962      6B536574 
 5962      43616C6C 
 5962      6261636B 
 5963              	.LASF103:
 5964 0649 43795379 		.ascii	"CySysTickCallbacks\000"
 5964      73546963 
 5964      6B43616C 
 5964      6C626163 
 5964      6B7300
 5965              	.LASF80:
 5966 065c 696D6F54 		.ascii	"imoTrim1Value\000"
 5966      72696D31 
 5966      56616C75 
 5966      6500
 5967              	.LASF102:
 5968 066a 756E6971 		.ascii	"uniqueId\000"
 5968      75654964 
 5968      00
 5969              	.LASF70:
 5970 0673 43794465 		.ascii	"CyDelay\000"
 5970      6C617900 
 5971              	.LASF95:
 5972 067b 43795379 		.ascii	"CySysTickGetClockSource\000"
 5972      73546963 
 5972      6B476574 
 5972      436C6F63 
 5972      6B536F75 
 5973              	.LASF91:
 5974 0693 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5974      73546963 
 5974      6B446973 
 5974      61626C65 
 5974      496E7465 
 5975              	.LASF43:
 5976 06ad 43795379 		.ascii	"CySysLvdDisable\000"
 5976      734C7664 
 5976      44697361 
 5976      626C6500 
 5977              	.LASF106:
 5978 06bd 63796465 		.ascii	"cydelayFreqMhz\000"
 5978      6C617946 
 5978      7265714D 
 5978      687A00
 5979              	.LASF41:
 5980 06cc 43795379 		.ascii	"CySysClkEcoStop\000"
 5980      73436C6B 
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 170


 5980      45636F53 
 5980      746F7000 
 5981              	.LASF87:
 5982 06dc 43795379 		.ascii	"CySysTickStop\000"
 5982      73546963 
 5982      6B53746F 
 5982      7000
 5983              	.LASF82:
 5984 06ea 74696D65 		.ascii	"timeoutUs\000"
 5984      6F757455 
 5984      7300
 5985              	.LASF40:
 5986 06f4 64697669 		.ascii	"divider\000"
 5986      64657200 
 5987              	.LASF42:
 5988 06fc 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5988      73436C6B 
 5988      57726974 
 5988      6545636F 
 5988      44697600 
 5989              	.LASF15:
 5990 0710 63797374 		.ascii	"cystatus\000"
 5990      61747573 
 5990      00
 5991              	.LASF30:
 5992 0719 43795379 		.ascii	"CySysClkImoStart\000"
 5992      73436C6B 
 5992      496D6F53 
 5992      74617274 
 5992      00
 5993              	.LASF78:
 5994 072a 6E657749 		.ascii	"newImoTrim2Value\000"
 5994      6D6F5472 
 5994      696D3256 
 5994      616C7565 
 5994      00
 5995              	.LASF113:
 5996 073b 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5996      72617465 
 5996      645F536F 
 5996      75726365 
 5996      5C50536F 
 5997              	.LASF73:
 5998 075a 6D696372 		.ascii	"microseconds\000"
 5998      6F736563 
 5998      6F6E6473 
 5998      00
 5999              	.LASF33:
 6000 0767 746D7052 		.ascii	"tmpReg\000"
 6000      656700
 6001              	.LASF26:
 6002 076e 43795379 		.ascii	"CySysTickSetReload\000"
 6002      73546963 
 6002      6B536574 
 6002      52656C6F 
 6002      616400
 6003              	.LASF115:
ARM GAS  C:\Users\zhiantec\AppData\Local\Temp\ccLCH7xb.s 			page 171


 6004 0781 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 6004      73546963 
 6004      6B536572 
 6004      76696365 
 6004      43616C6C 
 6005              	.LASF25:
 6006 079b 72657475 		.ascii	"returnValue\000"
 6006      726E5661 
 6006      6C756500 
 6007              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
