ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 4
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"CyLib.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.CySysClkImoStart,"ax",%progbits
  18              		.align	1
  19              		.global	CySysClkImoStart
  20              		.code	16
  21              		.thumb_func
  22              		.type	CySysClkImoStart, %function
  23              	CySysClkImoStart:
  24              	.LFB2:
  25              		.file 1 "Generated_Source\\PSoC4\\CyLib.c"
   1:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CyLib.c **** * \file CyLib.c
   3:Generated_Source\PSoC4/CyLib.c **** * \version 5.40
   4:Generated_Source\PSoC4/CyLib.c **** *
   5:Generated_Source\PSoC4/CyLib.c **** * \brief Provides a system API for the Clocking, Interrupts, SysTick, and
   6:Generated_Source\PSoC4/CyLib.c **** * Voltage Detect.
   7:Generated_Source\PSoC4/CyLib.c **** *
   8:Generated_Source\PSoC4/CyLib.c **** * \note Documentation of the API's in this file is located in the PSoC 4 System
   9:Generated_Source\PSoC4/CyLib.c **** * Reference Guide provided with PSoC Creator.
  10:Generated_Source\PSoC4/CyLib.c **** *
  11:Generated_Source\PSoC4/CyLib.c **** ********************************************************************************
  12:Generated_Source\PSoC4/CyLib.c **** * \copyright
  13:Generated_Source\PSoC4/CyLib.c **** * Copyright 2010-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/CyLib.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/CyLib.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/CyLib.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/CyLib.c **** 
  19:Generated_Source\PSoC4/CyLib.c **** #include "CyLib.h"
  20:Generated_Source\PSoC4/CyLib.c **** 
  21:Generated_Source\PSoC4/CyLib.c **** /* CySysClkWriteImoFreq() || CySysClkImoEnableWcoLock() */
  22:Generated_Source\PSoC4/CyLib.c **** #if ((CY_IP_SRSSV2 && CY_IP_FMLT) || CY_IP_IMO_TRIMMABLE_BY_WCO)
  23:Generated_Source\PSoC4/CyLib.c ****     #include "CyFlash.h"
  24:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_FMLT) */
  25:Generated_Source\PSoC4/CyLib.c **** 
  26:Generated_Source\PSoC4/CyLib.c **** /* Do not use these definitions directly in your application */
  27:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqHz  = CYDEV_BCLK__SYSCLK__HZ;
  28:Generated_Source\PSoC4/CyLib.c **** uint32 cydelayFreqKhz = (CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRE
  29:Generated_Source\PSoC4/CyLib.c **** uint8  cydelayFreqMhz = (uint8)((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY
  30:Generated_Source\PSoC4/CyLib.c **** uint32 cydelay32kMs   = CY_DELAY_MS_OVERFLOW * ((CYDEV_BCLK__SYSCLK__HZ + CY_DELAY_1K_MINUS_1_THRES
  31:Generated_Source\PSoC4/CyLib.c ****                         CY_DELAY_1K_THRESHOLD);
  32:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 2


  33:Generated_Source\PSoC4/CyLib.c **** 
  34:Generated_Source\PSoC4/CyLib.c **** static cySysTickCallback CySysTickCallbacks[CY_SYS_SYST_NUM_OF_CALLBACKS];
  35:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void);
  36:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
  37:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll);
  38:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll);
  39:Generated_Source\PSoC4/CyLib.c **** #endif /* #if (CY_IP_SRSSV2 && CY_IP_PLL) */
  40:Generated_Source\PSoC4/CyLib.c **** 
  41:Generated_Source\PSoC4/CyLib.c **** 
  42:Generated_Source\PSoC4/CyLib.c **** /***************************************************************************//**
  43:Generated_Source\PSoC4/CyLib.c **** * Indicates whether or not the SysTick has been initialized. The variable is
  44:Generated_Source\PSoC4/CyLib.c **** * initialized to 0 and set to 1 the first time CySysTickStart() is called.
  45:Generated_Source\PSoC4/CyLib.c **** *
  46:Generated_Source\PSoC4/CyLib.c **** * This allows the component to restart without reinitialization after the first
  47:Generated_Source\PSoC4/CyLib.c **** * call to the CySysTickStart() routine.
  48:Generated_Source\PSoC4/CyLib.c **** *
  49:Generated_Source\PSoC4/CyLib.c **** * If reinitialization of the SysTick is required, call CySysTickInit() before
  50:Generated_Source\PSoC4/CyLib.c **** * calling CySysTickStart(). Alternatively, the SysTick can be reinitialized by
  51:Generated_Source\PSoC4/CyLib.c **** * calling the CySysTickInit() and CySysTickEnable() functions.
  52:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
  53:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickInitVar = 0u;
  54:Generated_Source\PSoC4/CyLib.c **** 
  55:Generated_Source\PSoC4/CyLib.c **** 
  56:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
  57:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between CySysClkWriteImoFreq() parameter and register's value */
  58:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_FREQ_TABLE_SIZE] = {
  59:Generated_Source\PSoC4/CyLib.c ****             /*  3 MHz */ 0x03u,  /*  4 MHz */ 0x04u,  /*  5 MHz */ 0x05u,  /*  6 MHz */ 0x06u,
  60:Generated_Source\PSoC4/CyLib.c ****             /*  7 MHz */ 0x07u,  /*  8 MHz */ 0x08u,  /*  9 MHz */ 0x09u,  /* 10 MHz */ 0x0Au,
  61:Generated_Source\PSoC4/CyLib.c ****             /* 11 MHz */ 0x0Bu,  /* 12 MHz */ 0x0Cu,  /* 13 MHz */ 0x0Eu,  /* 14 MHz */ 0x0Fu,
  62:Generated_Source\PSoC4/CyLib.c ****             /* 15 MHz */ 0x10u,  /* 16 MHz */ 0x11u,  /* 17 MHz */ 0x12u,  /* 18 MHz */ 0x13u,
  63:Generated_Source\PSoC4/CyLib.c ****             /* 19 MHz */ 0x14u,  /* 20 MHz */ 0x15u,  /* 21 MHz */ 0x16u,  /* 22 MHz */ 0x17u,
  64:Generated_Source\PSoC4/CyLib.c ****             /* 23 MHz */ 0x18u,  /* 24 MHz */ 0x19u,  /* 25 MHz */ 0x1Bu,  /* 26 MHz */ 0x1Cu,
  65:Generated_Source\PSoC4/CyLib.c ****             /* 27 MHz */ 0x1Du,  /* 28 MHz */ 0x1Eu,  /* 29 MHz */ 0x1Fu,  /* 30 MHz */ 0x20u,
  66:Generated_Source\PSoC4/CyLib.c ****             /* 31 MHz */ 0x21u,  /* 32 MHz */ 0x22u,  /* 33 MHz */ 0x23u,  /* 34 MHz */ 0x25u,
  67:Generated_Source\PSoC4/CyLib.c ****             /* 35 MHz */ 0x26u,  /* 36 MHz */ 0x27u,  /* 37 MHz */ 0x28u,  /* 38 MHz */ 0x29u,
  68:Generated_Source\PSoC4/CyLib.c ****             /* 39 MHz */ 0x2Au,  /* 40 MHz */ 0x2Bu,  /* 41 MHz */ 0x2Eu,  /* 42 MHz */ 0x2Fu,
  69:Generated_Source\PSoC4/CyLib.c ****             /* 43 MHz */ 0x30u,  /* 44 MHz */ 0x31u,  /* 45 MHz */ 0x32u,  /* 46 MHz */ 0x33u,
  70:Generated_Source\PSoC4/CyLib.c ****             /* 47 MHz */ 0x34u,  /* 48 MHz */ 0x35u };
  71:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
  72:Generated_Source\PSoC4/CyLib.c **** 
  73:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
  74:Generated_Source\PSoC4/CyLib.c ****         /* Conversion between IMO frequency and WCO DPLL max offset steps */
  75:Generated_Source\PSoC4/CyLib.c ****         const uint8 cyImoFreqMhz2DpllOffset[CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_SIZE] = {
  76:Generated_Source\PSoC4/CyLib.c ****             /* 26 MHz */  238u, /* 27 MHz */  219u, /* 28 MHz */  201u, /* 29 MHz */  185u,
  77:Generated_Source\PSoC4/CyLib.c ****             /* 30 MHz */  170u, /* 31 MHz */  155u, /* 32 MHz */  142u, /* 33 MHz */  130u,
  78:Generated_Source\PSoC4/CyLib.c ****             /* 34 MHz */  118u, /* 35 MHz */  107u, /* 36 MHz */   96u, /* 37 MHz */  86u,
  79:Generated_Source\PSoC4/CyLib.c ****             /* 38 MHz */   77u, /* 39 MHz */   68u, /* 40 MHz */   59u, /* 41 MHz */  51u,
  80:Generated_Source\PSoC4/CyLib.c ****             /* 42 MHz */   44u, /* 43 MHz */   36u, /* 44 MHz */   29u, /* 45 MHz */  23u,
  81:Generated_Source\PSoC4/CyLib.c ****             /* 46 MHz */   16u, /* 47 MHz */   10u, /* 48 MHz */   4u };
  82:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
  83:Generated_Source\PSoC4/CyLib.c **** 
  84:Generated_Source\PSoC4/CyLib.c **** /* Stored CY_SYS_CLK_IMO_TRIM4_REG when modified for USB lock */
  85:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2)
  86:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoTrim4 = 0u;
  87:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_USB && CY_IP_SRSSV2) */
  88:Generated_Source\PSoC4/CyLib.c **** 
  89:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 3


  90:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
  91:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStart
  92:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
  93:Generated_Source\PSoC4/CyLib.c **** *
  94:Generated_Source\PSoC4/CyLib.c **** * Enables the IMO.
  95:Generated_Source\PSoC4/CyLib.c **** *
  96:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
  97:Generated_Source\PSoC4/CyLib.c **** * this function will also enable WCO lock if selected in the Design Wide
  98:Generated_Source\PSoC4/CyLib.c **** * Resources tab.
  99:Generated_Source\PSoC4/CyLib.c **** *
 100:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L / devices, this function will also enable USB lock if selected
 101:Generated_Source\PSoC4/CyLib.c **** * in the Design Wide Resources tab.
 102:Generated_Source\PSoC4/CyLib.c **** *
 103:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 104:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStart(void)
 105:Generated_Source\PSoC4/CyLib.c **** {
  26              		.loc 1 105 0
  27              		.cfi_startproc
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  28              		.loc 1 106 0
  29 0000 8021     		mov	r1, #128
  30 0002 034A     		ldr	r2, .L2
  31 0004 0906     		lsl	r1, r1, #24
  32 0006 1368     		ldr	r3, [r2]
 107:Generated_Source\PSoC4/CyLib.c **** 
 108:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 109:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_WCO == 1u)
 110:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableWcoLock();
 111:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_WCO == 1u) */
 112:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 113:Generated_Source\PSoC4/CyLib.c **** 
 114:Generated_Source\PSoC4/CyLib.c **** 
 115:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 116:Generated_Source\PSoC4/CyLib.c ****         #if (CYDEV_IMO_TRIMMED_BY_USB == 1u)
 117:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoEnableUsbLock();
 118:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 1u) */
 119:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 120:Generated_Source\PSoC4/CyLib.c **** 
 121:Generated_Source\PSoC4/CyLib.c **** }
  33              		.loc 1 121 0
  34              		@ sp needed
 106:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG |= CY_SYS_CLK_IMO_CONFIG_ENABLE;
  35              		.loc 1 106 0
  36 0008 0B43     		orr	r3, r1
  37 000a 1360     		str	r3, [r2]
  38              		.loc 1 121 0
  39 000c 7047     		bx	lr
  40              	.L3:
  41 000e C046     		.align	2
  42              	.L2:
  43 0010 08010B40 		.word	1074462984
  44              		.cfi_endproc
  45              	.LFE2:
  46              		.size	CySysClkImoStart, .-CySysClkImoStart
  47              		.section	.text.CySysClkImoStop,"ax",%progbits
  48              		.align	1
  49              		.global	CySysClkImoStop
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 4


  50              		.code	16
  51              		.thumb_func
  52              		.type	CySysClkImoStop, %function
  53              	CySysClkImoStop:
  54              	.LFB3:
 122:Generated_Source\PSoC4/CyLib.c **** 
 123:Generated_Source\PSoC4/CyLib.c **** 
 124:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 125:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkImoStop
 126:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 127:Generated_Source\PSoC4/CyLib.c **** *
 128:Generated_Source\PSoC4/CyLib.c **** * Disables the IMO.
 129:Generated_Source\PSoC4/CyLib.c **** *
 130:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4100M / PSoC 4200M / PSoC 4000S / PSoC 4100S / PSoC 4400 devices,
 131:Generated_Source\PSoC4/CyLib.c **** * this function will also disable WCO lock.
 132:Generated_Source\PSoC4/CyLib.c **** *
 133:Generated_Source\PSoC4/CyLib.c **** * For PSoC PSoC 4200L devices, this function will also disable USB lock.
 134:Generated_Source\PSoC4/CyLib.c **** *
 135:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 136:Generated_Source\PSoC4/CyLib.c **** void CySysClkImoStop(void)
 137:Generated_Source\PSoC4/CyLib.c **** {
  55              		.loc 1 137 0
  56              		.cfi_startproc
 138:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 139:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableWcoLock();
 140:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 141:Generated_Source\PSoC4/CyLib.c **** 
 142:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 143:Generated_Source\PSoC4/CyLib.c ****         CySysClkImoDisableUsbLock();
 144:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 145:Generated_Source\PSoC4/CyLib.c **** 
 146:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_IMO_CONFIG_REG &= ( uint32 ) ( ~( uint32 )CY_SYS_CLK_IMO_CONFIG_ENABLE);
  57              		.loc 1 146 0
  58 0000 024A     		ldr	r2, .L5
 147:Generated_Source\PSoC4/CyLib.c **** }
  59              		.loc 1 147 0
  60              		@ sp needed
 146:Generated_Source\PSoC4/CyLib.c **** }
  61              		.loc 1 146 0
  62 0002 1368     		ldr	r3, [r2]
  63 0004 5B00     		lsl	r3, r3, #1
  64 0006 5B08     		lsr	r3, r3, #1
  65 0008 1360     		str	r3, [r2]
  66              		.loc 1 147 0
  67 000a 7047     		bx	lr
  68              	.L6:
  69              		.align	2
  70              	.L5:
  71 000c 08010B40 		.word	1074462984
  72              		.cfi_endproc
  73              	.LFE3:
  74              		.size	CySysClkImoStop, .-CySysClkImoStop
  75              		.section	.text.CySysClkWriteHfclkDirect,"ax",%progbits
  76              		.align	1
  77              		.global	CySysClkWriteHfclkDirect
  78              		.code	16
  79              		.thumb_func
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 5


  80              		.type	CySysClkWriteHfclkDirect, %function
  81              	CySysClkWriteHfclkDirect:
  82              	.LFB4:
 148:Generated_Source\PSoC4/CyLib.c **** 
 149:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 150:Generated_Source\PSoC4/CyLib.c **** 
 151:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 152:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableWcoLock
 153:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 154:Generated_Source\PSoC4/CyLib.c ****     *
 155:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to WCO lock feature. This function works only if the WCO is
 156:Generated_Source\PSoC4/CyLib.c ****     * already enabled. If the WCO is not enabled then this function returns
 157:Generated_Source\PSoC4/CyLib.c ****     * without enabling the lock feature.
 158:Generated_Source\PSoC4/CyLib.c ****     *
 159:Generated_Source\PSoC4/CyLib.c ****     * It takes up to 20 ms for the IMO to stabilize. The delay is implemented with
 160:Generated_Source\PSoC4/CyLib.c ****     * CyDelay() function. The delay interval is measured based on the system
 161:Generated_Source\PSoC4/CyLib.c ****     * frequency defined by PSoC Creator at build time. If System clock frequency
 162:Generated_Source\PSoC4/CyLib.c ****     * is changed in runtime, the CyDelayFreq() with the appropriate parameter
 163:Generated_Source\PSoC4/CyLib.c ****     * should be called.
 164:Generated_Source\PSoC4/CyLib.c ****     *
 165:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 166:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 167:Generated_Source\PSoC4/CyLib.c ****     *
 168:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 169:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 170:Generated_Source\PSoC4/CyLib.c ****     *
 171:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 172:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableWcoLock(void)
 173:Generated_Source\PSoC4/CyLib.c ****     {
 174:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 175:Generated_Source\PSoC4/CyLib.c ****             uint32 i;
 176:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 177:Generated_Source\PSoC4/CyLib.c **** 
 178:Generated_Source\PSoC4/CyLib.c ****         uint32 freq;
 179:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 180:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
 181:Generated_Source\PSoC4/CyLib.c ****         uint32 lfLimit = 0u;
 182:Generated_Source\PSoC4/CyLib.c ****         volatile uint32 flashCtlReg;
 183:Generated_Source\PSoC4/CyLib.c **** 
 184:Generated_Source\PSoC4/CyLib.c ****         if (0u != CySysClkWcoEnabled())
 185:Generated_Source\PSoC4/CyLib.c ****         {
 186:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 187:Generated_Source\PSoC4/CyLib.c **** 
 188:Generated_Source\PSoC4/CyLib.c ****             /* Set oscillator interface control port to WCO */
 189:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 190:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_OSCINTF_CTL_REG =
 191:Generated_Source\PSoC4/CyLib.c ****                     (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_MASK) |
 192:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_WCO;
 193:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 194:Generated_Source\PSoC4/CyLib.c **** 
 195:Generated_Source\PSoC4/CyLib.c ****             /* Get current IMO frequency based on the register value */
 196:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 197:Generated_Source\PSoC4/CyLib.c ****                 freq = CY_SYS_CLK_IMO_MIN_FREQ_MHZ;
 198:Generated_Source\PSoC4/CyLib.c ****                 for(i = 0u; i < CY_SYS_CLK_IMO_FREQ_TABLE_SIZE; i++)
 199:Generated_Source\PSoC4/CyLib.c ****                 {
 200:Generated_Source\PSoC4/CyLib.c ****                     if ((uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS_MASK) == cyImo
 201:Generated_Source\PSoC4/CyLib.c ****                     {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 6


 202:Generated_Source\PSoC4/CyLib.c ****                         freq = i + CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET;
 203:Generated_Source\PSoC4/CyLib.c ****                         break;
 204:Generated_Source\PSoC4/CyLib.c ****                     }
 205:Generated_Source\PSoC4/CyLib.c ****                 }
 206:Generated_Source\PSoC4/CyLib.c ****             #else
 207:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate frequency by shifting register field value and adding constant. */
 208:Generated_Source\PSoC4/CyLib.c ****                 #if(CY_IP_SRSSLT)
 209:Generated_Source\PSoC4/CyLib.c ****                     freq = (((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT
 210:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ
 211:Generated_Source\PSoC4/CyLib.c ****                                       ((CY_SYS_CLK_SELECT_REG >> CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)
 212:Generated_Source\PSoC4/CyLib.c ****                                        (uint32) CY_SYS_CLK_SELECT_HFCLK_DIV_MASK));
 213:Generated_Source\PSoC4/CyLib.c ****                 #else
 214:Generated_Source\PSoC4/CyLib.c ****                     freq = ((uint32) ((CY_SYS_CLK_IMO_SELECT_REG & ((uint32) CY_SYS_CLK_IMO_SELECT_
 215:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_IMO_SELECT_FREQ_SHIFT) + CY_SYS_CLK_IMO_MIN_FREQ_
 216:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CY_IP_SRSSLT) */
 217:Generated_Source\PSoC4/CyLib.c **** 
 218:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_SRSSV2) */
 219:Generated_Source\PSoC4/CyLib.c **** 
 220:Generated_Source\PSoC4/CyLib.c ****             /* For the WCO locking mode, the IMO gain needs to be CY_SYS_CLK_IMO_TRIM4_GAIN */
 221:Generated_Source\PSoC4/CyLib.c ****             #if(CY_IP_SRSSV2)
 222:Generated_Source\PSoC4/CyLib.c ****                 if ((CY_SYS_CLK_IMO_TRIM4_REG & CY_SYS_CLK_IMO_TRIM4_GAIN_MASK) == 0u)
 223:Generated_Source\PSoC4/CyLib.c ****                 {
 224:Generated_Source\PSoC4/CyLib.c **** 			         CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 225:Generated_Source\PSoC4/CyLib.c **** 			                  				     CY_SYS_CLK_IMO_TRIM4_WCO_GAIN;
 226:Generated_Source\PSoC4/CyLib.c ****                 }
 227:Generated_Source\PSoC4/CyLib.c ****             #endif /* (CY_IP_SRSSV2) */
 228:Generated_Source\PSoC4/CyLib.c **** 
 229:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_WCO_DPLL_REG & ~(CY_SYS_CLK_WCO_DPLL_MULT_MASK |
 230:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN_MASK |
 231:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN_MASK |
 232:Generated_Source\PSoC4/CyLib.c ****                                                   CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MASK);
 233:Generated_Source\PSoC4/CyLib.c **** 
 234:Generated_Source\PSoC4/CyLib.c ****             /* Set multiplier to determine IMO frequency in multiples of the WCO frequency */
 235:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_DPLL_MULT_VALUE(freq) & CY_SYS_CLK_WCO_DPLL_MULT_MASK);
 236:Generated_Source\PSoC4/CyLib.c **** 
 237:Generated_Source\PSoC4/CyLib.c ****             /* Set DPLL Loop Filter Integral and Proportional Gains Setting */
 238:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_IGAIN | CY_SYS_CLK_WCO_CONFIG_DPLL_LF_PGAIN);
 239:Generated_Source\PSoC4/CyLib.c **** 
 240:Generated_Source\PSoC4/CyLib.c ****             /* Set maximum allowed IMO offset */
 241:Generated_Source\PSoC4/CyLib.c ****             if (freq < CY_SYS_CLK_IMO_FREQ_WCO_DPLL_SAFE_POINT)
 242:Generated_Source\PSoC4/CyLib.c ****             {
 243:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX << CY_SYS_CLK_WCO_CONFIG_DPLL_LF
 244:Generated_Source\PSoC4/CyLib.c ****             }
 245:Generated_Source\PSoC4/CyLib.c ****             else
 246:Generated_Source\PSoC4/CyLib.c ****             {
 247:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (uint32) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) +
 248:Generated_Source\PSoC4/CyLib.c ****                     cyImoFreqMhz2DpllOffset[freq - CY_SYS_CLK_IMO_FREQ_WCO_DPLL_TABLE_OFFSET];
 249:Generated_Source\PSoC4/CyLib.c **** 
 250:Generated_Source\PSoC4/CyLib.c ****                 lfLimit = (lfLimit > CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX) ?
 251:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_MAX : lfLimit;
 252:Generated_Source\PSoC4/CyLib.c **** 
 253:Generated_Source\PSoC4/CyLib.c ****                 regTmp |= (lfLimit << CY_SYS_CLK_WCO_CONFIG_DPLL_LF_LIMIT_SHIFT);
 254:Generated_Source\PSoC4/CyLib.c ****             }
 255:Generated_Source\PSoC4/CyLib.c **** 
 256:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_DPLL_REG = regTmp;
 257:Generated_Source\PSoC4/CyLib.c **** 
 258:Generated_Source\PSoC4/CyLib.c ****             flashCtlReg = CY_FLASH_CTL_REG;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 7


 259:Generated_Source\PSoC4/CyLib.c ****             CySysFlashSetWaitCycles(CY_SYS_CLK_IMO_MAX_FREQ_MHZ);
 260:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_WCO_CONFIG_REG |= CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 261:Generated_Source\PSoC4/CyLib.c ****             CyDelay(CY_SYS_CLK_WCO_IMO_TIMEOUT_MS);
 262:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CTL_REG = flashCtlReg;
 263:Generated_Source\PSoC4/CyLib.c **** 
 264:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 265:Generated_Source\PSoC4/CyLib.c ****         }
 266:Generated_Source\PSoC4/CyLib.c ****     }
 267:Generated_Source\PSoC4/CyLib.c **** 
 268:Generated_Source\PSoC4/CyLib.c **** 
 269:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 270:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableWcoLock
 271:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 272:Generated_Source\PSoC4/CyLib.c ****     *
 273:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to WCO lock feature.
 274:Generated_Source\PSoC4/CyLib.c ****     *
 275:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, note that the IMO can lock to either WCO or USB
 276:Generated_Source\PSoC4/CyLib.c ****     * but not both.
 277:Generated_Source\PSoC4/CyLib.c ****     *
 278:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 279:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 280:Generated_Source\PSoC4/CyLib.c ****     *
 281:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 282:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableWcoLock(void)
 283:Generated_Source\PSoC4/CyLib.c ****     {
 284:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_WCO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE;
 285:Generated_Source\PSoC4/CyLib.c ****     }
 286:Generated_Source\PSoC4/CyLib.c **** 
 287:Generated_Source\PSoC4/CyLib.c **** 
 288:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 289:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetWcoLock
 290:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 291:Generated_Source\PSoC4/CyLib.c ****     *
 292:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to WCO lock enable state.
 293:Generated_Source\PSoC4/CyLib.c ****     *
 294:Generated_Source\PSoC4/CyLib.c ****     * This function is applicable for PSoC 4100M / PSoC 4200M / PSoC 4000S /
 295:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100S / PSoC 4400 / PSoC 4200L.
 296:Generated_Source\PSoC4/CyLib.c ****     *
 297:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to WCO lock is enabled.
 298:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to WCO lock is disabled.
 299:Generated_Source\PSoC4/CyLib.c ****     *
 300:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 301:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetWcoLock(void)
 302:Generated_Source\PSoC4/CyLib.c ****     {
 303:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_WCO_CONFIG_REG & CY_SYS_CLK_WCO_CONFIG_DPLL_ENABLE)) ?
 304:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 305:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 306:Generated_Source\PSoC4/CyLib.c ****     }
 307:Generated_Source\PSoC4/CyLib.c **** 
 308:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 309:Generated_Source\PSoC4/CyLib.c **** 
 310:Generated_Source\PSoC4/CyLib.c **** 
 311:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 312:Generated_Source\PSoC4/CyLib.c **** 
 313:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 314:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoEnableUsbLock
 315:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 8


 316:Generated_Source\PSoC4/CyLib.c ****     *
 317:Generated_Source\PSoC4/CyLib.c ****     * Enables the IMO to USB lock feature.
 318:Generated_Source\PSoC4/CyLib.c ****     *
 319:Generated_Source\PSoC4/CyLib.c ****     * This function must be called before CySysClkWriteImoFreq().
 320:Generated_Source\PSoC4/CyLib.c ****     *
 321:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStart() function if USB lock
 322:Generated_Source\PSoC4/CyLib.c ****     * selected in the Design Wide Resources tab.
 323:Generated_Source\PSoC4/CyLib.c ****     *
 324:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 325:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 326:Generated_Source\PSoC4/CyLib.c ****     *
 327:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 328:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoEnableUsbLock(void)
 329:Generated_Source\PSoC4/CyLib.c ****     {
 330:Generated_Source\PSoC4/CyLib.c ****         /* Set oscillator interface control port to USB */
 331:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB)
 332:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_OSCINTF_CTL_REG = (CY_SYS_CLK_OSCINTF_CTL_REG & (uint32) ~CY_SYS_CLK_OSCINTF
 333:Generated_Source\PSoC4/CyLib.c ****                                           CY_SYS_CLK_OSCINTF_CTL_PORT_SEL_USB;
 334:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_IMO_TRIMMABLE_BY_WCO && CY_IP_IMO_TRIMMABLE_BY_USB) */
 335:Generated_Source\PSoC4/CyLib.c **** 
 336:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 337:Generated_Source\PSoC4/CyLib.c ****             /* Save CY_SYS_CLK_IMO_TRIM4_REG and set IMO gain for USB lock */
 338:Generated_Source\PSoC4/CyLib.c ****             CySysClkImoTrim4 = CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_GAIN_MASK;
 339:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 340:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_IMO_TRIM4_USB_GAIN;
 341:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 342:Generated_Source\PSoC4/CyLib.c **** 
 343:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG |= CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 344:Generated_Source\PSoC4/CyLib.c ****     }
 345:Generated_Source\PSoC4/CyLib.c **** 
 346:Generated_Source\PSoC4/CyLib.c **** 
 347:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 348:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoDisableUsbLock
 349:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 350:Generated_Source\PSoC4/CyLib.c ****     *
 351:Generated_Source\PSoC4/CyLib.c ****     * Disables the IMO to USB lock feature.
 352:Generated_Source\PSoC4/CyLib.c ****     *
 353:Generated_Source\PSoC4/CyLib.c ****     * This function is called from CySysClkImoStop() function if USB lock selected
 354:Generated_Source\PSoC4/CyLib.c ****     * in the Design Wide Resources tab.
 355:Generated_Source\PSoC4/CyLib.c ****     *
 356:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 357:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 358:Generated_Source\PSoC4/CyLib.c ****     *
 359:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/CyLib.c ****     void CySysClkImoDisableUsbLock(void)
 361:Generated_Source\PSoC4/CyLib.c ****     {
 362:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_USBDEVv2_CR1_REG &= (uint32) ~CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK;
 363:Generated_Source\PSoC4/CyLib.c **** 
 364:Generated_Source\PSoC4/CyLib.c ****         #if(CY_IP_SRSSV2)
 365:Generated_Source\PSoC4/CyLib.c ****             /* Restore CY_SYS_CLK_IMO_TRIM4_REG */
 366:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM4_REG = (CY_SYS_CLK_IMO_TRIM4_REG & (uint32) ~CY_SYS_CLK_IMO_TRIM4_G
 367:Generated_Source\PSoC4/CyLib.c ****                                     CySysClkImoTrim4;
 368:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_SRSSV2) */
 369:Generated_Source\PSoC4/CyLib.c ****     }
 370:Generated_Source\PSoC4/CyLib.c **** 
 371:Generated_Source\PSoC4/CyLib.c **** 
 372:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 9


 373:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkImoGetUsbLock
 374:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 375:Generated_Source\PSoC4/CyLib.c ****     *
 376:Generated_Source\PSoC4/CyLib.c ****     * Reports the IMO to USB lock enable state.
 377:Generated_Source\PSoC4/CyLib.c ****     *
 378:Generated_Source\PSoC4/CyLib.c ****     * This is applicable for PSoC 4200L family of devices only. For PSoC 4200L
 379:Generated_Source\PSoC4/CyLib.c ****     * devices, the IMO can lock to either WCO or USB, but not both.
 380:Generated_Source\PSoC4/CyLib.c ****     *
 381:Generated_Source\PSoC4/CyLib.c ****     * \return 1 if IMO to USB lock is enabled.
 382:Generated_Source\PSoC4/CyLib.c ****     * \return 0 if IMO to USB lock is disabled.
 383:Generated_Source\PSoC4/CyLib.c ****     *
 384:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 385:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkImoGetUsbLock(void)
 386:Generated_Source\PSoC4/CyLib.c ****     {
 387:Generated_Source\PSoC4/CyLib.c ****         return ((0u != (CY_SYS_CLK_USBDEVv2_CR1_REG & CY_SYS_CLK_USBDEVv2_CR1_ENABLE_LOCK)) ?
 388:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 1u :
 389:Generated_Source\PSoC4/CyLib.c ****                 (uint32) 0u);
 390:Generated_Source\PSoC4/CyLib.c ****     }
 391:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 392:Generated_Source\PSoC4/CyLib.c **** 
 393:Generated_Source\PSoC4/CyLib.c **** 
 394:Generated_Source\PSoC4/CyLib.c **** 
 395:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 396:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteHfclkDirect
 397:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 398:Generated_Source\PSoC4/CyLib.c **** *
 399:Generated_Source\PSoC4/CyLib.c **** * Selects the direct source for the HFCLK.
 400:Generated_Source\PSoC4/CyLib.c **** *
 401:Generated_Source\PSoC4/CyLib.c **** * The new source must be running and stable before calling this function.
 402:Generated_Source\PSoC4/CyLib.c **** *
 403:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000:
 404:Generated_Source\PSoC4/CyLib.c **** * The SYSCLK has a maximum speed of 16 MHz, so HFCLK and SYSCLK dividers should
 405:Generated_Source\PSoC4/CyLib.c **** * be selected in a way to not to exceed 16 MHz for the System clock.
 406:Generated_Source\PSoC4/CyLib.c **** *
 407:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during device operation, call
 408:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
 409:Generated_Source\PSoC4/CyLib.c **** * of clock cycles the cache will wait before sampling data comes back from
 410:Generated_Source\PSoC4/CyLib.c **** * Flash. If the SYSCLK clock frequency decreases, you can call
 411:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() to improve the CPU performance. See
 412:Generated_Source\PSoC4/CyLib.c **** * CySysFlashSetWaitCycles() description for more information.
 413:Generated_Source\PSoC4/CyLib.c **** *
 414:Generated_Source\PSoC4/CyLib.c **** * Do not select PLL as the source for HFCLK if PLL output frequency exceeds
 415:Generated_Source\PSoC4/CyLib.c **** * maximum permissible value for HFCLK.
 416:Generated_Source\PSoC4/CyLib.c **** *
 417:Generated_Source\PSoC4/CyLib.c **** * \param clkSelect One of the available HFCLK direct sources.
 418:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_IMO     IMO.
 419:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_EXTCLK  External clock pin.
 420:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_ECO     External crystal oscillator. Applicable for
 421:Generated_Source\PSoC4/CyLib.c **** *                          PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4200L.
 422:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL0    PLL#0. Applicable for PSoC 4200L.
 423:Generated_Source\PSoC4/CyLib.c **** * CY_SYS_CLK_HFCLK_PLL1    PLL#1. Applicable for PSoC 4200L.
 424:Generated_Source\PSoC4/CyLib.c **** *
 425:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 426:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteHfclkDirect(uint32 clkSelect)
 427:Generated_Source\PSoC4/CyLib.c **** {
  83              		.loc 1 427 0
  84              		.cfi_startproc
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 10


  85              	.LVL0:
  86 0000 10B5     		push	{r4, lr}
  87              		.cfi_def_cfa_offset 8
  88              		.cfi_offset 4, -8
  89              		.cfi_offset 14, -4
  90              		.loc 1 427 0
  91 0002 041C     		mov	r4, r0
 428:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 429:Generated_Source\PSoC4/CyLib.c ****     uint32 tmpReg;
 430:Generated_Source\PSoC4/CyLib.c **** 
 431:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
  92              		.loc 1 431 0
  93 0004 FFF7FEFF 		bl	CyEnterCriticalSection
  94              	.LVL1:
 432:Generated_Source\PSoC4/CyLib.c **** 
 433:Generated_Source\PSoC4/CyLib.c **** 
 434:Generated_Source\PSoC4/CyLib.c ****     tmpReg = CY_SYS_CLK_SELECT_REG & ~(CY_SYS_CLK_SELECT_DIRECT_SEL_MASK |
  95              		.loc 1 434 0
  96 0008 0723     		mov	r3, #7
  97 000a 0449     		ldr	r1, .L8
 435:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 436:Generated_Source\PSoC4/CyLib.c **** 
 437:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 438:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_HFCLK_PLL0 == clkSelect) || (CY_SYS_CLK_HFCLK_PLL1 == clkSelect))
 439:Generated_Source\PSoC4/CyLib.c ****     {
 440:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 441:Generated_Source\PSoC4/CyLib.c ****     }
 442:Generated_Source\PSoC4/CyLib.c ****     else
 443:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 444:Generated_Source\PSoC4/CyLib.c ****     {
 445:Generated_Source\PSoC4/CyLib.c ****         tmpReg |= (clkSelect & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 446:Generated_Source\PSoC4/CyLib.c ****     }
 447:Generated_Source\PSoC4/CyLib.c **** 
 448:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = tmpReg;
 449:Generated_Source\PSoC4/CyLib.c **** 
 450:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 451:Generated_Source\PSoC4/CyLib.c **** }
  98              		.loc 1 451 0
  99              		@ sp needed
 434:Generated_Source\PSoC4/CyLib.c ****                                        CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 100              		.loc 1 434 0
 101 000c 0A68     		ldr	r2, [r1]
 102 000e 9A43     		bic	r2, r3
 103              	.LVL2:
 445:Generated_Source\PSoC4/CyLib.c ****     }
 104              		.loc 1 445 0
 105 0010 2340     		and	r3, r4
 106 0012 1343     		orr	r3, r2
 107              	.LVL3:
 448:Generated_Source\PSoC4/CyLib.c **** 
 108              		.loc 1 448 0
 109 0014 0B60     		str	r3, [r1]
 450:Generated_Source\PSoC4/CyLib.c **** }
 110              		.loc 1 450 0
 111 0016 FFF7FEFF 		bl	CyExitCriticalSection
 112              	.LVL4:
 113              	.LVL5:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 11


 114              		.loc 1 451 0
 115 001a 10BD     		pop	{r4, pc}
 116              	.L9:
 117              		.align	2
 118              	.L8:
 119 001c 00010B40 		.word	1074462976
 120              		.cfi_endproc
 121              	.LFE4:
 122              		.size	CySysClkWriteHfclkDirect, .-CySysClkWriteHfclkDirect
 123              		.section	.text.CySysClkGetSysclkSource,"ax",%progbits
 124              		.align	1
 125              		.global	CySysClkGetSysclkSource
 126              		.code	16
 127              		.thumb_func
 128              		.type	CySysClkGetSysclkSource, %function
 129              	CySysClkGetSysclkSource:
 130              	.LFB5:
 452:Generated_Source\PSoC4/CyLib.c **** 
 453:Generated_Source\PSoC4/CyLib.c **** 
 454:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 455:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkGetSysclkSource
 456:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 457:Generated_Source\PSoC4/CyLib.c **** *
 458:Generated_Source\PSoC4/CyLib.c **** * Returns the source of the System clock.
 459:Generated_Source\PSoC4/CyLib.c **** *
 460:Generated_Source\PSoC4/CyLib.c **** * \return The same as \ref CySysClkWriteHfclkDirect() function parameters.
 461:Generated_Source\PSoC4/CyLib.c **** *
 462:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 463:Generated_Source\PSoC4/CyLib.c **** uint32 CySysClkGetSysclkSource(void)
 464:Generated_Source\PSoC4/CyLib.c **** {
 131              		.loc 1 464 0
 132              		.cfi_startproc
 133 0000 10B5     		push	{r4, lr}
 134              		.cfi_def_cfa_offset 8
 135              		.cfi_offset 4, -8
 136              		.cfi_offset 14, -4
 465:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 466:Generated_Source\PSoC4/CyLib.c ****     uint32 sysclkSource;
 467:Generated_Source\PSoC4/CyLib.c **** 
 468:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 137              		.loc 1 468 0
 138 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 139              	.LVL6:
 469:Generated_Source\PSoC4/CyLib.c **** 
 470:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
 471:Generated_Source\PSoC4/CyLib.c ****     if ((CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK) != 0u)
 472:Generated_Source\PSoC4/CyLib.c ****     {
 473:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_HFCLK_SEL_MASK);
 474:Generated_Source\PSoC4/CyLib.c ****     }
 475:Generated_Source\PSoC4/CyLib.c ****     else
 476:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
 477:Generated_Source\PSoC4/CyLib.c ****     {
 478:Generated_Source\PSoC4/CyLib.c ****         sysclkSource = (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK);
 140              		.loc 1 478 0
 141 0006 034B     		ldr	r3, .L11
 479:Generated_Source\PSoC4/CyLib.c ****     }
 480:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 12


 481:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 482:Generated_Source\PSoC4/CyLib.c **** 
 483:Generated_Source\PSoC4/CyLib.c ****     return (sysclkSource);
 484:Generated_Source\PSoC4/CyLib.c **** }
 142              		.loc 1 484 0
 143              		@ sp needed
 478:Generated_Source\PSoC4/CyLib.c ****     }
 144              		.loc 1 478 0
 145 0008 1C68     		ldr	r4, [r3]
 146              	.LVL7:
 481:Generated_Source\PSoC4/CyLib.c **** 
 147              		.loc 1 481 0
 148 000a FFF7FEFF 		bl	CyExitCriticalSection
 149              	.LVL8:
 478:Generated_Source\PSoC4/CyLib.c ****     }
 150              		.loc 1 478 0
 151 000e 0720     		mov	r0, #7
 152 0010 2040     		and	r0, r4
 153              	.LVL9:
 154              		.loc 1 484 0
 155 0012 10BD     		pop	{r4, pc}
 156              	.L12:
 157              		.align	2
 158              	.L11:
 159 0014 00010B40 		.word	1074462976
 160              		.cfi_endproc
 161              	.LFE5:
 162              		.size	CySysClkGetSysclkSource, .-CySysClkGetSysclkSource
 163              		.section	.text.CySysClkWriteSysclkDiv,"ax",%progbits
 164              		.align	1
 165              		.global	CySysClkWriteSysclkDiv
 166              		.code	16
 167              		.thumb_func
 168              		.type	CySysClkWriteSysclkDiv, %function
 169              	CySysClkWriteSysclkDiv:
 170              	.LFB6:
 485:Generated_Source\PSoC4/CyLib.c **** 
 486:Generated_Source\PSoC4/CyLib.c **** 
 487:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 488:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteSysclkDiv
 489:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CyLib.c **** *
 491:Generated_Source\PSoC4/CyLib.c **** * Selects the prescaler divide amount for SYSCLK from HFCLK.
 492:Generated_Source\PSoC4/CyLib.c **** *
 493:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 494:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 495:Generated_Source\PSoC4/CyLib.c **** *
 496:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 497:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 498:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 499:Generated_Source\PSoC4/CyLib.c **** *
 500:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 501:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 502:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 503:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 504:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 505:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 13


 506:Generated_Source\PSoC4/CyLib.c **** *
 507:Generated_Source\PSoC4/CyLib.c **** * \param divider Power of 2 prescaler selection
 508:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV1        SYSCLK = HFCLK / 1
 509:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV2        SYSCLK = HFCLK / 2
 510:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV4        SYSCLK = HFCLK / 4
 511:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV8        SYSCLK = HFCLK / 8
 512:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV16       SYSCLK = HFCLK / 16  (N/A for 4000 Family)
 513:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV32       SYSCLK = HFCLK / 32  (N/A for 4000 Family)
 514:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV64       SYSCLK = HFCLK / 64  (N/A for 4000 Family)
 515:Generated_Source\PSoC4/CyLib.c **** *  CY_SYS_CLK_SYSCLK_DIV128      SYSCLK = HFCLK / 128 (N/A for 4000 Family)
 516:Generated_Source\PSoC4/CyLib.c **** *
 517:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 518:Generated_Source\PSoC4/CyLib.c **** void CySysClkWriteSysclkDiv(uint32 divider)
 519:Generated_Source\PSoC4/CyLib.c **** {
 171              		.loc 1 519 0
 172              		.cfi_startproc
 173              	.LVL10:
 174 0000 38B5     		push	{r3, r4, r5, lr}
 175              		.cfi_def_cfa_offset 16
 176              		.cfi_offset 3, -16
 177              		.cfi_offset 4, -12
 178              		.cfi_offset 5, -8
 179              		.cfi_offset 14, -4
 180              		.loc 1 519 0
 181 0002 051C     		mov	r5, r0
 520:Generated_Source\PSoC4/CyLib.c ****     uint8  interruptState;
 521:Generated_Source\PSoC4/CyLib.c **** 
 522:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
 182              		.loc 1 522 0
 183 0004 FFF7FEFF 		bl	CyEnterCriticalSection
 184              	.LVL11:
 523:Generated_Source\PSoC4/CyLib.c **** 
 524:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_CLK_SELECT_REG = ((uint32)(((uint32)divider & CY_SYS_CLK_SELECT_SYSCLK_DIV_MASK) <<
 185              		.loc 1 524 0
 186 0008 0721     		mov	r1, #7
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 526:Generated_Source\PSoC4/CyLib.c ****                             (CY_SYS_CLK_SELECT_REG & ((uint32)(~(uint32)(CY_SYS_CLK_SELECT_SYSCLK_D
 187              		.loc 1 526 0
 188 000a 054C     		ldr	r4, .L14
 189 000c 054A     		ldr	r2, .L14+4
 190 000e 2368     		ldr	r3, [r4]
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 191              		.loc 1 524 0
 192 0010 2940     		and	r1, r5
 193 0012 C904     		lsl	r1, r1, #19
 194              		.loc 1 526 0
 195 0014 1340     		and	r3, r2
 525:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 196              		.loc 1 525 0
 197 0016 0B43     		orr	r3, r1
 524:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT)) |
 198              		.loc 1 524 0
 199 0018 2360     		str	r3, [r4]
 527:Generated_Source\PSoC4/CyLib.c ****                                     CY_SYS_CLK_SELECT_SYSCLK_DIV_SHIFT))));
 528:Generated_Source\PSoC4/CyLib.c **** 
 529:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
 200              		.loc 1 529 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 14


 201 001a FFF7FEFF 		bl	CyExitCriticalSection
 202              	.LVL12:
 530:Generated_Source\PSoC4/CyLib.c **** }
 203              		.loc 1 530 0
 204              		@ sp needed
 205              	.LVL13:
 206 001e 38BD     		pop	{r3, r4, r5, pc}
 207              	.L15:
 208              		.align	2
 209              	.L14:
 210 0020 00010B40 		.word	1074462976
 211 0024 FFFFC7FF 		.word	-3670017
 212              		.cfi_endproc
 213              	.LFE6:
 214              		.size	CySysClkWriteSysclkDiv, .-CySysClkWriteSysclkDiv
 215              		.section	.text.CySysClkEcoStop,"ax",%progbits
 216              		.align	1
 217              		.global	CySysClkEcoStop
 218              		.code	16
 219              		.thumb_func
 220              		.type	CySysClkEcoStop, %function
 221              	CySysClkEcoStop:
 222              	.LFB9:
 531:Generated_Source\PSoC4/CyLib.c **** 
 532:Generated_Source\PSoC4/CyLib.c **** 
 533:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysClkWriteImoFreq
 535:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
 536:Generated_Source\PSoC4/CyLib.c **** *
 537:Generated_Source\PSoC4/CyLib.c **** * Sets the frequency of the IMO.
 538:Generated_Source\PSoC4/CyLib.c **** *
 539:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 540:Generated_Source\PSoC4/CyLib.c **** * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 541:Generated_Source\PSoC4/CyLib.c **** *
 542:Generated_Source\PSoC4/CyLib.c **** * PSoC 4100 \ PSoC 4100 BLE \ PSoC 4100M: The SYSCLK has the speed of 24 MHz,
 543:Generated_Source\PSoC4/CyLib.c **** * so HFCLK and SYSCLK dividers should be selected in a way, not to exceed 24 MHz
 544:Generated_Source\PSoC4/CyLib.c **** * for SYSCLK.
 545:Generated_Source\PSoC4/CyLib.c **** *
 546:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200M and PSoC 4200L device families, if WCO lock feature is enabled
 547:Generated_Source\PSoC4/CyLib.c **** * then this API will disable the lock, write the new IMO frequency and then
 548:Generated_Source\PSoC4/CyLib.c **** * re-enable the lock.
 549:Generated_Source\PSoC4/CyLib.c **** *
 550:Generated_Source\PSoC4/CyLib.c **** * For PSoC 4200L device families, this function enables the USB lock when 24 or
 551:Generated_Source\PSoC4/CyLib.c **** * 48 MHz passed as a parameter if the USB lock option is enabled in Design Wide
 552:Generated_Source\PSoC4/CyLib.c **** * Resources tab or CySysClkImoEnableUsbLock() was called before. Note the USB
 553:Generated_Source\PSoC4/CyLib.c **** * lock is disabled during IMO frequency change.
 554:Generated_Source\PSoC4/CyLib.c **** *
 555:Generated_Source\PSoC4/CyLib.c **** * The CPU is halted if new frequency is invalid and project is compiled
 556:Generated_Source\PSoC4/CyLib.c **** * in debug mode.
 557:Generated_Source\PSoC4/CyLib.c **** *
 558:Generated_Source\PSoC4/CyLib.c **** * If the SYSCLK clock frequency increases during the device operation, call
 559:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 560:Generated_Source\PSoC4/CyLib.c **** * number of clock cycles the cache will wait before sampling data comes back
 561:Generated_Source\PSoC4/CyLib.c **** * from Flash. If the SYSCLK clock frequency decreases, you can call
 562:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 563:Generated_Source\PSoC4/CyLib.c **** * \ref CySysFlashSetWaitCycles() description for more information.
 564:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 15


 565:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000: The System Clock (SYSCLK) has maximum speed of 16 MHz, so HFCLK
 566:Generated_Source\PSoC4/CyLib.c **** * and SYSCLK dividers should be selected in a way, to not to exceed 16 MHz for
 567:Generated_Source\PSoC4/CyLib.c **** * the System clock.
 568:Generated_Source\PSoC4/CyLib.c **** *
 569:Generated_Source\PSoC4/CyLib.c **** * \param freq All PSoC 4 families excluding the following: Valid range [3-48]
 570:Generated_Source\PSoC4/CyLib.c **** * with step size equals 1. PSoC 4000: Valid values are 24, 32, and 48.
 571:Generated_Source\PSoC4/CyLib.c **** * PSoC 4000S / PSoC 4100S / PSoC 4400: Valid range [24-48] with step size equals
 572:Generated_Source\PSoC4/CyLib.c **** * 4.
 573:Generated_Source\PSoC4/CyLib.c **** *
 574:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
 575:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
 576:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 577:Generated_Source\PSoC4/CyLib.c ****     {
 578:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 579:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   parameters[2u];
 580:Generated_Source\PSoC4/CyLib.c ****             volatile uint32   regValues[4u];
 581:Generated_Source\PSoC4/CyLib.c ****         #else
 582:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim4;
 583:Generated_Source\PSoC4/CyLib.c ****             uint8  bgTrim5;
 584:Generated_Source\PSoC4/CyLib.c ****             uint8  newImoTrim2Value;
 585:Generated_Source\PSoC4/CyLib.c ****             uint8  currentImoTrim2Value;
 586:Generated_Source\PSoC4/CyLib.c ****             uint8  imoTrim1Value;
 587:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FM) */
 588:Generated_Source\PSoC4/CyLib.c **** 
 589:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 590:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 591:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 592:Generated_Source\PSoC4/CyLib.c **** 
 593:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 594:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 595:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 596:Generated_Source\PSoC4/CyLib.c **** 
 597:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 598:Generated_Source\PSoC4/CyLib.c **** 
 599:Generated_Source\PSoC4/CyLib.c **** 
 600:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 601:Generated_Source\PSoC4/CyLib.c **** 
 602:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 603:Generated_Source\PSoC4/CyLib.c ****             if(0u != CySysClkImoGetWcoLock())
 604:Generated_Source\PSoC4/CyLib.c ****             {
 605:Generated_Source\PSoC4/CyLib.c ****                 wcoLock = 1u;
 606:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoDisableWcoLock();
 607:Generated_Source\PSoC4/CyLib.c ****             }
 608:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 609:Generated_Source\PSoC4/CyLib.c **** 
 610:Generated_Source\PSoC4/CyLib.c **** 
 611:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 612:Generated_Source\PSoC4/CyLib.c **** 
 613:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 614:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetUsbLock())
 615:Generated_Source\PSoC4/CyLib.c ****                 {
 616:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 617:Generated_Source\PSoC4/CyLib.c **** 
 618:Generated_Source\PSoC4/CyLib.c ****                 if ((24u == freq) || (48u == freq))
 619:Generated_Source\PSoC4/CyLib.c ****                 {
 620:Generated_Source\PSoC4/CyLib.c ****                     usbLock = 1u;
 621:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableUsbLock();
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 16


 622:Generated_Source\PSoC4/CyLib.c ****                 }
 623:Generated_Source\PSoC4/CyLib.c **** 
 624:Generated_Source\PSoC4/CyLib.c ****             #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 625:Generated_Source\PSoC4/CyLib.c ****                 }
 626:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 627:Generated_Source\PSoC4/CyLib.c **** 
 628:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 629:Generated_Source\PSoC4/CyLib.c **** 
 630:Generated_Source\PSoC4/CyLib.c **** 
 631:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 632:Generated_Source\PSoC4/CyLib.c **** 
 633:Generated_Source\PSoC4/CyLib.c ****             /* FM-Lite Clock Restore */
 634:Generated_Source\PSoC4/CyLib.c ****             regValues[0u] = CY_SYS_CLK_IMO_CONFIG_REG;
 635:Generated_Source\PSoC4/CyLib.c ****             regValues[1u] = CY_SYS_CLK_SELECT_REG;
 636:Generated_Source\PSoC4/CyLib.c ****             regValues[2u] = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 637:Generated_Source\PSoC4/CyLib.c ****             regValues[3u] = CY_FLASH_CTL_REG;
 638:Generated_Source\PSoC4/CyLib.c **** 
 639:Generated_Source\PSoC4/CyLib.c ****             parameters[0u] =
 640:Generated_Source\PSoC4/CyLib.c ****                 (uint32) ((CY_FLASH_KEY_TWO(CY_FLASH_API_OPCODE_CLK_RESTORE) <<  CY_FLASH_PARAM_KEY
 641:Generated_Source\PSoC4/CyLib.c ****                             CY_FLASH_KEY_ONE);
 642:Generated_Source\PSoC4/CyLib.c ****             parameters[1u] = (uint32) &regValues[0u];
 643:Generated_Source\PSoC4/CyLib.c **** 
 644:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSARG_REG = (uint32) &parameters[0u];
 645:Generated_Source\PSoC4/CyLib.c ****             CY_FLASH_CPUSS_SYSREQ_REG = CY_FLASH_CPUSS_REQ_START | CY_FLASH_API_OPCODE_CLK_RESTORE;
 646:Generated_Source\PSoC4/CyLib.c ****             (void) CY_FLASH_CPUSS_SYSARG_REG;
 647:Generated_Source\PSoC4/CyLib.c **** 
 648:Generated_Source\PSoC4/CyLib.c ****         #else /* (CY_IP_FM) */
 649:Generated_Source\PSoC4/CyLib.c **** 
 650:Generated_Source\PSoC4/CyLib.c ****         if ((freq >= CY_SYS_CLK_IMO_MIN_FREQ_MHZ) && (freq <= CY_SYS_CLK_IMO_MAX_FREQ_MHZ))
 651:Generated_Source\PSoC4/CyLib.c ****         {
 652:Generated_Source\PSoC4/CyLib.c ****             if(freq <= CY_SFLASH_IMO_MAXF0_REG)
 653:Generated_Source\PSoC4/CyLib.c ****             {
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS0_REG;
 655:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 656:Generated_Source\PSoC4/CyLib.c ****             }
 657:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF1_REG)
 658:Generated_Source\PSoC4/CyLib.c ****             {
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS1_REG;
 660:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 661:Generated_Source\PSoC4/CyLib.c ****             }
 662:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF2_REG)
 663:Generated_Source\PSoC4/CyLib.c ****             {
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS2_REG;
 665:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 666:Generated_Source\PSoC4/CyLib.c ****             }
 667:Generated_Source\PSoC4/CyLib.c ****             else if(freq <= CY_SFLASH_IMO_MAXF3_REG)
 668:Generated_Source\PSoC4/CyLib.c ****             {
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS3_REG;
 670:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 671:Generated_Source\PSoC4/CyLib.c ****             }
 672:Generated_Source\PSoC4/CyLib.c ****             else
 673:Generated_Source\PSoC4/CyLib.c ****             {
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim4 = CY_SFLASH_IMO_ABS4_REG;
 675:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 676:Generated_Source\PSoC4/CyLib.c ****             }
 677:Generated_Source\PSoC4/CyLib.c **** 
 678:Generated_Source\PSoC4/CyLib.c ****             /* Get IMO_TRIM2 value for the new frequency */
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 17


 679:Generated_Source\PSoC4/CyLib.c ****             newImoTrim2Value = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET];
 680:Generated_Source\PSoC4/CyLib.c **** 
 681:Generated_Source\PSoC4/CyLib.c **** 
 682:Generated_Source\PSoC4/CyLib.c ****             /****************************************************************************
 683:Generated_Source\PSoC4/CyLib.c ****             * The IMO can have a different trim per frequency. To avoid possible corner
 684:Generated_Source\PSoC4/CyLib.c ****             * cases where a trim change can exceed the maximum frequency, the trim must
 685:Generated_Source\PSoC4/CyLib.c ****             * be applied at a frequency that is low enough.
 686:Generated_Source\PSoC4/CyLib.c ****             *
 687:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 688:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 689:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 690:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 691:Generated_Source\PSoC4/CyLib.c ****             if ((newImoTrim2Value >= CY_SYS_CLK_IMO_BOUNDARY_FREQ_TRIM2) && (freq >= CY_SYS_CLK_IMO
 692:Generated_Source\PSoC4/CyLib.c ****             {
 693:Generated_Source\PSoC4/CyLib.c ****                 /* Set boundary IMO frequency: safe for IMO above 48 MHZ trimming */
 694:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = (uint32) cyImoFreqMhz2Reg[CY_SYS_CLK_IMO_TEMP_FREQ_MHZ -
 695:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 696:Generated_Source\PSoC4/CyLib.c **** 
 697:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 698:Generated_Source\PSoC4/CyLib.c **** 
 699:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = CY_SYS_CLK_IMO_TEMP_FREQ_TRIM2;
 700:Generated_Source\PSoC4/CyLib.c ****             }
 701:Generated_Source\PSoC4/CyLib.c ****             else
 702:Generated_Source\PSoC4/CyLib.c ****             {
 703:Generated_Source\PSoC4/CyLib.c ****                 currentImoTrim2Value = (uint8) (CY_SYS_CLK_IMO_TRIM2_REG & CY_SYS_CLK_IMO_FREQ_BITS
 704:Generated_Source\PSoC4/CyLib.c ****             }
 705:Generated_Source\PSoC4/CyLib.c **** 
 706:Generated_Source\PSoC4/CyLib.c **** 
 707:Generated_Source\PSoC4/CyLib.c ****             /***************************************************************************
 708:Generated_Source\PSoC4/CyLib.c ****             * A trim change needs to be allowed to settle (within 5us) before the Freq
 709:Generated_Source\PSoC4/CyLib.c ****             * can be changed to a new frequency.
 710:Generated_Source\PSoC4/CyLib.c ****             *
 711:Generated_Source\PSoC4/CyLib.c ****             * Comparing IMO_TRIM2 values for the current and new frequencies, since
 712:Generated_Source\PSoC4/CyLib.c ****             * IMO_TRIM2 value as a function of IMO frequency is a strictly increasing
 713:Generated_Source\PSoC4/CyLib.c ****             * function and is time-invariant.
 714:Generated_Source\PSoC4/CyLib.c ****             ***************************************************************************/
 715:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value < currentImoTrim2Value)
 716:Generated_Source\PSoC4/CyLib.c ****             {
 717:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 718:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 719:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 720:Generated_Source\PSoC4/CyLib.c ****             }
 721:Generated_Source\PSoC4/CyLib.c **** 
 722:Generated_Source\PSoC4/CyLib.c ****             /* Set trims for the new IMO frequency */
 723:Generated_Source\PSoC4/CyLib.c **** 
 724:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 725:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 726:Generated_Source\PSoC4/CyLib.c ****                 {
 727:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 728:Generated_Source\PSoC4/CyLib.c ****                 }
 729:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 730:Generated_Source\PSoC4/CyLib.c ****                 {
 731:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 732:Generated_Source\PSoC4/CyLib.c ****                 }
 733:Generated_Source\PSoC4/CyLib.c ****                 else
 734:Generated_Source\PSoC4/CyLib.c ****                 {
 735:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 18


 736:Generated_Source\PSoC4/CyLib.c ****                 }
 737:Generated_Source\PSoC4/CyLib.c ****             #else
 738:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFF
 739:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 740:Generated_Source\PSoC4/CyLib.c **** 
 741:Generated_Source\PSoC4/CyLib.c **** 
 742:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 744:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 745:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 746:Generated_Source\PSoC4/CyLib.c **** 
 747:Generated_Source\PSoC4/CyLib.c ****             if (newImoTrim2Value > currentImoTrim2Value)
 748:Generated_Source\PSoC4/CyLib.c ****             {
 749:Generated_Source\PSoC4/CyLib.c ****                 /* Set new IMO frequency */
 750:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_TRIM2_REG = cyImoFreqMhz2Reg[freq - CY_SYS_CLK_IMO_FREQ_TABLE_OFFSET
 751:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 752:Generated_Source\PSoC4/CyLib.c ****             }
 753:Generated_Source\PSoC4/CyLib.c ****         }
 754:Generated_Source\PSoC4/CyLib.c ****         else
 755:Generated_Source\PSoC4/CyLib.c ****         {
 756:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 757:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 758:Generated_Source\PSoC4/CyLib.c ****         }
 759:Generated_Source\PSoC4/CyLib.c **** 
 760:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_FMLT) */
 761:Generated_Source\PSoC4/CyLib.c **** 
 762:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 763:Generated_Source\PSoC4/CyLib.c ****             if (1u == wcoLock)
 764:Generated_Source\PSoC4/CyLib.c ****             {
 765:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableWcoLock();
 766:Generated_Source\PSoC4/CyLib.c ****             }
 767:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 768:Generated_Source\PSoC4/CyLib.c **** 
 769:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 770:Generated_Source\PSoC4/CyLib.c ****             if (1u == usbLock)
 771:Generated_Source\PSoC4/CyLib.c ****             {
 772:Generated_Source\PSoC4/CyLib.c ****                 CySysClkImoEnableUsbLock();
 773:Generated_Source\PSoC4/CyLib.c ****             }
 774:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 775:Generated_Source\PSoC4/CyLib.c **** 
 776:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 777:Generated_Source\PSoC4/CyLib.c ****     }
 778:Generated_Source\PSoC4/CyLib.c **** 
 779:Generated_Source\PSoC4/CyLib.c **** #else
 780:Generated_Source\PSoC4/CyLib.c **** 
 781:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteImoFreq(uint32 freq)
 782:Generated_Source\PSoC4/CyLib.c ****     {
 783:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 784:Generated_Source\PSoC4/CyLib.c ****         uint8  imoTrim1Value;
 785:Generated_Source\PSoC4/CyLib.c **** 
 786:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 787:Generated_Source\PSoC4/CyLib.c ****             uint32 wcoLock = 0u;
 788:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */        
 789:Generated_Source\PSoC4/CyLib.c ****         
 790:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 791:Generated_Source\PSoC4/CyLib.c ****             uint32 usbLock = 0u;
 792:Generated_Source\PSoC4/CyLib.c ****         #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 19


 793:Generated_Source\PSoC4/CyLib.c **** 
 794:Generated_Source\PSoC4/CyLib.c ****         #if (CY_PSOC4_4000)
 795:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 32u) || (freq == 48u))
 796:Generated_Source\PSoC4/CyLib.c ****         #else
 797:Generated_Source\PSoC4/CyLib.c ****             if ((freq == 24u) || (freq == 28u) || (freq == 32u) ||
 798:Generated_Source\PSoC4/CyLib.c ****                 (freq == 36u) || (freq == 40u) || (freq == 44u) ||
 799:Generated_Source\PSoC4/CyLib.c ****                 (freq == 48u))
 800:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_PSOC4_4000) */
 801:Generated_Source\PSoC4/CyLib.c ****         {
 802:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
 803:Generated_Source\PSoC4/CyLib.c **** 
 804:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 805:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkImoGetWcoLock())
 806:Generated_Source\PSoC4/CyLib.c ****                 {
 807:Generated_Source\PSoC4/CyLib.c ****                     wcoLock = 1u;
 808:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoDisableWcoLock();
 809:Generated_Source\PSoC4/CyLib.c ****                 }
 810:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 811:Generated_Source\PSoC4/CyLib.c **** 
 812:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 813:Generated_Source\PSoC4/CyLib.c **** 
 814:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 815:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkImoGetUsbLock())
 816:Generated_Source\PSoC4/CyLib.c ****                     {
 817:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 818:Generated_Source\PSoC4/CyLib.c **** 
 819:Generated_Source\PSoC4/CyLib.c ****                     if (48u == freq)
 820:Generated_Source\PSoC4/CyLib.c ****                     {
 821:Generated_Source\PSoC4/CyLib.c ****                         usbLock = 1u;
 822:Generated_Source\PSoC4/CyLib.c ****                         CySysClkImoDisableUsbLock();
 823:Generated_Source\PSoC4/CyLib.c ****                     }
 824:Generated_Source\PSoC4/CyLib.c **** 
 825:Generated_Source\PSoC4/CyLib.c ****                 #if (CYDEV_IMO_TRIMMED_BY_USB == 0u)
 826:Generated_Source\PSoC4/CyLib.c ****                     }
 827:Generated_Source\PSoC4/CyLib.c ****                 #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 828:Generated_Source\PSoC4/CyLib.c **** 
 829:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CYDEV_IMO_TRIMMED_BY_USB == 0u) */
 830:Generated_Source\PSoC4/CyLib.c **** 
 831:Generated_Source\PSoC4/CyLib.c **** 
 832:Generated_Source\PSoC4/CyLib.c ****             /* Set IMO to 24 MHz - CLK_IMO_SELECT.FREQ = 0 */
 833:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_SELECT_REG &= ((uint32) ~CY_SYS_CLK_IMO_SELECT_FREQ_MASK);
 834:Generated_Source\PSoC4/CyLib.c **** 
 835:Generated_Source\PSoC4/CyLib.c **** 
 836:Generated_Source\PSoC4/CyLib.c ****             /* Apply coarse trim */
 837:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 838:Generated_Source\PSoC4/CyLib.c ****                 if ((1u == usbLock) && (48u == freq))
 839:Generated_Source\PSoC4/CyLib.c ****                 {
 840:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_48_REG;
 841:Generated_Source\PSoC4/CyLib.c ****                 }
 842:Generated_Source\PSoC4/CyLib.c ****                 else if ((1u == usbLock) && (24u == freq))
 843:Generated_Source\PSoC4/CyLib.c ****                 {
 844:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = CY_SFLASH_IMO_TRIM_USBMODE_24_REG;
 845:Generated_Source\PSoC4/CyLib.c ****                 }
 846:Generated_Source\PSoC4/CyLib.c ****                 else
 847:Generated_Source\PSoC4/CyLib.c ****                 {
 848:Generated_Source\PSoC4/CyLib.c ****                     imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_M
 849:Generated_Source\PSoC4/CyLib.c ****                 }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 20


 850:Generated_Source\PSoC4/CyLib.c ****             #else
 851:Generated_Source\PSoC4/CyLib.c ****                 imoTrim1Value = (uint8) CY_SFLASH_IMO_TRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ);
 852:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 853:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM1_REG = (uint32) imoTrim1Value;
 854:Generated_Source\PSoC4/CyLib.c **** 
 855:Generated_Source\PSoC4/CyLib.c ****             /* Zero out fine trim */
 856:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM2_REG = CY_SYS_CLK_IMO_TRIM2_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM2_F
 857:Generated_Source\PSoC4/CyLib.c **** 
 858:Generated_Source\PSoC4/CyLib.c ****             /* Apply TC trim */
 859:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_IMO_TRIM3_REG = (CY_SYS_CLK_IMO_TRIM3_REG & ((uint32) ~CY_SYS_CLK_IMO_TRIM3_
 860:Generated_Source\PSoC4/CyLib.c ****                 (CY_SFLASH_IMO_TCTRIM_REG(freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) & CY_SYS_CLK_IMO_TRIM
 861:Generated_Source\PSoC4/CyLib.c **** 
 862:Generated_Source\PSoC4/CyLib.c ****             CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 863:Generated_Source\PSoC4/CyLib.c **** 
 864:Generated_Source\PSoC4/CyLib.c ****             if (freq > CY_SYS_CLK_IMO_MIN_FREQ_MHZ)
 865:Generated_Source\PSoC4/CyLib.c ****             {
 866:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 867:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 868:Generated_Source\PSoC4/CyLib.c ****                     (((freq - 4u - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ
 869:Generated_Source\PSoC4/CyLib.c **** 
 870:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_TRIM_DELAY_CYCLES);
 871:Generated_Source\PSoC4/CyLib.c **** 
 872:Generated_Source\PSoC4/CyLib.c ****                 /* Make small step to final frequency */
 873:Generated_Source\PSoC4/CyLib.c ****                 /* Select nearby intermediate frequency */
 874:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_IMO_SELECT_REG = (CY_SYS_CLK_IMO_SELECT_REG & ((uint32) ~CY_SYS_CLK_IMO_
 875:Generated_Source\PSoC4/CyLib.c ****                     (((freq - CY_SYS_CLK_IMO_MIN_FREQ_MHZ) >> 2u) & CY_SYS_CLK_IMO_SELECT_FREQ_MASK
 876:Generated_Source\PSoC4/CyLib.c ****             }
 877:Generated_Source\PSoC4/CyLib.c **** 
 878:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_WCO)
 879:Generated_Source\PSoC4/CyLib.c ****                 if (1u == wcoLock)
 880:Generated_Source\PSoC4/CyLib.c ****                 {
 881:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableWcoLock();
 882:Generated_Source\PSoC4/CyLib.c ****                 }
 883:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_WCO) */
 884:Generated_Source\PSoC4/CyLib.c ****         
 885:Generated_Source\PSoC4/CyLib.c ****         
 886:Generated_Source\PSoC4/CyLib.c ****             #if (CY_IP_IMO_TRIMMABLE_BY_USB)
 887:Generated_Source\PSoC4/CyLib.c ****                 if (1u == usbLock)
 888:Generated_Source\PSoC4/CyLib.c ****                 {
 889:Generated_Source\PSoC4/CyLib.c ****                     CySysClkImoEnableUsbLock();
 890:Generated_Source\PSoC4/CyLib.c ****                 }
 891:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 892:Generated_Source\PSoC4/CyLib.c **** 
 893:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
 894:Generated_Source\PSoC4/CyLib.c ****         }
 895:Generated_Source\PSoC4/CyLib.c ****         else
 896:Generated_Source\PSoC4/CyLib.c ****         {
 897:Generated_Source\PSoC4/CyLib.c ****             /* Halt CPU in debug mode if new frequency is invalid */
 898:Generated_Source\PSoC4/CyLib.c ****             CYASSERT(0u != 0u);
 899:Generated_Source\PSoC4/CyLib.c ****         }
 900:Generated_Source\PSoC4/CyLib.c ****     }
 901:Generated_Source\PSoC4/CyLib.c **** 
 902:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
 903:Generated_Source\PSoC4/CyLib.c **** 
 904:Generated_Source\PSoC4/CyLib.c **** 
 905:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSLT)
 906:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 21


 907:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkWriteHfclkDiv
 908:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 909:Generated_Source\PSoC4/CyLib.c ****     *
 910:Generated_Source\PSoC4/CyLib.c ****     * Selects the pre-scaler divider value for HFCLK from IMO.
 911:Generated_Source\PSoC4/CyLib.c ****     *
 912:Generated_Source\PSoC4/CyLib.c ****     * The HFCLK predivider allows the device to divide the HFCLK selection mux
 913:Generated_Source\PSoC4/CyLib.c ****     * input before use as HFCLK. The predivider is capable of dividing the HFCLK by
 914:Generated_Source\PSoC4/CyLib.c ****     * powers of 2 between 1 and 8.
 915:Generated_Source\PSoC4/CyLib.c ****     *
 916:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4000: The SYSCLK has the speed of 16 MHz, so HFCLK and SYSCLK dividers
 917:Generated_Source\PSoC4/CyLib.c ****     * should be selected in a way, not to exceed 16 MHz for SYSCLK.
 918:Generated_Source\PSoC4/CyLib.c ****     *
 919:Generated_Source\PSoC4/CyLib.c ****     * If the SYSCLK clock frequency increases during the device operation, call
 920:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() with the appropriate parameter to adjust the
 921:Generated_Source\PSoC4/CyLib.c ****     * number of clock cycles the cache will wait before sampling data comes back
 922:Generated_Source\PSoC4/CyLib.c ****     * from Flash. If the SYSCLK clock frequency decreases, you can call
 923:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() to improve the CPU performance. See
 924:Generated_Source\PSoC4/CyLib.c ****     * \ref CySysFlashSetWaitCycles() description for more information.
 925:Generated_Source\PSoC4/CyLib.c ****     *
 926:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_NODIV    Transparent mode (w/o dividing)
 927:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_2        Divide selected clock source by 2
 928:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_4        Divide selected clock source by 4
 929:Generated_Source\PSoC4/CyLib.c ****     * \param \ref CY_SYS_CLK_HFCLK_DIV_8        Divide selected clock source by 8
 930:Generated_Source\PSoC4/CyLib.c ****     *
 931:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 932:Generated_Source\PSoC4/CyLib.c ****     void CySysClkWriteHfclkDiv(uint32 divider)
 933:Generated_Source\PSoC4/CyLib.c ****     {
 934:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
 935:Generated_Source\PSoC4/CyLib.c **** 
 936:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
 937:Generated_Source\PSoC4/CyLib.c **** 
 938:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_SELECT_REG = ((CY_SYS_CLK_SELECT_REG & ((uint32) (~(CY_SYS_CLK_SELECT_HFCLK_DIV_
 939:Generated_Source\PSoC4/CyLib.c ****                                         CY_SYS_CLK_SELECT_HFCLK_DIV_SHIFT)))) |
 940:Generated_Source\PSoC4/CyLib.c ****                     ((uint32)((divider & CY_SYS_CLK_SELECT_HFCLK_DIV_MASK) << CY_SYS_CLK_SELECT_HFC
 941:Generated_Source\PSoC4/CyLib.c **** 
 942:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
 943:Generated_Source\PSoC4/CyLib.c ****     }
 944:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSLT) */
 945:Generated_Source\PSoC4/CyLib.c **** 
 946:Generated_Source\PSoC4/CyLib.c **** 
 947:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_ECO)
 948:Generated_Source\PSoC4/CyLib.c **** 
 949:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
 950:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStart
 951:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
 952:Generated_Source\PSoC4/CyLib.c ****     *
 953:Generated_Source\PSoC4/CyLib.c ****     * Starts the External Crystal Oscillator (ECO). Refer to the device datasheet
 954:Generated_Source\PSoC4/CyLib.c ****     * for the ECO startup time.
 955:Generated_Source\PSoC4/CyLib.c ****     *
 956:Generated_Source\PSoC4/CyLib.c ****     * The timeout interval is measured based on the system frequency defined by
 957:Generated_Source\PSoC4/CyLib.c ****     * PSoC Creator at build time. If System clock frequency is changed in
 958:Generated_Source\PSoC4/CyLib.c ****     * runtime, the \ref CyDelayFreq() with the appropriate parameter should be
 959:Generated_Source\PSoC4/CyLib.c ****     * called.
 960:Generated_Source\PSoC4/CyLib.c ****     *
 961:Generated_Source\PSoC4/CyLib.c ****     * PSoC 4100 BLE / PSoC 4200 BLE: The WCO must be enabled prior to enabling ECO.
 962:Generated_Source\PSoC4/CyLib.c ****     *
 963:Generated_Source\PSoC4/CyLib.c ****     * \param timeoutUs Timeout in microseconds.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 22


 964:Generated_Source\PSoC4/CyLib.c ****     *
 965:Generated_Source\PSoC4/CyLib.c ****     * If zero is specified, the function does not wait for timeout and returns
 966:Generated_Source\PSoC4/CyLib.c ****     * CYRET_SUCCESS. If non-zero is specified, the function waits for the timeout.
 967:Generated_Source\PSoC4/CyLib.c ****     *
 968:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS Completed successfully. The ECO is oscillating and
 969:Generated_Source\PSoC4/CyLib.c ****     * amplitude reached 60% and it does not mean 24 MHz crystal is within 50 ppm.
 970:Generated_Source\PSoC4/CyLib.c ****     *
 971:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_TIMEOUT Timeout occurred. If the crystal is not oscillating
 972:Generated_Source\PSoC4/CyLib.c ****     * or amplitude didn't reach 60% after specified amount of time, CYRET_TIMEOUT
 973:Generated_Source\PSoC4/CyLib.c ****     * is returned.
 974:Generated_Source\PSoC4/CyLib.c ****     *
 975:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
 976:Generated_Source\PSoC4/CyLib.c ****     *
 977:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
 978:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkEcoStart(uint32 timeoutUs)
 979:Generated_Source\PSoC4/CyLib.c ****     {
 980:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 981:Generated_Source\PSoC4/CyLib.c **** 
 982:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
 983:Generated_Source\PSoC4/CyLib.c ****             /* Enable the RF oscillator band gap */
 984:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG |= CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 985:Generated_Source\PSoC4/CyLib.c **** 
 986:Generated_Source\PSoC4/CyLib.c ****             /* Update trimming register */
 987:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_BB_XO_REG = CY_SYS_XTAL_BLERD_BB_XO_TRIM;
 988:Generated_Source\PSoC4/CyLib.c **** 
 989:Generated_Source\PSoC4/CyLib.c ****             /* Enable the Crystal */
 990:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG |= CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
 991:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 992:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_ENABLE;
 993:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_ECO_CONFIG_CLK_EN_TIMEOUT_US);
 994:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_CLK_EN;
 995:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
 996:Generated_Source\PSoC4/CyLib.c **** 
 997:Generated_Source\PSoC4/CyLib.c ****         if(timeoutUs > 0u)
 998:Generated_Source\PSoC4/CyLib.c ****         {
 999:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_TIMEOUT;
1000:Generated_Source\PSoC4/CyLib.c **** 
1001:Generated_Source\PSoC4/CyLib.c ****             for( ; timeoutUs > 0u; timeoutUs--)
1002:Generated_Source\PSoC4/CyLib.c ****             {
1003:Generated_Source\PSoC4/CyLib.c ****                 CyDelayUs(1u);
1004:Generated_Source\PSoC4/CyLib.c **** 
1005:Generated_Source\PSoC4/CyLib.c ****                 if(0u != CySysClkEcoReadStatus())
1006:Generated_Source\PSoC4/CyLib.c ****                 {
1007:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_SUCCESS;
1008:Generated_Source\PSoC4/CyLib.c ****                     break;
1009:Generated_Source\PSoC4/CyLib.c ****                 }
1010:Generated_Source\PSoC4/CyLib.c ****             }
1011:Generated_Source\PSoC4/CyLib.c **** 
1012:Generated_Source\PSoC4/CyLib.c ****         }
1013:Generated_Source\PSoC4/CyLib.c **** 
1014:Generated_Source\PSoC4/CyLib.c ****         return(returnStatus);
1015:Generated_Source\PSoC4/CyLib.c ****     }
1016:Generated_Source\PSoC4/CyLib.c **** 
1017:Generated_Source\PSoC4/CyLib.c **** 
1018:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1019:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoStop
1020:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 23


1021:Generated_Source\PSoC4/CyLib.c ****     *
1022:Generated_Source\PSoC4/CyLib.c ****     * Stops the megahertz crystal.
1023:Generated_Source\PSoC4/CyLib.c ****     *
1024:Generated_Source\PSoC4/CyLib.c ****     * If ECO is disabled when it is sourcing HFCLK, the CPU will halt. In addition,
1025:Generated_Source\PSoC4/CyLib.c ****     * for PSoC 4100 BLE / PSoC 4200 BLE devices, the BLE sub-system will stop
1026:Generated_Source\PSoC4/CyLib.c ****     * functioning.
1027:Generated_Source\PSoC4/CyLib.c ****     *
1028:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1029:Generated_Source\PSoC4/CyLib.c ****     void CySysClkEcoStop(void)
1030:Generated_Source\PSoC4/CyLib.c ****     {
 223              		.loc 1 1030 0
 224              		.cfi_startproc
1031:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1032:Generated_Source\PSoC4/CyLib.c ****             /* Disable the RF oscillator band gap */
1033:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLESS_RF_CONFIG_REG &= (uint32) ~CY_SYS_XTAL_BLESS_RF_CONFIG_RF_ENABLE;
 225              		.loc 1 1033 0
 226 0000 0121     		mov	r1, #1
 227 0002 054A     		ldr	r2, .L17
1034:Generated_Source\PSoC4/CyLib.c **** 
1035:Generated_Source\PSoC4/CyLib.c ****             /* Disable the Crystal */
1036:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_XTAL_BLERD_DBUS_REG &= (uint32) ~CY_SYS_XTAL_BLERD_DBUS_XTAL_ENABLE;
1037:Generated_Source\PSoC4/CyLib.c ****         #else
1038:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~(CY_SYS_CLK_ECO_CONFIG_ENABLE | CY_SYS_CLK_ECO_C
1039:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1040:Generated_Source\PSoC4/CyLib.c ****     }
 228              		.loc 1 1040 0
 229              		@ sp needed
1033:Generated_Source\PSoC4/CyLib.c **** 
 230              		.loc 1 1033 0
 231 0004 1368     		ldr	r3, [r2]
 232 0006 8B43     		bic	r3, r1
 233 0008 1360     		str	r3, [r2]
1036:Generated_Source\PSoC4/CyLib.c ****         #else
 234              		.loc 1 1036 0
 235 000a 044A     		ldr	r2, .L17+4
 236 000c 044B     		ldr	r3, .L17+8
 237 000e 1168     		ldr	r1, [r2]
 238 0010 0B40     		and	r3, r1
 239 0012 1360     		str	r3, [r2]
 240              		.loc 1 1040 0
 241 0014 7047     		bx	lr
 242              	.L18:
 243 0016 C046     		.align	2
 244              	.L17:
 245 0018 60F02E40 		.word	1076818016
 246 001c 10002E40 		.word	1076756496
 247 0020 FF7FFFFF 		.word	-32769
 248              		.cfi_endproc
 249              	.LFE9:
 250              		.size	CySysClkEcoStop, .-CySysClkEcoStop
 251              		.section	.text.CySysClkEcoReadStatus,"ax",%progbits
 252              		.align	1
 253              		.global	CySysClkEcoReadStatus
 254              		.code	16
 255              		.thumb_func
 256              		.type	CySysClkEcoReadStatus, %function
 257              	CySysClkEcoReadStatus:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 24


 258              	.LFB10:
1041:Generated_Source\PSoC4/CyLib.c **** 
1042:Generated_Source\PSoC4/CyLib.c **** 
1043:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1044:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkEcoReadStatus
1045:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1046:Generated_Source\PSoC4/CyLib.c ****     *
1047:Generated_Source\PSoC4/CyLib.c ****     * Reads the status bit for the megahertz crystal.
1048:Generated_Source\PSoC4/CyLib.c ****     *
1049:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4100 BLE / PSoC 4200 BLE devices, the status bit is the
1050:Generated_Source\PSoC4/CyLib.c ****     * XO_AMP_DETECT bit in FSM register.
1051:Generated_Source\PSoC4/CyLib.c ****     *
1052:Generated_Source\PSoC4/CyLib.c ****     * For PSoC 4200L devices, the error status bit is the WATCHDOG_ERROR bit in
1053:Generated_Source\PSoC4/CyLib.c ****     * ECO_STATUS register.
1054:Generated_Source\PSoC4/CyLib.c ****     *
1055:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4100 BLE/PSoC 4200 BLE: Non-zero indicates that ECO output
1056:Generated_Source\PSoC4/CyLib.c ****     * reached 50 ppm and is oscillating in valid range.
1057:Generated_Source\PSoC4/CyLib.c ****     *
1058:Generated_Source\PSoC4/CyLib.c ****     * \return PSoC 4200L: Non-zero indicates that ECO is running.
1059:Generated_Source\PSoC4/CyLib.c ****     *
1060:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1061:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkEcoReadStatus(void)
1062:Generated_Source\PSoC4/CyLib.c ****     {
 259              		.loc 1 1062 0
 260              		.cfi_startproc
1063:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1064:Generated_Source\PSoC4/CyLib.c **** 
1065:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_WCO_BLESS)
1066:Generated_Source\PSoC4/CyLib.c ****             returnValue = CY_SYS_XTAL_BLERD_FSM_REG & CY_SYS_XTAL_BLERD_FSM_XO_AMP_DETECT;
 261              		.loc 1 1066 0
 262 0000 024B     		ldr	r3, .L20
1067:Generated_Source\PSoC4/CyLib.c ****         #else
1068:Generated_Source\PSoC4/CyLib.c ****             returnValue = (0u != (CY_SYS_CLK_ECO_STATUS_REG & CY_SYS_CLK_ECO_STATUS_WATCHDOG_ERROR)
1069:Generated_Source\PSoC4/CyLib.c ****         #endif /* (CY_IP_WCO_BLESS) */
1070:Generated_Source\PSoC4/CyLib.c **** 
1071:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1072:Generated_Source\PSoC4/CyLib.c ****     }
 263              		.loc 1 1072 0
 264              		@ sp needed
1066:Generated_Source\PSoC4/CyLib.c ****         #else
 265              		.loc 1 1066 0
 266 0002 1868     		ldr	r0, [r3]
 267              	.LVL14:
 268 0004 0123     		mov	r3, #1
 269 0006 1840     		and	r0, r3
 270              	.LVL15:
 271              		.loc 1 1072 0
 272 0008 7047     		bx	lr
 273              	.L21:
 274 000a C046     		.align	2
 275              	.L20:
 276 000c 0C002E40 		.word	1076756492
 277              		.cfi_endproc
 278              	.LFE10:
 279              		.size	CySysClkEcoReadStatus, .-CySysClkEcoReadStatus
 280              		.section	.text.CySysClkWriteEcoDiv,"ax",%progbits
 281              		.align	1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 25


 282              		.global	CySysClkWriteEcoDiv
 283              		.code	16
 284              		.thumb_func
 285              		.type	CySysClkWriteEcoDiv, %function
 286              	CySysClkWriteEcoDiv:
 287              	.LFB11:
1073:Generated_Source\PSoC4/CyLib.c **** 
1074:Generated_Source\PSoC4/CyLib.c ****     #if (CY_IP_ECO_BLESS)
1075:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1076:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkWriteEcoDiv
1077:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1078:Generated_Source\PSoC4/CyLib.c ****         *
1079:Generated_Source\PSoC4/CyLib.c ****         * Selects value for the ECO divider.
1080:Generated_Source\PSoC4/CyLib.c ****         *
1081:Generated_Source\PSoC4/CyLib.c ****         * The ECO must not be the HFCLK clock source when this function is called.
1082:Generated_Source\PSoC4/CyLib.c ****         * The HFCLK source can be changed to the other clock source by call to the
1083:Generated_Source\PSoC4/CyLib.c ****         * CySysClkWriteHfclkDirect() function. If the ECO sources the HFCLK this
1084:Generated_Source\PSoC4/CyLib.c ****         * function will not have any effect if compiler in release mode, and halt the
1085:Generated_Source\PSoC4/CyLib.c ****         * CPU when compiler in debug mode.
1086:Generated_Source\PSoC4/CyLib.c ****         *
1087:Generated_Source\PSoC4/CyLib.c ****         * If the SYSCLK clock frequency increases during the device operation, call
1088:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() with the appropriate parameter to adjust the number
1089:Generated_Source\PSoC4/CyLib.c ****         * of clock cycles the cache will wait before sampling data comes back from
1090:Generated_Source\PSoC4/CyLib.c ****         * Flash. If the SYSCLK clock frequency decreases, you can call
1091:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() to improve the CPU performance. See
1092:Generated_Source\PSoC4/CyLib.c ****         * CySysFlashSetWaitCycles() description for more information.
1093:Generated_Source\PSoC4/CyLib.c ****         *
1094:Generated_Source\PSoC4/CyLib.c ****         * \param divider Power of 2 divider selection.
1095:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV1
1096:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV2
1097:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV4
1098:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_DIV8
1099:Generated_Source\PSoC4/CyLib.c ****         *
1100:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1101:Generated_Source\PSoC4/CyLib.c ****         void CySysClkWriteEcoDiv(uint32 divider)
1102:Generated_Source\PSoC4/CyLib.c ****         {
 288              		.loc 1 1102 0
 289              		.cfi_startproc
 290              	.LVL16:
1103:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1104:Generated_Source\PSoC4/CyLib.c **** 
1105:Generated_Source\PSoC4/CyLib.c ****             if (CY_SYS_CLK_HFCLK_ECO != (CY_SYS_CLK_SELECT_REG & CY_SYS_CLK_SELECT_DIRECT_SEL_MASK)
 291              		.loc 1 1105 0
 292 0000 0722     		mov	r2, #7
1102:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
 293              		.loc 1 1102 0
 294 0002 38B5     		push	{r3, r4, r5, lr}
 295              		.cfi_def_cfa_offset 16
 296              		.cfi_offset 3, -16
 297              		.cfi_offset 4, -12
 298              		.cfi_offset 5, -8
 299              		.cfi_offset 14, -4
 300              		.loc 1 1105 0
 301 0004 0A4B     		ldr	r3, .L26
 302 0006 1B68     		ldr	r3, [r3]
 303 0008 1A40     		and	r2, r3
 304 000a 022A     		cmp	r2, #2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 26


 305 000c 0DD0     		beq	.L23
 306 000e 041C     		mov	r4, r0
1106:Generated_Source\PSoC4/CyLib.c ****             {
1107:Generated_Source\PSoC4/CyLib.c ****                 interruptState = CyEnterCriticalSection();
1108:Generated_Source\PSoC4/CyLib.c **** 
1109:Generated_Source\PSoC4/CyLib.c ****                 CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG =  (divider & CY_SYS_CLK_XTAL_CLK_DIV_MASK) |
 307              		.loc 1 1109 0
 308 0010 0325     		mov	r5, #3
1107:Generated_Source\PSoC4/CyLib.c **** 
 309              		.loc 1 1107 0
 310 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 311              	.LVL17:
 312              		.loc 1 1109 0
 313 0016 231C     		mov	r3, r4
1110:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 314              		.loc 1 1110 0
 315 0018 0649     		ldr	r1, .L26+4
1109:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 316              		.loc 1 1109 0
 317 001a 2B40     		and	r3, r5
 318              		.loc 1 1110 0
 319 001c 0A68     		ldr	r2, [r1]
 320 001e AA43     		bic	r2, r5
1109:Generated_Source\PSoC4/CyLib.c ****                                                       (CY_SYS_CLK_XTAL_CLK_DIV_CONFIG_REG & ((uint3
 321              		.loc 1 1109 0
 322 0020 1343     		orr	r3, r2
 323 0022 0B60     		str	r3, [r1]
1111:Generated_Source\PSoC4/CyLib.c **** 
1112:Generated_Source\PSoC4/CyLib.c ****                 CyExitCriticalSection(interruptState);
 324              		.loc 1 1112 0
 325 0024 FFF7FEFF 		bl	CyExitCriticalSection
 326              	.LVL18:
 327 0028 00E0     		b	.L22
 328              	.LVL19:
 329              	.L23:
 330              	.LBB28:
 331              	.LBB29:
1113:Generated_Source\PSoC4/CyLib.c ****             }
1114:Generated_Source\PSoC4/CyLib.c ****             else
1115:Generated_Source\PSoC4/CyLib.c ****             {
1116:Generated_Source\PSoC4/CyLib.c ****                 /* Halt CPU in debug mode if ECO sources HFCLK */
1117:Generated_Source\PSoC4/CyLib.c ****                 CYASSERT(0u != 0u);
1118:Generated_Source\PSoC4/CyLib.c ****             }
1119:Generated_Source\PSoC4/CyLib.c ****         }
1120:Generated_Source\PSoC4/CyLib.c **** 
1121:Generated_Source\PSoC4/CyLib.c ****     #else
1122:Generated_Source\PSoC4/CyLib.c **** 
1123:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1124:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoTrim
1125:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1126:Generated_Source\PSoC4/CyLib.c ****         *
1127:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO. This API is available only for PSoC
1128:Generated_Source\PSoC4/CyLib.c ****         * 4200L devices only.
1129:Generated_Source\PSoC4/CyLib.c ****         *
1130:Generated_Source\PSoC4/CyLib.c ****         * The following parameters can be trimmed for ECO. The affected registers are
1131:Generated_Source\PSoC4/CyLib.c ****         * ECO_TRIM0 and ECO_TRIM1.
1132:Generated_Source\PSoC4/CyLib.c ****         *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 27


1133:Generated_Source\PSoC4/CyLib.c ****         * Watchdog trim - This bit field sets the error threshold below the steady
1134:Generated_Source\PSoC4/CyLib.c ****         * state amplitude level.
1135:Generated_Source\PSoC4/CyLib.c ****         *
1136:Generated_Source\PSoC4/CyLib.c ****         * Amplitude trim - This bit field is to set the crystal drive level when
1137:Generated_Source\PSoC4/CyLib.c ****         * ECO_CONFIG.AGC_EN = 1. WARNING: use care when setting this field because
1138:Generated_Source\PSoC4/CyLib.c ****         * driving a crystal beyond its rated limit can permanently damage the crystal.
1139:Generated_Source\PSoC4/CyLib.c ****         *
1140:Generated_Source\PSoC4/CyLib.c ****         * Filter frequency trim - This bit field sets LPF frequency trim and affects
1141:Generated_Source\PSoC4/CyLib.c ****         * the 3rd harmonic content.
1142:Generated_Source\PSoC4/CyLib.c ****         *
1143:Generated_Source\PSoC4/CyLib.c ****         * Feedback resistor trim - This bit field sets the feedback resistor trim and
1144:Generated_Source\PSoC4/CyLib.c ****         * impacts the oscillation amplitude.
1145:Generated_Source\PSoC4/CyLib.c ****         *
1146:Generated_Source\PSoC4/CyLib.c ****         * Amplifier gain trim - This bit field sets the amplifier gain trim and affects
1147:Generated_Source\PSoC4/CyLib.c ****         * the startup time of the crystal.
1148:Generated_Source\PSoC4/CyLib.c ****         *
1149:Generated_Source\PSoC4/CyLib.c ****         * Use care when setting the amplitude trim field because driving a crystal
1150:Generated_Source\PSoC4/CyLib.c ****         * beyond its rated limit can permanently damage the crystal.
1151:Generated_Source\PSoC4/CyLib.c ****         *
1152:Generated_Source\PSoC4/CyLib.c ****         * \param wDTrim: Watchdog trim
1153:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM0      Error threshold is 0.05 V
1154:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM1      Error threshold is 0.10 V
1155:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM2      Error threshold is 0.15 V
1156:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_WDTRIM3      Error threshold is 0.20 V
1157:Generated_Source\PSoC4/CyLib.c ****         *
1158:Generated_Source\PSoC4/CyLib.c ****         * \param aTrim: Amplitude trim
1159:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM0       Amplitude is 0.3 Vpp
1160:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM1       Amplitude is 0.4 Vpp
1161:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM2       Amplitude is 0.5 Vpp
1162:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM3       Amplitude is 0.6 Vpp
1163:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM4       Amplitude is 0.7 Vpp
1164:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM5       Amplitude is 0.8 Vpp
1165:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM6       Amplitude is 0.9 Vpp
1166:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_ATRIM7       Amplitude is 1.0 Vpp
1167:Generated_Source\PSoC4/CyLib.c ****         *
1168:Generated_Source\PSoC4/CyLib.c ****         * \param fTrim: Filter frequency trim
1169:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM0       Crystal frequency > 30 MHz
1170:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM1       24 MHz < Crystal frequency <= 30 MHz
1171:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM2       17 MHz < Crystal frequency <= 24 MHz
1172:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_FTRIM3       Crystal frequency <= 17 MHz
1173:Generated_Source\PSoC4/CyLib.c ****         *
1174:Generated_Source\PSoC4/CyLib.c ****         * \param rTrim: Feedback resistor trim
1175:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM0       Crystal frequency > 30 MHz
1176:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM1       24 MHz < Crystal frequency <= 30 MHz
1177:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM2       17 MHz < Crystal frequency <= 24 MHz
1178:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_RTRIM3       Crystal frequency <= 17 MHz
1179:Generated_Source\PSoC4/CyLib.c ****         *
1180:Generated_Source\PSoC4/CyLib.c ****         * \param gTrim: Amplifier gain trim. Calculate the minimum required gm
1181:Generated_Source\PSoC4/CyLib.c ****         * (trans-conductance value). Divide the calculated gm value by 4.5 to
1182:Generated_Source\PSoC4/CyLib.c ****         * obtain an integer value 'result'. For more information please refer
1183:Generated_Source\PSoC4/CyLib.c ****         * to the device TRM.
1184:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM0       If result = 1
1185:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM1       If result = 0
1186:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 2
1187:Generated_Source\PSoC4/CyLib.c ****         * - \ref CY_SYS_CLK_ECO_GTRIM2       If result = 3
1188:Generated_Source\PSoC4/CyLib.c ****         *
1189:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 28


1190:Generated_Source\PSoC4/CyLib.c ****         void CySysClkConfigureEcoTrim(uint32 wDTrim, uint32 aTrim, uint32 fTrim, uint32 rTrim, uint
1191:Generated_Source\PSoC4/CyLib.c ****         {
1192:Generated_Source\PSoC4/CyLib.c ****             uint8  interruptState;
1193:Generated_Source\PSoC4/CyLib.c ****             uint32 regTmp;
1194:Generated_Source\PSoC4/CyLib.c **** 
1195:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1196:Generated_Source\PSoC4/CyLib.c **** 
1197:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM0_REG & ~(CY_SYS_CLK_ECO_TRIM0_WDTRIM_MASK | CY_SYS_CLK_EC
1198:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (wDTrim << CY_SYS_CLK_ECO_TRIM0_WDTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM
1199:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (aTrim << CY_SYS_CLK_ECO_TRIM0_ATRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM0_
1200:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM0_REG = regTmp;
1201:Generated_Source\PSoC4/CyLib.c **** 
1202:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_ECO_TRIM1_REG & ~(CY_SYS_CLK_ECO_TRIM1_FTRIM_MASK |
1203:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_RTRIM_MASK |
1204:Generated_Source\PSoC4/CyLib.c ****                                                    CY_SYS_CLK_ECO_TRIM1_GTRIM_MASK);
1205:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (fTrim << CY_SYS_CLK_ECO_TRIM1_FTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1206:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (rTrim << CY_SYS_CLK_ECO_TRIM1_RTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1207:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((uint32) (gTrim << CY_SYS_CLK_ECO_TRIM1_GTRIM_SHIFT) & CY_SYS_CLK_ECO_TRIM1_
1208:Generated_Source\PSoC4/CyLib.c **** 
1209:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_ECO_TRIM1_REG = regTmp;
1210:Generated_Source\PSoC4/CyLib.c **** 
1211:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1212:Generated_Source\PSoC4/CyLib.c ****         }
1213:Generated_Source\PSoC4/CyLib.c **** 
1214:Generated_Source\PSoC4/CyLib.c **** 
1215:Generated_Source\PSoC4/CyLib.c ****         /*******************************************************************************
1216:Generated_Source\PSoC4/CyLib.c ****         * Function Name: CySysClkConfigureEcoDrive
1217:Generated_Source\PSoC4/CyLib.c ****         ****************************************************************************//**
1218:Generated_Source\PSoC4/CyLib.c ****         *
1219:Generated_Source\PSoC4/CyLib.c ****         * Selects trim setting values for ECO based on crystal parameters. Use care
1220:Generated_Source\PSoC4/CyLib.c ****         * when setting the driveLevel parameter because driving a crystal beyond its
1221:Generated_Source\PSoC4/CyLib.c ****         * rated limit can permanently damage the crystal.
1222:Generated_Source\PSoC4/CyLib.c ****         *
1223:Generated_Source\PSoC4/CyLib.c ****         * This API is available only for PSoC 4200L devices only.
1224:Generated_Source\PSoC4/CyLib.c ****         *
1225:Generated_Source\PSoC4/CyLib.c ****         * \param freq Frequency of the crystal in kHz.
1226:Generated_Source\PSoC4/CyLib.c ****         * \param cLoad Crystal load capacitance in pF.
1227:Generated_Source\PSoC4/CyLib.c ****         * \param esr Equivalent series resistance of the crystal in ohm.
1228:Generated_Source\PSoC4/CyLib.c ****         *  maxAmplitude: maximum amplitude level in mV. Calculate as
1229:Generated_Source\PSoC4/CyLib.c ****         *  ((sqrt(driveLevel in uW / 2 / esr))/(3.14 * freq * cLoad)) * 10^9.
1230:Generated_Source\PSoC4/CyLib.c ****         *
1231:Generated_Source\PSoC4/CyLib.c ****         *  The Automatic Gain Control (AGC) is disabled when the specified maximum
1232:Generated_Source\PSoC4/CyLib.c ****         *  amplitude level equals or above 2. In this case the amplitude is not
1233:Generated_Source\PSoC4/CyLib.c ****         *  explicitly controlled and will grow until it saturates to the supply rail
1234:Generated_Source\PSoC4/CyLib.c ****         *  (1.8V nom). WARNING: use care when disabling AGC because driving a crystal
1235:Generated_Source\PSoC4/CyLib.c ****         *  beyond its rated limit can permanently damage the crystal.
1236:Generated_Source\PSoC4/CyLib.c ****         *
1237:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_SUCCESS ECO configuration completed successfully.
1238:Generated_Source\PSoC4/CyLib.c ****         * \return \ref CYRET_BAD_PARAM One or more invalid parameters.
1239:Generated_Source\PSoC4/CyLib.c ****         *
1240:Generated_Source\PSoC4/CyLib.c ****         *******************************************************************************/
1241:Generated_Source\PSoC4/CyLib.c ****         cystatus CySysClkConfigureEcoDrive(uint32 freq, uint32 cLoad, uint32 esr, uint32 maxAmplitu
1242:Generated_Source\PSoC4/CyLib.c ****         {
1243:Generated_Source\PSoC4/CyLib.c ****             cystatus returnStatus = CYRET_SUCCESS;
1244:Generated_Source\PSoC4/CyLib.c **** 
1245:Generated_Source\PSoC4/CyLib.c ****             uint32 wDTrim;
1246:Generated_Source\PSoC4/CyLib.c ****             uint32 aTrim;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 29


1247:Generated_Source\PSoC4/CyLib.c ****             uint32 fTrim;
1248:Generated_Source\PSoC4/CyLib.c ****             uint32 rTrim;
1249:Generated_Source\PSoC4/CyLib.c ****             uint32 gTrim;
1250:Generated_Source\PSoC4/CyLib.c **** 
1251:Generated_Source\PSoC4/CyLib.c ****             uint32 gmMin;
1252:Generated_Source\PSoC4/CyLib.c **** 
1253:Generated_Source\PSoC4/CyLib.c **** 
1254:Generated_Source\PSoC4/CyLib.c ****             if ((maxAmplitude < CY_SYS_CLK_ECO_MAX_AMPL_MIN_mV) ||
1255:Generated_Source\PSoC4/CyLib.c ****                 (freq < CY_SYS_CLK_ECO_FREQ_KHZ_MIN) || (freq > CY_SYS_CLK_ECO_FREQ_KHZ_MAX))
1256:Generated_Source\PSoC4/CyLib.c ****             {
1257:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_BAD_PARAM;
1258:Generated_Source\PSoC4/CyLib.c ****             }
1259:Generated_Source\PSoC4/CyLib.c ****             else
1260:Generated_Source\PSoC4/CyLib.c ****             {
1261:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplitude trim */
1262:Generated_Source\PSoC4/CyLib.c ****                 aTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/100u) - 4u) 
1263:Generated_Source\PSoC4/CyLib.c **** 
1264:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM0)
1265:Generated_Source\PSoC4/CyLib.c ****                 {
1266:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM0;
1267:Generated_Source\PSoC4/CyLib.c ****                 }
1268:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM1)
1269:Generated_Source\PSoC4/CyLib.c ****                 {
1270:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM1;
1271:Generated_Source\PSoC4/CyLib.c ****                 }
1272:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM2)
1273:Generated_Source\PSoC4/CyLib.c ****                 {
1274:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM2;
1275:Generated_Source\PSoC4/CyLib.c ****                 }
1276:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM3)
1277:Generated_Source\PSoC4/CyLib.c ****                 {
1278:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM3;
1279:Generated_Source\PSoC4/CyLib.c ****                 }
1280:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM4)
1281:Generated_Source\PSoC4/CyLib.c ****                 {
1282:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM4;
1283:Generated_Source\PSoC4/CyLib.c ****                 }
1284:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM5)
1285:Generated_Source\PSoC4/CyLib.c ****                 {
1286:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM5;
1287:Generated_Source\PSoC4/CyLib.c ****                 }
1288:Generated_Source\PSoC4/CyLib.c ****                 else if (maxAmplitude < CY_SYS_CLK_ECO_AMPL_FOR_ATRIM6)
1289:Generated_Source\PSoC4/CyLib.c ****                 {
1290:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM6;
1291:Generated_Source\PSoC4/CyLib.c ****                 }
1292:Generated_Source\PSoC4/CyLib.c ****                 else
1293:Generated_Source\PSoC4/CyLib.c ****                 {
1294:Generated_Source\PSoC4/CyLib.c ****                     aTrim = CY_SYS_CLK_ECO_ATRIM7;
1295:Generated_Source\PSoC4/CyLib.c ****                 }
1296:Generated_Source\PSoC4/CyLib.c **** 
1297:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate Watchdog trim. */
1298:Generated_Source\PSoC4/CyLib.c ****                 wDTrim = (maxAmplitude < CY_SYS_CLK_ECO_TRIM_BOUNDARY) ? ((maxAmplitude/200u) - 2u)
1299:Generated_Source\PSoC4/CyLib.c **** 
1300:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate amplifier gain trim. */
1301:Generated_Source\PSoC4/CyLib.c ****                 gmMin = (uint32) (((((CY_SYS_CLK_ECO_GMMIN_COEFFICIENT * freq * cLoad) / 1000) * ((
1302:Generated_Source\PSoC4/CyLib.c ****                 if (gmMin > 3u)
1303:Generated_Source\PSoC4/CyLib.c ****                 {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 30


1304:Generated_Source\PSoC4/CyLib.c ****                     returnStatus = CYRET_BAD_PARAM;
1305:Generated_Source\PSoC4/CyLib.c ****                     gTrim = 0u;
1306:Generated_Source\PSoC4/CyLib.c ****                 }
1307:Generated_Source\PSoC4/CyLib.c ****                 else if (gmMin > 1u)
1308:Generated_Source\PSoC4/CyLib.c ****                 {
1309:Generated_Source\PSoC4/CyLib.c ****                     gTrim = gmMin;
1310:Generated_Source\PSoC4/CyLib.c ****                 }
1311:Generated_Source\PSoC4/CyLib.c ****                 else
1312:Generated_Source\PSoC4/CyLib.c ****                 {
1313:Generated_Source\PSoC4/CyLib.c ****                     gTrim = (gmMin == 1u) ? 0u : 1u;
1314:Generated_Source\PSoC4/CyLib.c ****                 }
1315:Generated_Source\PSoC4/CyLib.c **** 
1316:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate feedback resistor trim */
1317:Generated_Source\PSoC4/CyLib.c ****                 if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM0)
1318:Generated_Source\PSoC4/CyLib.c ****                 {
1319:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM0;
1320:Generated_Source\PSoC4/CyLib.c ****                 }
1321:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM1)
1322:Generated_Source\PSoC4/CyLib.c ****                 {
1323:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM1;
1324:Generated_Source\PSoC4/CyLib.c ****                 }
1325:Generated_Source\PSoC4/CyLib.c ****                 else if (freq > CY_SYS_CLK_ECO_FREQ_FOR_FTRIM2)
1326:Generated_Source\PSoC4/CyLib.c ****                 {
1327:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM2;
1328:Generated_Source\PSoC4/CyLib.c ****                 }
1329:Generated_Source\PSoC4/CyLib.c ****                 else
1330:Generated_Source\PSoC4/CyLib.c ****                 {
1331:Generated_Source\PSoC4/CyLib.c ****                     rTrim = CY_SYS_CLK_ECO_FTRIM3;
1332:Generated_Source\PSoC4/CyLib.c ****                 }
1333:Generated_Source\PSoC4/CyLib.c **** 
1334:Generated_Source\PSoC4/CyLib.c ****                 /* Calculate filter frequency trim */
1335:Generated_Source\PSoC4/CyLib.c ****                 fTrim = rTrim;
1336:Generated_Source\PSoC4/CyLib.c **** 
1337:Generated_Source\PSoC4/CyLib.c ****                 CySysClkConfigureEcoTrim(wDTrim, aTrim, fTrim, rTrim, gTrim);
1338:Generated_Source\PSoC4/CyLib.c **** 
1339:Generated_Source\PSoC4/CyLib.c ****                 /* Automatic Gain Control (AGC) enable */
1340:Generated_Source\PSoC4/CyLib.c ****                 if (maxAmplitude < 2u)
1341:Generated_Source\PSoC4/CyLib.c ****                 {
1342:Generated_Source\PSoC4/CyLib.c ****                     /* The oscillation amplitude is controlled to the level selected by amplitude t
1343:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG |= CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1344:Generated_Source\PSoC4/CyLib.c ****                 }
1345:Generated_Source\PSoC4/CyLib.c ****                 else
1346:Generated_Source\PSoC4/CyLib.c ****                 {
1347:Generated_Source\PSoC4/CyLib.c ****                     /* The amplitude is not explicitly controlled and will grow until it saturates 
1348:Generated_Source\PSoC4/CyLib.c ****                     * supply rail (1.8V nom).
1349:Generated_Source\PSoC4/CyLib.c ****                     */
1350:Generated_Source\PSoC4/CyLib.c ****                     CY_SYS_CLK_ECO_CONFIG_REG &= (uint32) ~CY_SYS_CLK_ECO_CONFIG_AGC_EN;
1351:Generated_Source\PSoC4/CyLib.c ****                 }
1352:Generated_Source\PSoC4/CyLib.c ****             }
1353:Generated_Source\PSoC4/CyLib.c **** 
1354:Generated_Source\PSoC4/CyLib.c ****             return (returnStatus);
1355:Generated_Source\PSoC4/CyLib.c ****         }
1356:Generated_Source\PSoC4/CyLib.c **** 
1357:Generated_Source\PSoC4/CyLib.c ****     #endif /* CY_IP_ECO_BLESS */
1358:Generated_Source\PSoC4/CyLib.c **** 
1359:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_ECO) */
1360:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 31


1361:Generated_Source\PSoC4/CyLib.c **** 
1362:Generated_Source\PSoC4/CyLib.c **** #if (CY_IP_SRSSV2 && CY_IP_PLL)
1363:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1364:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStart
1365:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1366:Generated_Source\PSoC4/CyLib.c ****     *
1367:Generated_Source\PSoC4/CyLib.c ****     * Enables the PLL. Optionally waits for it to become stable. Waits at least
1368:Generated_Source\PSoC4/CyLib.c ****     * 250 us or until it is detected that the PLL is stable.
1369:Generated_Source\PSoC4/CyLib.c ****     *
1370:Generated_Source\PSoC4/CyLib.c ****     * Clears the unlock occurred status bit by calling CySysClkPllGetUnlockStatus(),
1371:Generated_Source\PSoC4/CyLib.c ****     * once the PLL is locked if the wait parameter is 1).
1372:Generated_Source\PSoC4/CyLib.c ****     *
1373:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1374:Generated_Source\PSoC4/CyLib.c ****     *
1375:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1376:Generated_Source\PSoC4/CyLib.c ****     * 0   PLL#0
1377:Generated_Source\PSoC4/CyLib.c ****     * 1   PLL#1
1378:Generated_Source\PSoC4/CyLib.c ****     *
1379:Generated_Source\PSoC4/CyLib.c ****     * \param wait:
1380:Generated_Source\PSoC4/CyLib.c ****     * 0 - Return immediately after configuration.
1381:Generated_Source\PSoC4/CyLib.c ****     * 1 - Wait for PLL lock or timeout. This API shall use the CyDelayUs() to
1382:Generated_Source\PSoC4/CyLib.c ****     * implement the timeout feature.
1383:Generated_Source\PSoC4/CyLib.c ****     *
1384:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1385:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_TIMEOUT The timeout occurred without detecting a stable clock.
1386:Generated_Source\PSoC4/CyLib.c ****     * If the input source of the clock is jittery, then the lock indication may
1387:Generated_Source\PSoC4/CyLib.c ****     * not occur. However, after the timeout has expired, the generated PLL clock can
1388:Generated_Source\PSoC4/CyLib.c ****     * still be used.
1389:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM - Either the PLL or wait parameter is invalid.
1390:Generated_Source\PSoC4/CyLib.c ****     *
1391:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1392:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllStart(uint32 pll, uint32 wait)
1393:Generated_Source\PSoC4/CyLib.c ****     {
1394:Generated_Source\PSoC4/CyLib.c ****         uint32 counts = CY_SYS_CLK_PLL_MAX_STARTUP_US;
1395:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1396:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
1397:Generated_Source\PSoC4/CyLib.c **** 
1398:Generated_Source\PSoC4/CyLib.c ****         if((pll < CY_IP_PLL_NR) && (wait <= 1u))
1399:Generated_Source\PSoC4/CyLib.c ****         {
1400:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1401:Generated_Source\PSoC4/CyLib.c **** 
1402:Generated_Source\PSoC4/CyLib.c ****             /* Isolate PLL outputs */
1403:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1404:Generated_Source\PSoC4/CyLib.c **** 
1405:Generated_Source\PSoC4/CyLib.c ****             /* Enable PLL */
1406:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ENABLE;
1407:Generated_Source\PSoC4/CyLib.c **** 
1408:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1409:Generated_Source\PSoC4/CyLib.c **** 
1410:Generated_Source\PSoC4/CyLib.c ****             /* De-isolate >= CY_SYS_CLK_PLL_MIN_STARTUP_US after PLL enabled */
1411:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_PLL_MIN_STARTUP_US);
1412:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1413:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config |= CY_SYS_CLK_PLL_CONFIG_ISOLATE;
1414:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1415:Generated_Source\PSoC4/CyLib.c **** 
1416:Generated_Source\PSoC4/CyLib.c ****             if(wait != 0u)
1417:Generated_Source\PSoC4/CyLib.c ****             {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 32


1418:Generated_Source\PSoC4/CyLib.c ****                 returnStatus = CYRET_TIMEOUT;
1419:Generated_Source\PSoC4/CyLib.c **** 
1420:Generated_Source\PSoC4/CyLib.c ****                 while(0u != counts)
1421:Generated_Source\PSoC4/CyLib.c ****                 {
1422:Generated_Source\PSoC4/CyLib.c **** 
1423:Generated_Source\PSoC4/CyLib.c ****                     if(0u != CySysClkPllGetLockStatus(pll))
1424:Generated_Source\PSoC4/CyLib.c ****                     {
1425:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CYRET_SUCCESS;
1426:Generated_Source\PSoC4/CyLib.c ****                         (void) CySysClkPllGetUnlockStatus(pll);
1427:Generated_Source\PSoC4/CyLib.c ****                         break;
1428:Generated_Source\PSoC4/CyLib.c ****                     }
1429:Generated_Source\PSoC4/CyLib.c **** 
1430:Generated_Source\PSoC4/CyLib.c ****                     CyDelayUs(1u);
1431:Generated_Source\PSoC4/CyLib.c ****                     counts--;
1432:Generated_Source\PSoC4/CyLib.c ****                 }
1433:Generated_Source\PSoC4/CyLib.c ****             }
1434:Generated_Source\PSoC4/CyLib.c ****         }
1435:Generated_Source\PSoC4/CyLib.c ****         else
1436:Generated_Source\PSoC4/CyLib.c ****         {
1437:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_BAD_PARAM;
1438:Generated_Source\PSoC4/CyLib.c ****         }
1439:Generated_Source\PSoC4/CyLib.c **** 
1440:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1441:Generated_Source\PSoC4/CyLib.c ****     }
1442:Generated_Source\PSoC4/CyLib.c **** 
1443:Generated_Source\PSoC4/CyLib.c **** 
1444:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1445:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetLockStatus
1446:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1447:Generated_Source\PSoC4/CyLib.c ****     *
1448:Generated_Source\PSoC4/CyLib.c ****     * Returns non-zero if the output of the specified PLL output is locked.
1449:Generated_Source\PSoC4/CyLib.c ****     *
1450:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1451:Generated_Source\PSoC4/CyLib.c ****     *
1452:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1453:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1454:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1455:Generated_Source\PSoC4/CyLib.c ****     *
1456:Generated_Source\PSoC4/CyLib.c ****     * \return A non-zero value when the specified PLL is locked.
1457:Generated_Source\PSoC4/CyLib.c ****     *
1458:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1459:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetLockStatus(uint32 pll)
1460:Generated_Source\PSoC4/CyLib.c ****     {
1461:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1462:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus;
1463:Generated_Source\PSoC4/CyLib.c **** 
1464:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1465:Generated_Source\PSoC4/CyLib.c **** 
1466:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1467:Generated_Source\PSoC4/CyLib.c **** 
1468:Generated_Source\PSoC4/CyLib.c ****         /* PLL is locked if reported so for two consecutive read. */
1469:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1470:Generated_Source\PSoC4/CyLib.c ****         if(0u != returnStatus)
1471:Generated_Source\PSoC4/CyLib.c ****         {
1472:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].status & CY_SYS_CLK_PLL_STATUS_LOCKED;
1473:Generated_Source\PSoC4/CyLib.c ****         }
1474:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 33


1475:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1476:Generated_Source\PSoC4/CyLib.c **** 
1477:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1478:Generated_Source\PSoC4/CyLib.c ****     }
1479:Generated_Source\PSoC4/CyLib.c **** 
1480:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1481:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllStop
1482:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1483:Generated_Source\PSoC4/CyLib.c ****     *
1484:Generated_Source\PSoC4/CyLib.c ****     * Disables the PLL.
1485:Generated_Source\PSoC4/CyLib.c ****     *
1486:Generated_Source\PSoC4/CyLib.c ****     * Ensures that either PLL is not the source of HFCLK before it is disabled,
1487:Generated_Source\PSoC4/CyLib.c ****     * otherwise, the CPU will halt.
1488:Generated_Source\PSoC4/CyLib.c ****     *
1489:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1490:Generated_Source\PSoC4/CyLib.c ****     *
1491:Generated_Source\PSoC4/CyLib.c ****     * PLL:
1492:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1493:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1494:Generated_Source\PSoC4/CyLib.c ****     *
1495:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1496:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllStop(uint32 pll)
1497:Generated_Source\PSoC4/CyLib.c ****     {
1498:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1499:Generated_Source\PSoC4/CyLib.c **** 
1500:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1501:Generated_Source\PSoC4/CyLib.c ****         {
1502:Generated_Source\PSoC4/CyLib.c ****             interruptState = CyEnterCriticalSection();
1503:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config &= (uint32) ~(CY_SYS_CLK_PLL_CONFIG_ISOLATE | CY_SY
1504:Generated_Source\PSoC4/CyLib.c ****             CyExitCriticalSection(interruptState);
1505:Generated_Source\PSoC4/CyLib.c ****         }
1506:Generated_Source\PSoC4/CyLib.c ****     }
1507:Generated_Source\PSoC4/CyLib.c **** 
1508:Generated_Source\PSoC4/CyLib.c **** 
1509:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1510:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetPQ
1511:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1512:Generated_Source\PSoC4/CyLib.c ****     *
1513:Generated_Source\PSoC4/CyLib.c ****     * Sets feedback (P) and reference the (Q) divider value. This API also sets the
1514:Generated_Source\PSoC4/CyLib.c ****     * programmable charge pump current value. Note that the PLL has to be disabled
1515:Generated_Source\PSoC4/CyLib.c ****     * before calling this API. If this function is called while any PLL is sourcing,
1516:Generated_Source\PSoC4/CyLib.c ****     * the SYSCLK will return an error.
1517:Generated_Source\PSoC4/CyLib.c ****     *
1518:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1519:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1520:Generated_Source\PSoC4/CyLib.c ****     *
1521:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1522:Generated_Source\PSoC4/CyLib.c ****     *
1523:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1524:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1525:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1526:Generated_Source\PSoC4/CyLib.c ****     *
1527:Generated_Source\PSoC4/CyLib.c ****     * \param feedback The P divider. Range 4 - 259. Control bits for the feedback
1528:Generated_Source\PSoC4/CyLib.c ****     * divider.
1529:Generated_Source\PSoC4/CyLib.c ****     *
1530:Generated_Source\PSoC4/CyLib.c ****     * \param reference The Q divider. Range 1 - 64. Divide by the reference.
1531:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 34


1532:Generated_Source\PSoC4/CyLib.c ****     * \param current Charge the pump current in uA. The 2 uA for output frequencies
1533:Generated_Source\PSoC4/CyLib.c ****     * of 67 MHz or less, and 3 uA for higher output frequencies. The default
1534:Generated_Source\PSoC4/CyLib.c ****     * value is 2 uA.
1535:Generated_Source\PSoC4/CyLib.c ****     *
1536:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS Completed successfully.
1537:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The parameters are out of range or the specified PLL
1538:Generated_Source\PSoC4/CyLib.c ****     * sources the system clock.
1539:Generated_Source\PSoC4/CyLib.c ****     *
1540:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1541:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetPQ(uint32 pll, uint32 feedback, uint32 reference, uint32 current)
1542:Generated_Source\PSoC4/CyLib.c ****     {
1543:Generated_Source\PSoC4/CyLib.c ****         uint32   regTmp;
1544:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1545:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1546:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1547:Generated_Source\PSoC4/CyLib.c **** 
1548:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1549:Generated_Source\PSoC4/CyLib.c **** 
1550:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1551:Generated_Source\PSoC4/CyLib.c **** 
1552:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1553:Generated_Source\PSoC4/CyLib.c ****             (feedback  >= CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_MIN)  && (feedback  <= CY_SYS_CLK_PLL_
1554:Generated_Source\PSoC4/CyLib.c ****             (reference >= CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_MIN) && (reference <= CY_SYS_CLK_PLL_
1555:Generated_Source\PSoC4/CyLib.c ****             (current   >= CY_SYS_CLK_PLL_CONFIG_ICP_SEL_MIN )      && (current   <= CY_SYS_CLK_PLL_
1556:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1557:Generated_Source\PSoC4/CyLib.c ****         {
1558:Generated_Source\PSoC4/CyLib.c ****             /* Set new feedback, reference and current values */
1559:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_FEEDBA
1560:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_REFERE
1561:Generated_Source\PSoC4/CyLib.c ****                                                                        CY_SYS_CLK_PLL_CONFIG_ICP_SE
1562:Generated_Source\PSoC4/CyLib.c **** 
1563:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((feedback << CY_SYS_CLK_PLL_CONFIG_FEEDBACK_DIV_SHIFT) & CY_SYS_CLK_PLL_CONF
1564:Generated_Source\PSoC4/CyLib.c ****             regTmp |= (((reference - 1u) << CY_SYS_CLK_PLL_CONFIG_REFERENCE_DIV_SHIFT) & CY_SYS_CLK
1565:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((current << CY_SYS_CLK_PLL_CONFIG_ICP_SEL_SHIFT) & CY_SYS_CLK_PLL_CONFIG_ICP
1566:Generated_Source\PSoC4/CyLib.c **** 
1567:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1568:Generated_Source\PSoC4/CyLib.c **** 
1569:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1570:Generated_Source\PSoC4/CyLib.c ****         }
1571:Generated_Source\PSoC4/CyLib.c **** 
1572:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1573:Generated_Source\PSoC4/CyLib.c **** 
1574:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1575:Generated_Source\PSoC4/CyLib.c ****     }
1576:Generated_Source\PSoC4/CyLib.c **** 
1577:Generated_Source\PSoC4/CyLib.c **** 
1578:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1579:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetBypassMode
1580:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1581:Generated_Source\PSoC4/CyLib.c ****     *
1582:Generated_Source\PSoC4/CyLib.c ****     * Sets the bypass mode for the specified PLL.
1583:Generated_Source\PSoC4/CyLib.c ****     *
1584:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function.
1585:Generated_Source\PSoC4/CyLib.c ****     * The PLL output will glitch during this function call.
1586:Generated_Source\PSoC4/CyLib.c ****     *
1587:Generated_Source\PSoC4/CyLib.c ****     * When the PLL's reference input is higher than HFCLK frequency the device may 
1588:Generated_Source\PSoC4/CyLib.c ****     * lock due to incorrect flash wait cycle configuration and bypass switches from 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 35


1589:Generated_Source\PSoC4/CyLib.c ****     * PLL output to the reference input. See description of 
1590:Generated_Source\PSoC4/CyLib.c ****     * CySysFlashSetWaitCycles() for more information.
1591:Generated_Source\PSoC4/CyLib.c ****     *
1592:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1593:Generated_Source\PSoC4/CyLib.c ****     *
1594:Generated_Source\PSoC4/CyLib.c ****     * \param PLL:
1595:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1596:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1597:Generated_Source\PSoC4/CyLib.c ****     *
1598:Generated_Source\PSoC4/CyLib.c ****     * \param bypass: The bypass mode.
1599:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_AUTO - Automatic usage of the lock indicator. When unlocked,
1600:Generated_Source\PSoC4/CyLib.c ****     * automatically selects PLL the reference input (bypass mode). When locked,
1601:Generated_Source\PSoC4/CyLib.c ****     * automatically selects the PLL output.
1602:Generated_Source\PSoC4/CyLib.c ****     *
1603:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_REF - Selects the PLL reference input (bypass mode).
1604:Generated_Source\PSoC4/CyLib.c ****     * Ignores the lock indicator.
1605:Generated_Source\PSoC4/CyLib.c ****     *
1606:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_BYPASS_PLL_OUT - Selects the PLL output.  Ignores the lock indicator.
1607:Generated_Source\PSoC4/CyLib.c ****     *
1608:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1609:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetBypassMode(uint32 pll, uint32 bypass)
1610:Generated_Source\PSoC4/CyLib.c ****     {
1611:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1612:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1613:Generated_Source\PSoC4/CyLib.c **** 
1614:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1615:Generated_Source\PSoC4/CyLib.c **** 
1616:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (bypass <= CY_SYS_PLL_BYPASS_PLL_OUT))
1617:Generated_Source\PSoC4/CyLib.c ****         {
1618:Generated_Source\PSoC4/CyLib.c ****             regTmp  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~CY_SYS_CLK_PLL_CONFIG_BYPASS_
1619:Generated_Source\PSoC4/CyLib.c ****             regTmp |=  (uint32)(bypass << CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT);
1620:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = regTmp;
1621:Generated_Source\PSoC4/CyLib.c ****         }
1622:Generated_Source\PSoC4/CyLib.c **** 
1623:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1624:Generated_Source\PSoC4/CyLib.c ****     }
1625:Generated_Source\PSoC4/CyLib.c **** 
1626:Generated_Source\PSoC4/CyLib.c **** 
1627:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1628:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetBypassMode
1629:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1630:Generated_Source\PSoC4/CyLib.c ****     *
1631:Generated_Source\PSoC4/CyLib.c ****     *  Gets the bypass mode for the specified PLL.
1632:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1633:Generated_Source\PSoC4/CyLib.c ****     *
1634:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1635:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1636:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1637:Generated_Source\PSoC4/CyLib.c ****     *
1638:Generated_Source\PSoC4/CyLib.c ****     *  \param bypass: Bypass mode.
1639:Generated_Source\PSoC4/CyLib.c ****     *   The same as the parameter of the CySysClkPllSetBypassMode().
1640:Generated_Source\PSoC4/CyLib.c ****     *
1641:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1642:Generated_Source\PSoC4/CyLib.c ****     static uint32 CySysClkPllGetBypassMode(uint32 pll)
1643:Generated_Source\PSoC4/CyLib.c ****     {
1644:Generated_Source\PSoC4/CyLib.c ****         uint32 returnValue;
1645:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 36


1646:Generated_Source\PSoC4/CyLib.c **** 
1647:Generated_Source\PSoC4/CyLib.c ****         CYASSERT(pll < CY_IP_PLL_NR);
1648:Generated_Source\PSoC4/CyLib.c **** 
1649:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1650:Generated_Source\PSoC4/CyLib.c **** 
1651:Generated_Source\PSoC4/CyLib.c ****         returnValue = CY_SYS_CLK_PLL_BASE.pll[pll].config & CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_MASK;
1652:Generated_Source\PSoC4/CyLib.c ****         returnValue =  returnValue >> CY_SYS_CLK_PLL_CONFIG_BYPASS_SEL_SHIFT;
1653:Generated_Source\PSoC4/CyLib.c **** 
1654:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1655:Generated_Source\PSoC4/CyLib.c **** 
1656:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1657:Generated_Source\PSoC4/CyLib.c ****     }
1658:Generated_Source\PSoC4/CyLib.c **** 
1659:Generated_Source\PSoC4/CyLib.c **** 
1660:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1661:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllConfigChangeAllowed
1662:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1663:Generated_Source\PSoC4/CyLib.c ****     *
1664:Generated_Source\PSoC4/CyLib.c ****     *  The function returns non-zero value if the specified PLL sources the System
1665:Generated_Source\PSoC4/CyLib.c ****     *  clock and the PLL is not in the bypass mode.
1666:Generated_Source\PSoC4/CyLib.c ****     *
1667:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1668:Generated_Source\PSoC4/CyLib.c ****     *
1669:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1670:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1671:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1672:Generated_Source\PSoC4/CyLib.c ****     *
1673:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL sources the System clock and
1674:Generated_Source\PSoC4/CyLib.c ****     * the PLL is not in the bypass mode.
1675:Generated_Source\PSoC4/CyLib.c ****     *
1676:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1677:Generated_Source\PSoC4/CyLib.c ****     static cystatus CySysClkPllConfigChangeAllowed(uint32 pll)
1678:Generated_Source\PSoC4/CyLib.c ****     {
1679:Generated_Source\PSoC4/CyLib.c ****         uint32   pllBypassMode;
1680:Generated_Source\PSoC4/CyLib.c ****         uint32   sysclkSource;
1681:Generated_Source\PSoC4/CyLib.c ****         cystatus returnValue = CYRET_LOCKED;
1682:Generated_Source\PSoC4/CyLib.c **** 
1683:Generated_Source\PSoC4/CyLib.c ****         sysclkSource  = CySysClkGetSysclkSource();
1684:Generated_Source\PSoC4/CyLib.c ****         pllBypassMode = CySysClkPllGetBypassMode(pll);
1685:Generated_Source\PSoC4/CyLib.c **** 
1686:Generated_Source\PSoC4/CyLib.c ****         if ((CY_SYS_PLL_BYPASS_PLL_REF == pllBypassMode)             ||
1687:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL0 != sysclkSource) && (0u == pll)) ||
1688:Generated_Source\PSoC4/CyLib.c ****             ((CY_SYS_CLK_HFCLK_PLL1 != sysclkSource) && (1u == pll)))
1689:Generated_Source\PSoC4/CyLib.c ****         {
1690:Generated_Source\PSoC4/CyLib.c ****             returnValue = CYRET_SUCCESS;
1691:Generated_Source\PSoC4/CyLib.c ****         }
1692:Generated_Source\PSoC4/CyLib.c **** 
1693:Generated_Source\PSoC4/CyLib.c ****         return (returnValue);
1694:Generated_Source\PSoC4/CyLib.c ****     }
1695:Generated_Source\PSoC4/CyLib.c **** 
1696:Generated_Source\PSoC4/CyLib.c **** 
1697:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1698:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllGetUnlockStatus
1699:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1700:Generated_Source\PSoC4/CyLib.c ****     *
1701:Generated_Source\PSoC4/CyLib.c ****     *  Returns a non-zero value if the specified PLL output was unlocked.
1702:Generated_Source\PSoC4/CyLib.c ****     *  The unlock status is an indicator that the PLL has lost a lock at least once
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 37


1703:Generated_Source\PSoC4/CyLib.c ****     *  during its operation. The unlock status is cleared once it is read using
1704:Generated_Source\PSoC4/CyLib.c ****     *  this API.
1705:Generated_Source\PSoC4/CyLib.c ****     *
1706:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1707:Generated_Source\PSoC4/CyLib.c ****     *
1708:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1709:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1710:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1711:Generated_Source\PSoC4/CyLib.c ****     *
1712:Generated_Source\PSoC4/CyLib.c ****     * \return Non-zero value when the specified PLL was unlocked.
1713:Generated_Source\PSoC4/CyLib.c ****     *
1714:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1715:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysClkPllGetUnlockStatus(uint32 pll)
1716:Generated_Source\PSoC4/CyLib.c ****     {
1717:Generated_Source\PSoC4/CyLib.c ****         uint32 returnStatus = 0u;
1718:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1719:Generated_Source\PSoC4/CyLib.c **** 
1720:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1721:Generated_Source\PSoC4/CyLib.c **** 
1722:Generated_Source\PSoC4/CyLib.c ****         returnStatus = CY_SYS_CLK_PLL_BASE.pll[pll].test & CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK
1723:Generated_Source\PSoC4/CyLib.c ****         CY_SYS_CLK_PLL_BASE.pll[pll].test |= CY_SYS_CLK_PLL_TEST_UNLOCK_OCCURRED_MASK;
1724:Generated_Source\PSoC4/CyLib.c **** 
1725:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1726:Generated_Source\PSoC4/CyLib.c **** 
1727:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1728:Generated_Source\PSoC4/CyLib.c ****     }
1729:Generated_Source\PSoC4/CyLib.c **** 
1730:Generated_Source\PSoC4/CyLib.c **** 
1731:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1732:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetFrequency
1733:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1734:Generated_Source\PSoC4/CyLib.c ****     *
1735:Generated_Source\PSoC4/CyLib.c ****     * Configures either PLL#0 or PLL#1 for the requested input/output frequencies.
1736:Generated_Source\PSoC4/CyLib.c ****     * The input frequency is the frequency of the source to the PLL. The source is
1737:Generated_Source\PSoC4/CyLib.c ****     * set using the CySysClkPllSetSource() function.
1738:Generated_Source\PSoC4/CyLib.c ****     *
1739:Generated_Source\PSoC4/CyLib.c ****     * The PLL must not be the system clock source when calling this function. The
1740:Generated_Source\PSoC4/CyLib.c ****     * PLL output will glitch during this function call.
1741:Generated_Source\PSoC4/CyLib.c ****     *
1742:Generated_Source\PSoC4/CyLib.c ****     * This API is available only for PSoC 4200L devices.
1743:Generated_Source\PSoC4/CyLib.c ****     *
1744:Generated_Source\PSoC4/CyLib.c ****     * \param pll:
1745:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1746:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1747:Generated_Source\PSoC4/CyLib.c ****     *
1748:Generated_Source\PSoC4/CyLib.c ****     * \param inputFreq The reference frequency in KHz. The valid range is from 1000 to 49152 KHz.
1749:Generated_Source\PSoC4/CyLib.c ****     *
1750:Generated_Source\PSoC4/CyLib.c ****     * \param pllFreq The target frequency in KHz. The valid range is from 22500 to 49152 KHz.
1751:Generated_Source\PSoC4/CyLib.c ****     *
1752:Generated_Source\PSoC4/CyLib.c ****     * \param divider The output clock divider for the PLL:
1753:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIVPASS    Pass Through
1754:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1755:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1756:Generated_Source\PSoC4/CyLib.c ****     * CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1757:Generated_Source\PSoC4/CyLib.c ****     *
1758:Generated_Source\PSoC4/CyLib.c ****     * \param freqTol The tolerance in ppm, 10 ppm is equal to 0.001%.
1759:Generated_Source\PSoC4/CyLib.c ****     *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 38


1760:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_SUCCESS The PLL was successfully configured for the requested
1761:Generated_Source\PSoC4/CyLib.c ****     * frequency.
1762:Generated_Source\PSoC4/CyLib.c ****     *
1763:Generated_Source\PSoC4/CyLib.c ****     * \return CYRET_BAD_PARAM The PLL was not able to successfully configure for the
1764:Generated_Source\PSoC4/CyLib.c ****     * requested frequency.
1765:Generated_Source\PSoC4/CyLib.c ****     *
1766:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1767:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetFrequency(uint32 pll, uint32 inputFreq, uint32 pllFreq, uint32 divider, 
1768:Generated_Source\PSoC4/CyLib.c ****     {
1769:Generated_Source\PSoC4/CyLib.c ****         uint32 qMin;
1770:Generated_Source\PSoC4/CyLib.c ****         uint32 qMax;
1771:Generated_Source\PSoC4/CyLib.c **** 
1772:Generated_Source\PSoC4/CyLib.c ****         uint32 qVal = CY_SYS_CLK_PLL_INVALID;
1773:Generated_Source\PSoC4/CyLib.c ****         uint32 pVal = CY_SYS_CLK_PLL_INVALID;
1774:Generated_Source\PSoC4/CyLib.c **** 
1775:Generated_Source\PSoC4/CyLib.c ****         uint32 q;
1776:Generated_Source\PSoC4/CyLib.c ****         uint32 p;
1777:Generated_Source\PSoC4/CyLib.c **** 
1778:Generated_Source\PSoC4/CyLib.c ****         uint32 fvco;
1779:Generated_Source\PSoC4/CyLib.c ****         int32 ferr;
1780:Generated_Source\PSoC4/CyLib.c **** 
1781:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1782:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1783:Generated_Source\PSoC4/CyLib.c **** 
1784:Generated_Source\PSoC4/CyLib.c **** 
1785:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1786:Generated_Source\PSoC4/CyLib.c **** 
1787:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) &&
1788:Generated_Source\PSoC4/CyLib.c ****             (inputFreq  >= CY_SYS_CLK_PLL_INPUT_FREQ_MIN )  && (inputFreq  <= CY_SYS_CLK_PLL_INPUT_
1789:Generated_Source\PSoC4/CyLib.c ****             (pllFreq >= CY_SYS_CLK_PLL_OUTPUT_FREQ_MIN ) && (pllFreq <= CY_SYS_CLK_PLL_OUTPUT_FREQ_
1790:Generated_Source\PSoC4/CyLib.c ****             (divider <= CY_SYS_PLL_OUTPUT_DIV8) &&
1791:Generated_Source\PSoC4/CyLib.c ****             (CYRET_SUCCESS == tmp))
1792:Generated_Source\PSoC4/CyLib.c ****         {
1793:Generated_Source\PSoC4/CyLib.c **** 
1794:Generated_Source\PSoC4/CyLib.c ****             /* Minimum feed forward loop divisor */
1795:Generated_Source\PSoC4/CyLib.c ****             qMin = (inputFreq + (CY_SYS_CLK_PLL_FPFDMAX - 1u)) / CY_SYS_CLK_PLL_FPFDMAX;
1796:Generated_Source\PSoC4/CyLib.c ****             qMin = (qMin < CY_SYS_CLK_PLL_QMINIP) ? CY_SYS_CLK_PLL_QMINIP : qMin;
1797:Generated_Source\PSoC4/CyLib.c **** 
1798:Generated_Source\PSoC4/CyLib.c ****             /* Maximum feed forward loop divisor */
1799:Generated_Source\PSoC4/CyLib.c ****             qMax = inputFreq / CY_SYS_CLK_PLL_FPFDMIN;
1800:Generated_Source\PSoC4/CyLib.c ****             qMax = (qMax > CY_SYS_CLK_PLL_QMAXIP) ? CY_SYS_CLK_PLL_QMAXIP : qMax;
1801:Generated_Source\PSoC4/CyLib.c **** 
1802:Generated_Source\PSoC4/CyLib.c ****             if (qMin <= qMax)
1803:Generated_Source\PSoC4/CyLib.c ****             {
1804:Generated_Source\PSoC4/CyLib.c ****                 for(q = qMin; q <= qMax; q++)
1805:Generated_Source\PSoC4/CyLib.c ****                 {
1806:Generated_Source\PSoC4/CyLib.c ****                     /* Solve for the feedback divisor value */
1807:Generated_Source\PSoC4/CyLib.c **** 
1808:Generated_Source\PSoC4/CyLib.c ****                     /* INT((pllFreq * q ) / inputFreq), where INT is normal rounding  */
1809:Generated_Source\PSoC4/CyLib.c ****                     p = ((pllFreq * q) + (inputFreq / 2u)) / inputFreq;
1810:Generated_Source\PSoC4/CyLib.c **** 
1811:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the actual VCO frequency (FVCO) */
1812:Generated_Source\PSoC4/CyLib.c ****                     fvco = ((inputFreq * p) / q);
1813:Generated_Source\PSoC4/CyLib.c **** 
1814:Generated_Source\PSoC4/CyLib.c ****                     /* Calculate the frequency error (FERR) */
1815:Generated_Source\PSoC4/CyLib.c ****                     ferr = ((1000000 * ((int32) fvco - (int32) pllFreq))/ (int32) pllFreq);
1816:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 39


1817:Generated_Source\PSoC4/CyLib.c ****                     /* Bound check the frequency error and decide next action */
1818:Generated_Source\PSoC4/CyLib.c ****                     if ((( -1 * (int32) freqTol) <= ferr) && (ferr <= (int32) freqTol))
1819:Generated_Source\PSoC4/CyLib.c ****                     {
1820:Generated_Source\PSoC4/CyLib.c ****                         qVal = q;
1821:Generated_Source\PSoC4/CyLib.c ****                         pVal = p;
1822:Generated_Source\PSoC4/CyLib.c ****                         break;
1823:Generated_Source\PSoC4/CyLib.c ****                     }
1824:Generated_Source\PSoC4/CyLib.c ****                 }
1825:Generated_Source\PSoC4/CyLib.c **** 
1826:Generated_Source\PSoC4/CyLib.c **** 
1827:Generated_Source\PSoC4/CyLib.c ****                 if ((pVal != CY_SYS_CLK_PLL_INVALID) && (qVal != CY_SYS_CLK_PLL_INVALID))
1828:Generated_Source\PSoC4/CyLib.c ****                 {
1829:Generated_Source\PSoC4/CyLib.c ****                     if (CySysClkPllSetPQ(pll, pVal, qVal, CY_SYS_CLK_PLL_CURRENT_DEFAULT) == CYRET_
1830:Generated_Source\PSoC4/CyLib.c ****                     {
1831:Generated_Source\PSoC4/CyLib.c ****                         returnStatus = CySysClkPllSetOutputDivider(pll, divider);
1832:Generated_Source\PSoC4/CyLib.c ****                     }
1833:Generated_Source\PSoC4/CyLib.c ****                 }
1834:Generated_Source\PSoC4/CyLib.c ****             }
1835:Generated_Source\PSoC4/CyLib.c **** 
1836:Generated_Source\PSoC4/CyLib.c ****         }
1837:Generated_Source\PSoC4/CyLib.c **** 
1838:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1839:Generated_Source\PSoC4/CyLib.c ****     }
1840:Generated_Source\PSoC4/CyLib.c **** 
1841:Generated_Source\PSoC4/CyLib.c **** 
1842:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1843:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetSource
1844:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1845:Generated_Source\PSoC4/CyLib.c ****     *
1846:Generated_Source\PSoC4/CyLib.c ****     *  Sets the input clock source to the PLL. The PLL must be disabled before
1847:Generated_Source\PSoC4/CyLib.c ****     *  calling this function.
1848:Generated_Source\PSoC4/CyLib.c ****     *
1849:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1850:Generated_Source\PSoC4/CyLib.c ****     *
1851:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1852:Generated_Source\PSoC4/CyLib.c ****     *  0   PLL#0
1853:Generated_Source\PSoC4/CyLib.c ****     *  1   PLL#1
1854:Generated_Source\PSoC4/CyLib.c ****     *
1855:Generated_Source\PSoC4/CyLib.c ****     * \param source:
1856:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_IMO        IMO
1857:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_EXTCLK     External Clock
1858:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_ECO        ECO
1859:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI0       DSI_OUT[0]
1860:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI1       DSI_OUT[1]
1861:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI2       DSI_OUT[2]
1862:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_SOURCE_DSI3       DSI_OUT[3]
1863:Generated_Source\PSoC4/CyLib.c ****     *
1864:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1865:Generated_Source\PSoC4/CyLib.c ****     void CySysClkPllSetSource(uint32 pll, uint32 source)
1866:Generated_Source\PSoC4/CyLib.c ****     {
1867:Generated_Source\PSoC4/CyLib.c ****         uint32 regTmp;
1868:Generated_Source\PSoC4/CyLib.c ****         uint8  interruptState;
1869:Generated_Source\PSoC4/CyLib.c **** 
1870:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1871:Generated_Source\PSoC4/CyLib.c **** 
1872:Generated_Source\PSoC4/CyLib.c ****         if (pll < CY_IP_PLL_NR)
1873:Generated_Source\PSoC4/CyLib.c ****         {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 40


1874:Generated_Source\PSoC4/CyLib.c ****             regTmp = CY_SYS_CLK_SELECT_REG & (uint32) ~CY_SYS_CLK_SELECT_PLL_MASK(pll);
1875:Generated_Source\PSoC4/CyLib.c ****             regTmp |= ((source << CY_SYS_CLK_SELECT_PLL_SHIFT(pll)) & CY_SYS_CLK_SELECT_PLL_MASK(pl
1876:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_SELECT_REG = regTmp;
1877:Generated_Source\PSoC4/CyLib.c ****         }
1878:Generated_Source\PSoC4/CyLib.c **** 
1879:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1880:Generated_Source\PSoC4/CyLib.c ****     }
1881:Generated_Source\PSoC4/CyLib.c **** 
1882:Generated_Source\PSoC4/CyLib.c **** 
1883:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1884:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysClkPllSetOutputDivider
1885:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1886:Generated_Source\PSoC4/CyLib.c ****     *
1887:Generated_Source\PSoC4/CyLib.c ****     *  Sets the output clock divider for the PLL.
1888:Generated_Source\PSoC4/CyLib.c ****     *
1889:Generated_Source\PSoC4/CyLib.c ****     *  The PLL must not be the System Clock source when calling this function. The
1890:Generated_Source\PSoC4/CyLib.c ****     *  PLL output will glitch during this function call.
1891:Generated_Source\PSoC4/CyLib.c ****     *
1892:Generated_Source\PSoC4/CyLib.c ****     *  This API is available only for PSoC 4200L devices.
1893:Generated_Source\PSoC4/CyLib.c ****     *
1894:Generated_Source\PSoC4/CyLib.c ****     *  \param PLL:
1895:Generated_Source\PSoC4/CyLib.c ****     *   0   PLL#0
1896:Generated_Source\PSoC4/CyLib.c ****     *   1   PLL#1
1897:Generated_Source\PSoC4/CyLib.c ****     *
1898:Generated_Source\PSoC4/CyLib.c ****     * \param divider:
1899:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIVPASS    Pass through
1900:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV2       Divide by 2
1901:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV4       Divide by 4
1902:Generated_Source\PSoC4/CyLib.c ****     *  CY_SYS_PLL_OUTPUT_DIV8       Divide by 8
1903:Generated_Source\PSoC4/CyLib.c ****     *
1904:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_SUCCESS    Completed successfully.
1905:Generated_Source\PSoC4/CyLib.c ****     * \return \ref CYRET_BAD_PARAM  The parameters are out of range or the
1906:Generated_Source\PSoC4/CyLib.c ****     * specified PLL sources the System clock.
1907:Generated_Source\PSoC4/CyLib.c ****     *
1908:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1909:Generated_Source\PSoC4/CyLib.c ****     cystatus CySysClkPllSetOutputDivider(uint32 pll, uint32 divider)
1910:Generated_Source\PSoC4/CyLib.c ****     {
1911:Generated_Source\PSoC4/CyLib.c ****         uint32   tmpReg;
1912:Generated_Source\PSoC4/CyLib.c ****         uint8    interruptState;
1913:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_BAD_PARAM;
1914:Generated_Source\PSoC4/CyLib.c ****         cystatus tmp;
1915:Generated_Source\PSoC4/CyLib.c **** 
1916:Generated_Source\PSoC4/CyLib.c **** 
1917:Generated_Source\PSoC4/CyLib.c ****         interruptState = CyEnterCriticalSection();
1918:Generated_Source\PSoC4/CyLib.c **** 
1919:Generated_Source\PSoC4/CyLib.c ****         tmp = CySysClkPllConfigChangeAllowed(pll);
1920:Generated_Source\PSoC4/CyLib.c **** 
1921:Generated_Source\PSoC4/CyLib.c ****         if ((pll < CY_IP_PLL_NR) && (CYRET_SUCCESS == tmp) && (divider <= CY_SYS_PLL_OUTPUT_DIV8))
1922:Generated_Source\PSoC4/CyLib.c ****         {
1923:Generated_Source\PSoC4/CyLib.c ****             tmpReg  = CY_SYS_CLK_PLL_BASE.pll[pll].config & (uint32) ~(CY_SYS_CLK_PLL_CONFIG_OUTPUT
1924:Generated_Source\PSoC4/CyLib.c ****             tmpReg |= ((divider << CY_SYS_CLK_PLL_CONFIG_OUTPUT_DIV_SHIFT) & CY_SYS_CLK_PLL_CONFIG_
1925:Generated_Source\PSoC4/CyLib.c **** 
1926:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_CLK_PLL_BASE.pll[pll].config = tmpReg;
1927:Generated_Source\PSoC4/CyLib.c **** 
1928:Generated_Source\PSoC4/CyLib.c ****             returnStatus = CYRET_SUCCESS;
1929:Generated_Source\PSoC4/CyLib.c ****         }
1930:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 41


1931:Generated_Source\PSoC4/CyLib.c ****         CyExitCriticalSection(interruptState);
1932:Generated_Source\PSoC4/CyLib.c **** 
1933:Generated_Source\PSoC4/CyLib.c ****         return (returnStatus);
1934:Generated_Source\PSoC4/CyLib.c ****     }
1935:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2 && CY_IP_PLL) */
1936:Generated_Source\PSoC4/CyLib.c **** 
1937:Generated_Source\PSoC4/CyLib.c **** 
1938:Generated_Source\PSoC4/CyLib.c **** #if(CY_IP_SRSSV2)
1939:Generated_Source\PSoC4/CyLib.c **** 
1940:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1941:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdEnable
1942:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1943:Generated_Source\PSoC4/CyLib.c ****     *
1944:Generated_Source\PSoC4/CyLib.c ****     *  Enables the output of the low-voltage monitor when Vddd is at or below the
1945:Generated_Source\PSoC4/CyLib.c ****     *  trip point, configures the device to generate an interrupt, and sets the
1946:Generated_Source\PSoC4/CyLib.c ****     *  voltage trip level.
1947:Generated_Source\PSoC4/CyLib.c ****     *
1948:Generated_Source\PSoC4/CyLib.c ****     *  \param threshold: Threshold selection for Low Voltage Detect circuit.
1949:Generated_Source\PSoC4/CyLib.c ****     *  Threshold variation is +/- 2.5% from these typical voltage choices.
1950:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Voltage threshold
1951:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_75_V       1.7500 V
1952:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_80_V       1.8000 V
1953:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_1_90_V       1.9000 V
1954:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_00_V       2.0000 V
1955:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_10_V       2.1000 V
1956:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_20_V       2.2000 V
1957:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_30_V       2.3000 V
1958:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_40_V       2.4000 V
1959:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_50_V       2.5000 V
1960:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_60_V       2.6000 V
1961:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_70_V       2.7000 V
1962:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_80_V       2.8000 V
1963:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_2_90_V       2.9000 V
1964:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_00_V       3.0000 V
1965:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_3_20_V       3.2000 V
1966:Generated_Source\PSoC4/CyLib.c ****     *    CY_LVD_THRESHOLD_4_50_V       4.5000 V
1967:Generated_Source\PSoC4/CyLib.c ****     *
1968:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1969:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdEnable(uint32 threshold)
1970:Generated_Source\PSoC4/CyLib.c ****     {
1971:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
1972:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= (uint32) ~CY_LVD_PROPAGATE_INT_TO_CPU;
1973:Generated_Source\PSoC4/CyLib.c **** 
1974:Generated_Source\PSoC4/CyLib.c ****         /* Set specified threshold */
1975:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG = (CY_LVD_PWR_VMON_CONFIG_REG & ~CY_LVD_PWR_VMON_CONFIG_LVD_SEL_
1976:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
1977:Generated_Source\PSoC4/CyLib.c **** 
1978:Generated_Source\PSoC4/CyLib.c ****         /* Enable the LVD. This may cause a false LVD event. */
1979:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG |= CY_LVD_PWR_VMON_CONFIG_LVD_EN;
1980:Generated_Source\PSoC4/CyLib.c **** 
1981:Generated_Source\PSoC4/CyLib.c ****         /* Wait for the circuit to stabilize */
1982:Generated_Source\PSoC4/CyLib.c ****         CyDelayUs(CY_LVD_STABILIZE_TIMEOUT_US);
1983:Generated_Source\PSoC4/CyLib.c **** 
1984:Generated_Source\PSoC4/CyLib.c ****         /* Clear the false event */
1985:Generated_Source\PSoC4/CyLib.c ****         CySysLvdClearInterrupt();
1986:Generated_Source\PSoC4/CyLib.c **** 
1987:Generated_Source\PSoC4/CyLib.c ****         /* Unmask the interrupt */
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 42


1988:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   |= CY_LVD_PROPAGATE_INT_TO_CPU;
1989:Generated_Source\PSoC4/CyLib.c ****     }
1990:Generated_Source\PSoC4/CyLib.c **** 
1991:Generated_Source\PSoC4/CyLib.c **** 
1992:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
1993:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdDisable
1994:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
1995:Generated_Source\PSoC4/CyLib.c ****     *
1996:Generated_Source\PSoC4/CyLib.c ****     *  Disables the low voltage detection. A low voltage interrupt is disabled.
1997:Generated_Source\PSoC4/CyLib.c ****     *
1998:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
1999:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdDisable(void)
2000:Generated_Source\PSoC4/CyLib.c ****     {
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
2002:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
2003:Generated_Source\PSoC4/CyLib.c ****     }
2004:Generated_Source\PSoC4/CyLib.c **** 
2005:Generated_Source\PSoC4/CyLib.c **** 
2006:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2007:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdGetInterruptSource
2008:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2009:Generated_Source\PSoC4/CyLib.c ****     *
2010:Generated_Source\PSoC4/CyLib.c ****     *  Gets the low voltage detection interrupt status (without clearing).
2011:Generated_Source\PSoC4/CyLib.c ****     *
2012:Generated_Source\PSoC4/CyLib.c ****     * \return
2013:Generated_Source\PSoC4/CyLib.c ****     *  Interrupt request value:
2014:Generated_Source\PSoC4/CyLib.c ****     *    CY_SYS_LVD_INT - Indicates an Low Voltage Detect interrupt
2015:Generated_Source\PSoC4/CyLib.c ****     *
2016:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2017:Generated_Source\PSoC4/CyLib.c ****     uint32 CySysLvdGetInterruptSource(void)
2018:Generated_Source\PSoC4/CyLib.c ****     {
2019:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
2020:Generated_Source\PSoC4/CyLib.c ****     }
2021:Generated_Source\PSoC4/CyLib.c **** 
2022:Generated_Source\PSoC4/CyLib.c **** 
2023:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2024:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysLvdClearInterrupt
2025:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2026:Generated_Source\PSoC4/CyLib.c ****     *
2027:Generated_Source\PSoC4/CyLib.c ****     *  Clears the low voltage detection interrupt status.
2028:Generated_Source\PSoC4/CyLib.c ****     *
2029:Generated_Source\PSoC4/CyLib.c ****     * \return
2030:Generated_Source\PSoC4/CyLib.c ****     *  None
2031:Generated_Source\PSoC4/CyLib.c ****     *
2032:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2033:Generated_Source\PSoC4/CyLib.c ****     void CySysLvdClearInterrupt(void)
2034:Generated_Source\PSoC4/CyLib.c ****     {
2035:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
2036:Generated_Source\PSoC4/CyLib.c ****     }
2037:Generated_Source\PSoC4/CyLib.c **** 
2038:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_IP_SRSSV2) */
2039:Generated_Source\PSoC4/CyLib.c **** 
2040:Generated_Source\PSoC4/CyLib.c **** 
2041:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2042:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysGetResetReason
2043:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2044:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 43


2045:Generated_Source\PSoC4/CyLib.c **** *  Reports the cause for the latest reset(s) that occurred in the system. All
2046:Generated_Source\PSoC4/CyLib.c **** *  the bits in the RES_CAUSE register assert when the corresponding reset cause
2047:Generated_Source\PSoC4/CyLib.c **** *  occurs and must be cleared by the firmware. These bits are cleared by the
2048:Generated_Source\PSoC4/CyLib.c **** *  hardware only during XRES, POR, or a detected brown-out.
2049:Generated_Source\PSoC4/CyLib.c **** *
2050:Generated_Source\PSoC4/CyLib.c **** *  \param reason: bits in the RES_CAUSE register to clear.
2051:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_WDT       - WDT caused a reset
2052:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_PROTFAULT - Occured protection violation that requires reset
2053:Generated_Source\PSoC4/CyLib.c **** *   CY_SYS_RESET_SW        - Cortex-M0 requested a system reset.
2054:Generated_Source\PSoC4/CyLib.c **** *
2055:Generated_Source\PSoC4/CyLib.c **** * \return
2056:Generated_Source\PSoC4/CyLib.c **** *  Status. Same enumerated bit values as used for the reason parameter.
2057:Generated_Source\PSoC4/CyLib.c **** *
2058:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2059:Generated_Source\PSoC4/CyLib.c **** uint32 CySysGetResetReason(uint32 reason)
2060:Generated_Source\PSoC4/CyLib.c **** {
2061:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
2062:Generated_Source\PSoC4/CyLib.c **** 
2063:Generated_Source\PSoC4/CyLib.c ****     reason &= (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2064:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
2065:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
2066:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_RES_CAUSE_REG = reason;
2067:Generated_Source\PSoC4/CyLib.c **** 
2068:Generated_Source\PSoC4/CyLib.c ****     return (returnStatus);
2069:Generated_Source\PSoC4/CyLib.c **** }
2070:Generated_Source\PSoC4/CyLib.c **** 
2071:Generated_Source\PSoC4/CyLib.c **** 
2072:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2073:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDisableInts
2074:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2075:Generated_Source\PSoC4/CyLib.c **** *
2076:Generated_Source\PSoC4/CyLib.c **** *  Disables all interrupts.
2077:Generated_Source\PSoC4/CyLib.c **** *
2078:Generated_Source\PSoC4/CyLib.c **** * \return
2079:Generated_Source\PSoC4/CyLib.c **** *  32 bit mask of previously enabled interrupts.
2080:Generated_Source\PSoC4/CyLib.c **** *
2081:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2082:Generated_Source\PSoC4/CyLib.c **** uint32 CyDisableInts(void)
2083:Generated_Source\PSoC4/CyLib.c **** {
2084:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
2085:Generated_Source\PSoC4/CyLib.c **** 
2086:Generated_Source\PSoC4/CyLib.c ****     /* Get current interrupt state. */
2087:Generated_Source\PSoC4/CyLib.c ****     intState = CY_INT_CLEAR_REG;
2088:Generated_Source\PSoC4/CyLib.c **** 
2089:Generated_Source\PSoC4/CyLib.c ****     /* Disable all interrupts. */
2090:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = CY_INT_CLEAR_DISABLE_ALL;
2091:Generated_Source\PSoC4/CyLib.c **** 
2092:Generated_Source\PSoC4/CyLib.c ****     return (intState);
2093:Generated_Source\PSoC4/CyLib.c **** }
2094:Generated_Source\PSoC4/CyLib.c **** 
2095:Generated_Source\PSoC4/CyLib.c **** 
2096:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2097:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyEnableInts
2098:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2099:Generated_Source\PSoC4/CyLib.c **** *
2100:Generated_Source\PSoC4/CyLib.c **** *  Enables interrupts to a given state.
2101:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 44


2102:Generated_Source\PSoC4/CyLib.c **** *  \param mask The 32 bit mask of interrupts to enable.
2103:Generated_Source\PSoC4/CyLib.c **** *
2104:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2105:Generated_Source\PSoC4/CyLib.c **** void CyEnableInts(uint32 mask)
2106:Generated_Source\PSoC4/CyLib.c **** {
2107:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
2108:Generated_Source\PSoC4/CyLib.c **** }
2109:Generated_Source\PSoC4/CyLib.c **** 
2110:Generated_Source\PSoC4/CyLib.c **** 
2111:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2112:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetSysVector
2113:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2114:Generated_Source\PSoC4/CyLib.c **** *
2115:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified system interrupt number. These
2116:Generated_Source\PSoC4/CyLib.c **** *  interrupts are for SysTick, PendSV and others.
2117:Generated_Source\PSoC4/CyLib.c **** *
2118:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2119:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2120:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2121:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2122:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
2123:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2124:Generated_Source\PSoC4/CyLib.c **** *
2125:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine.
2126:Generated_Source\PSoC4/CyLib.c **** *
2127:Generated_Source\PSoC4/CyLib.c **** * \return The old ISR vector at this location.
2128:Generated_Source\PSoC4/CyLib.c **** *
2129:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2130:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetSysVector(uint8 number, cyisraddress address)
2131:Generated_Source\PSoC4/CyLib.c **** {
2132:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2133:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2134:Generated_Source\PSoC4/CyLib.c **** 
2135:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2136:Generated_Source\PSoC4/CyLib.c **** 
2137:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2138:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[number];
2139:Generated_Source\PSoC4/CyLib.c **** 
2140:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2141:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[number] = address;
2142:Generated_Source\PSoC4/CyLib.c **** 
2143:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2144:Generated_Source\PSoC4/CyLib.c **** }
2145:Generated_Source\PSoC4/CyLib.c **** 
2146:Generated_Source\PSoC4/CyLib.c **** 
2147:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2148:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetSysVector
2149:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2150:Generated_Source\PSoC4/CyLib.c **** *
2151:Generated_Source\PSoC4/CyLib.c **** *   Gets the interrupt vector of the specified system interrupt number. These
2152:Generated_Source\PSoC4/CyLib.c **** *   interrupts are for SysTick, PendSV and others.
2153:Generated_Source\PSoC4/CyLib.c **** *
2154:Generated_Source\PSoC4/CyLib.c **** *  \param number: System interrupt number:
2155:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_NMI_IRQN        - Non Maskable Interrupt
2156:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_HARD_FAULT_IRQN - Hard Fault Interrupt
2157:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SVCALL_IRQN     - SV Call Interrupt
2158:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_PEND_SV_IRQN    - Pend SV Interrupt
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 45


2159:Generated_Source\PSoC4/CyLib.c **** *    CY_INT_SYSTICK_IRQN    - System Tick Interrupt
2160:Generated_Source\PSoC4/CyLib.c **** *
2161:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2162:Generated_Source\PSoC4/CyLib.c **** *
2163:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2164:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetSysVector(uint8 number)
2165:Generated_Source\PSoC4/CyLib.c **** {
2166:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2167:Generated_Source\PSoC4/CyLib.c **** 
2168:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_INT_IRQ_BASE);
2169:Generated_Source\PSoC4/CyLib.c **** 
2170:Generated_Source\PSoC4/CyLib.c ****     return(ramVectorTable[number]);
2171:Generated_Source\PSoC4/CyLib.c **** }
2172:Generated_Source\PSoC4/CyLib.c **** 
2173:Generated_Source\PSoC4/CyLib.c **** 
2174:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2175:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetVector
2176:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2177:Generated_Source\PSoC4/CyLib.c **** *
2178:Generated_Source\PSoC4/CyLib.c **** *  Sets the interrupt vector of the specified interrupt number.
2179:Generated_Source\PSoC4/CyLib.c **** *
2180:Generated_Source\PSoC4/CyLib.c **** *  \param number Valid range [0-31].  Interrupt number
2181:Generated_Source\PSoC4/CyLib.c **** *  \param address Pointer to an interrupt service routine
2182:Generated_Source\PSoC4/CyLib.c **** *
2183:Generated_Source\PSoC4/CyLib.c **** * \return Previous interrupt vector value.
2184:Generated_Source\PSoC4/CyLib.c **** *
2185:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2186:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntSetVector(uint8 number, cyisraddress address)
2187:Generated_Source\PSoC4/CyLib.c **** {
2188:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
2189:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2190:Generated_Source\PSoC4/CyLib.c **** 
2191:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2192:Generated_Source\PSoC4/CyLib.c **** 
2193:Generated_Source\PSoC4/CyLib.c ****     /* Save old Interrupt service routine. */
2194:Generated_Source\PSoC4/CyLib.c ****     oldIsr = ramVectorTable[CY_INT_IRQ_BASE + number];
2195:Generated_Source\PSoC4/CyLib.c **** 
2196:Generated_Source\PSoC4/CyLib.c ****     /* Set new Interrupt service routine. */
2197:Generated_Source\PSoC4/CyLib.c ****     ramVectorTable[CY_INT_IRQ_BASE + number] = address;
2198:Generated_Source\PSoC4/CyLib.c **** 
2199:Generated_Source\PSoC4/CyLib.c ****     return(oldIsr);
2200:Generated_Source\PSoC4/CyLib.c **** }
2201:Generated_Source\PSoC4/CyLib.c **** 
2202:Generated_Source\PSoC4/CyLib.c **** 
2203:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2204:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetVector
2205:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2206:Generated_Source\PSoC4/CyLib.c **** *
2207:Generated_Source\PSoC4/CyLib.c **** *  Gets the interrupt vector of the specified interrupt number.
2208:Generated_Source\PSoC4/CyLib.c **** *
2209:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2210:Generated_Source\PSoC4/CyLib.c **** *
2211:Generated_Source\PSoC4/CyLib.c **** * \return Address of the ISR in the interrupt vector table.
2212:Generated_Source\PSoC4/CyLib.c **** *
2213:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2214:Generated_Source\PSoC4/CyLib.c **** cyisraddress CyIntGetVector(uint8 number)
2215:Generated_Source\PSoC4/CyLib.c **** {
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 46


2216:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
2217:Generated_Source\PSoC4/CyLib.c **** 
2218:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2219:Generated_Source\PSoC4/CyLib.c **** 
2220:Generated_Source\PSoC4/CyLib.c ****     return (ramVectorTable[CY_INT_IRQ_BASE + number]);
2221:Generated_Source\PSoC4/CyLib.c **** }
2222:Generated_Source\PSoC4/CyLib.c **** 
2223:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2224:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPriority
2225:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2226:Generated_Source\PSoC4/CyLib.c **** *
2227:Generated_Source\PSoC4/CyLib.c **** *  Sets the priority of the interrupt.
2228:Generated_Source\PSoC4/CyLib.c **** *
2229:Generated_Source\PSoC4/CyLib.c **** *  \param priority: Priority of the interrupt. 0 - 3, 0 being the highest.
2230:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2231:Generated_Source\PSoC4/CyLib.c **** *
2232:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2233:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPriority(uint8 number, uint8 priority)
2234:Generated_Source\PSoC4/CyLib.c **** {
2235:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
2236:Generated_Source\PSoC4/CyLib.c ****     uint32 shift;
2237:Generated_Source\PSoC4/CyLib.c ****     uint32 value;
2238:Generated_Source\PSoC4/CyLib.c **** 
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(priority <= CY_MIN_PRIORITY);
2240:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2241:Generated_Source\PSoC4/CyLib.c **** 
2242:Generated_Source\PSoC4/CyLib.c ****     shift = CY_INT_PRIORITY_SHIFT(number);
2243:Generated_Source\PSoC4/CyLib.c **** 
2244:Generated_Source\PSoC4/CyLib.c ****     interruptState = CyEnterCriticalSection();
2245:Generated_Source\PSoC4/CyLib.c **** 
2246:Generated_Source\PSoC4/CyLib.c ****     value = CY_INT_PRIORITY_REG(number);
2247:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
2248:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
2249:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
2250:Generated_Source\PSoC4/CyLib.c **** 
2251:Generated_Source\PSoC4/CyLib.c ****     CyExitCriticalSection(interruptState);
2252:Generated_Source\PSoC4/CyLib.c **** }
2253:Generated_Source\PSoC4/CyLib.c **** 
2254:Generated_Source\PSoC4/CyLib.c **** 
2255:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2256:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetPriority
2257:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2258:Generated_Source\PSoC4/CyLib.c **** *
2259:Generated_Source\PSoC4/CyLib.c **** *  Gets the priority of the interrupt.
2260:Generated_Source\PSoC4/CyLib.c **** *
2261:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the interrupt, 0 - 31.
2262:Generated_Source\PSoC4/CyLib.c **** *
2263:Generated_Source\PSoC4/CyLib.c **** * \return
2264:Generated_Source\PSoC4/CyLib.c **** *  Priority of the interrupt. 0 - 3, 0 being the highest.
2265:Generated_Source\PSoC4/CyLib.c **** *
2266:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2267:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetPriority(uint8 number)
2268:Generated_Source\PSoC4/CyLib.c **** {
2269:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
2270:Generated_Source\PSoC4/CyLib.c **** 
2271:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
2272:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 47


2273:Generated_Source\PSoC4/CyLib.c ****     priority = (uint8) (CY_INT_PRIORITY_REG(number) >> CY_INT_PRIORITY_SHIFT(number));
2274:Generated_Source\PSoC4/CyLib.c **** 
2275:Generated_Source\PSoC4/CyLib.c ****     return (priority & (uint8) CY_INT_PRIORITY_MASK);
2276:Generated_Source\PSoC4/CyLib.c **** }
2277:Generated_Source\PSoC4/CyLib.c **** 
2278:Generated_Source\PSoC4/CyLib.c **** 
2279:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2280:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntEnable
2281:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2282:Generated_Source\PSoC4/CyLib.c **** *
2283:Generated_Source\PSoC4/CyLib.c **** *  Enables the specified interrupt number.
2284:Generated_Source\PSoC4/CyLib.c **** *
2285:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number
2286:Generated_Source\PSoC4/CyLib.c **** *
2287:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2288:Generated_Source\PSoC4/CyLib.c **** void CyIntEnable(uint8 number)
2289:Generated_Source\PSoC4/CyLib.c **** {
2290:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2291:Generated_Source\PSoC4/CyLib.c **** }
2292:Generated_Source\PSoC4/CyLib.c **** 
2293:Generated_Source\PSoC4/CyLib.c **** 
2294:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2295:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntGetState
2296:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2297:Generated_Source\PSoC4/CyLib.c **** *
2298:Generated_Source\PSoC4/CyLib.c **** *  Gets the enable state of the specified interrupt number.
2299:Generated_Source\PSoC4/CyLib.c **** *
2300:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2301:Generated_Source\PSoC4/CyLib.c **** *
2302:Generated_Source\PSoC4/CyLib.c **** * \return
2303:Generated_Source\PSoC4/CyLib.c **** *  Enable status: 1 if enabled, 0 if disabled
2304:Generated_Source\PSoC4/CyLib.c **** *
2305:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2306:Generated_Source\PSoC4/CyLib.c **** uint8 CyIntGetState(uint8 number)
2307:Generated_Source\PSoC4/CyLib.c **** {
2308:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
2309:Generated_Source\PSoC4/CyLib.c ****     return ((0u != (CY_INT_ENABLE_REG & ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number)))) ?
2310:Generated_Source\PSoC4/CyLib.c **** }
2311:Generated_Source\PSoC4/CyLib.c **** 
2312:Generated_Source\PSoC4/CyLib.c **** 
2313:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2314:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntDisable
2315:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2316:Generated_Source\PSoC4/CyLib.c **** *
2317:Generated_Source\PSoC4/CyLib.c **** *   Disables the specified interrupt number.
2318:Generated_Source\PSoC4/CyLib.c **** *
2319:Generated_Source\PSoC4/CyLib.c **** *   \param number: Valid range [0-31].  Interrupt number.
2320:Generated_Source\PSoC4/CyLib.c **** *
2321:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2322:Generated_Source\PSoC4/CyLib.c **** void CyIntDisable(uint8 number)
2323:Generated_Source\PSoC4/CyLib.c **** {
2324:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2325:Generated_Source\PSoC4/CyLib.c **** }
2326:Generated_Source\PSoC4/CyLib.c **** 
2327:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2328:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntSetPending
2329:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 48


2330:Generated_Source\PSoC4/CyLib.c **** *
2331:Generated_Source\PSoC4/CyLib.c **** *  Forces the specified interrupt number to be pending.
2332:Generated_Source\PSoC4/CyLib.c **** *
2333:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2334:Generated_Source\PSoC4/CyLib.c **** *
2335:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2336:Generated_Source\PSoC4/CyLib.c **** void CyIntSetPending(uint8 number)
2337:Generated_Source\PSoC4/CyLib.c **** {
2338:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2339:Generated_Source\PSoC4/CyLib.c **** }
2340:Generated_Source\PSoC4/CyLib.c **** 
2341:Generated_Source\PSoC4/CyLib.c **** 
2342:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2343:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyIntClearPending
2344:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2345:Generated_Source\PSoC4/CyLib.c **** *
2346:Generated_Source\PSoC4/CyLib.c **** *  Clears any pending interrupt for the specified interrupt number.
2347:Generated_Source\PSoC4/CyLib.c **** *
2348:Generated_Source\PSoC4/CyLib.c **** *  \param number: Valid range [0-31].  Interrupt number.
2349:Generated_Source\PSoC4/CyLib.c **** *
2350:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2351:Generated_Source\PSoC4/CyLib.c **** void CyIntClearPending(uint8 number)
2352:Generated_Source\PSoC4/CyLib.c **** {
2353:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
2354:Generated_Source\PSoC4/CyLib.c **** }
2355:Generated_Source\PSoC4/CyLib.c **** 
2356:Generated_Source\PSoC4/CyLib.c **** 
2357:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2358:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyHalt
2359:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2360:Generated_Source\PSoC4/CyLib.c **** *
2361:Generated_Source\PSoC4/CyLib.c **** *  Halts the CPU.
2362:Generated_Source\PSoC4/CyLib.c **** *
2363:Generated_Source\PSoC4/CyLib.c **** *  \param reason: Value to be used during debugging.
2364:Generated_Source\PSoC4/CyLib.c **** *
2365:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2366:Generated_Source\PSoC4/CyLib.c **** void CyHalt(uint8 reason)
2367:Generated_Source\PSoC4/CyLib.c **** {
2368:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
2369:Generated_Source\PSoC4/CyLib.c ****     {
2370:Generated_Source\PSoC4/CyLib.c ****         /* To remove unreferenced local variable warning */
2371:Generated_Source\PSoC4/CyLib.c ****     }
2372:Generated_Source\PSoC4/CyLib.c **** 
2373:Generated_Source\PSoC4/CyLib.c ****     #if defined (__ARMCC_VERSION)
2374:Generated_Source\PSoC4/CyLib.c ****         __breakpoint(0x0);
2375:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__GNUC__) || defined (__ICCARM__)
2376:Generated_Source\PSoC4/CyLib.c ****         __asm("    bkpt    1");
 332              		.loc 1 2376 0
 333              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 334 002a 01BE     		    bkpt    1
 335              	@ 0 "" 2
 336              	.LVL20:
 337              		.code	16
 338              	.L22:
 339              	.LBE29:
 340              	.LBE28:
1119:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 49


 341              		.loc 1 1119 0
 342              		@ sp needed
 343 002c 38BD     		pop	{r3, r4, r5, pc}
 344              	.L27:
 345 002e C046     		.align	2
 346              	.L26:
 347 0030 00010B40 		.word	1074462976
 348 0034 64F02E40 		.word	1076818020
 349              		.cfi_endproc
 350              	.LFE11:
 351              		.size	CySysClkWriteEcoDiv, .-CySysClkWriteEcoDiv
 352              		.section	.text.CySysLvdDisable,"ax",%progbits
 353              		.align	1
 354              		.global	CySysLvdDisable
 355              		.code	16
 356              		.thumb_func
 357              		.type	CySysLvdDisable, %function
 358              	CySysLvdDisable:
 359              	.LFB13:
2000:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_MASK_REG   &= ~CY_LVD_PROPAGATE_INT_TO_CPU;
 360              		.loc 1 2000 0
 361              		.cfi_startproc
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 362              		.loc 1 2001 0
 363 0000 0221     		mov	r1, #2
 364 0002 054A     		ldr	r2, .L29
2003:Generated_Source\PSoC4/CyLib.c **** 
 365              		.loc 1 2003 0
 366              		@ sp needed
2001:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_VMON_CONFIG_REG &= ~CY_LVD_PWR_VMON_CONFIG_LVD_EN;
 367              		.loc 1 2001 0
 368 0004 1368     		ldr	r3, [r2]
 369 0006 8B43     		bic	r3, r1
 370 0008 1360     		str	r3, [r2]
2002:Generated_Source\PSoC4/CyLib.c ****     }
 371              		.loc 1 2002 0
 372 000a 044A     		ldr	r2, .L29+4
 373 000c 0139     		sub	r1, r1, #1
 374 000e 1368     		ldr	r3, [r2]
 375 0010 8B43     		bic	r3, r1
 376 0012 1360     		str	r3, [r2]
2003:Generated_Source\PSoC4/CyLib.c **** 
 377              		.loc 1 2003 0
 378 0014 7047     		bx	lr
 379              	.L30:
 380 0016 C046     		.align	2
 381              	.L29:
 382 0018 08000B40 		.word	1074462728
 383 001c 18000B40 		.word	1074462744
 384              		.cfi_endproc
 385              	.LFE13:
 386              		.size	CySysLvdDisable, .-CySysLvdDisable
 387              		.section	.text.CySysLvdGetInterruptSource,"ax",%progbits
 388              		.align	1
 389              		.global	CySysLvdGetInterruptSource
 390              		.code	16
 391              		.thumb_func
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 50


 392              		.type	CySysLvdGetInterruptSource, %function
 393              	CySysLvdGetInterruptSource:
 394              	.LFB14:
2018:Generated_Source\PSoC4/CyLib.c ****         return (CY_LVD_PWR_INTR_REG & CY_SYS_LVD_INT);
 395              		.loc 1 2018 0
 396              		.cfi_startproc
2019:Generated_Source\PSoC4/CyLib.c ****     }
 397              		.loc 1 2019 0
 398 0000 024B     		ldr	r3, .L32
2020:Generated_Source\PSoC4/CyLib.c **** 
 399              		.loc 1 2020 0
 400              		@ sp needed
2019:Generated_Source\PSoC4/CyLib.c ****     }
 401              		.loc 1 2019 0
 402 0002 1868     		ldr	r0, [r3]
 403 0004 0223     		mov	r3, #2
 404 0006 1840     		and	r0, r3
2020:Generated_Source\PSoC4/CyLib.c **** 
 405              		.loc 1 2020 0
 406 0008 7047     		bx	lr
 407              	.L33:
 408 000a C046     		.align	2
 409              	.L32:
 410 000c 04000B40 		.word	1074462724
 411              		.cfi_endproc
 412              	.LFE14:
 413              		.size	CySysLvdGetInterruptSource, .-CySysLvdGetInterruptSource
 414              		.section	.text.CySysLvdClearInterrupt,"ax",%progbits
 415              		.align	1
 416              		.global	CySysLvdClearInterrupt
 417              		.code	16
 418              		.thumb_func
 419              		.type	CySysLvdClearInterrupt, %function
 420              	CySysLvdClearInterrupt:
 421              	.LFB15:
2034:Generated_Source\PSoC4/CyLib.c ****         CY_LVD_PWR_INTR_REG = CY_SYS_LVD_INT;
 422              		.loc 1 2034 0
 423              		.cfi_startproc
2035:Generated_Source\PSoC4/CyLib.c ****     }
 424              		.loc 1 2035 0
 425 0000 0222     		mov	r2, #2
 426 0002 014B     		ldr	r3, .L35
2036:Generated_Source\PSoC4/CyLib.c **** 
 427              		.loc 1 2036 0
 428              		@ sp needed
2035:Generated_Source\PSoC4/CyLib.c ****     }
 429              		.loc 1 2035 0
 430 0004 1A60     		str	r2, [r3]
2036:Generated_Source\PSoC4/CyLib.c **** 
 431              		.loc 1 2036 0
 432 0006 7047     		bx	lr
 433              	.L36:
 434              		.align	2
 435              	.L35:
 436 0008 04000B40 		.word	1074462724
 437              		.cfi_endproc
 438              	.LFE15:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 51


 439              		.size	CySysLvdClearInterrupt, .-CySysLvdClearInterrupt
 440              		.section	.text.CySysGetResetReason,"ax",%progbits
 441              		.align	1
 442              		.global	CySysGetResetReason
 443              		.code	16
 444              		.thumb_func
 445              		.type	CySysGetResetReason, %function
 446              	CySysGetResetReason:
 447              	.LFB16:
2060:Generated_Source\PSoC4/CyLib.c ****     uint32 returnStatus;
 448              		.loc 1 2060 0
 449              		.cfi_startproc
 450              	.LVL21:
2063:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 451              		.loc 1 2063 0
 452 0000 1923     		mov	r3, #25
 453 0002 021C     		mov	r2, r0
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 454              		.loc 1 2064 0
 455 0004 0249     		ldr	r1, .L38
2063:Generated_Source\PSoC4/CyLib.c ****     returnStatus = CY_SYS_RES_CAUSE_REG &
 456              		.loc 1 2063 0
 457 0006 1A40     		and	r2, r3
 458              	.LVL22:
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 459              		.loc 1 2064 0
 460 0008 0868     		ldr	r0, [r1]
 461              	.LVL23:
2069:Generated_Source\PSoC4/CyLib.c **** 
 462              		.loc 1 2069 0
 463              		@ sp needed
2064:Generated_Source\PSoC4/CyLib.c ****                   (CY_SYS_RESET_WDT | CY_SYS_RESET_PROTFAULT | CY_SYS_RESET_SW);
 464              		.loc 1 2064 0
 465 000a 1840     		and	r0, r3
 466              	.LVL24:
2066:Generated_Source\PSoC4/CyLib.c **** 
 467              		.loc 1 2066 0
 468 000c 0A60     		str	r2, [r1]
2069:Generated_Source\PSoC4/CyLib.c **** 
 469              		.loc 1 2069 0
 470 000e 7047     		bx	lr
 471              	.L39:
 472              		.align	2
 473              	.L38:
 474 0010 00030B40 		.word	1074463488
 475              		.cfi_endproc
 476              	.LFE16:
 477              		.size	CySysGetResetReason, .-CySysGetResetReason
 478              		.section	.text.CyDisableInts,"ax",%progbits
 479              		.align	1
 480              		.global	CyDisableInts
 481              		.code	16
 482              		.thumb_func
 483              		.type	CyDisableInts, %function
 484              	CyDisableInts:
 485              	.LFB17:
2083:Generated_Source\PSoC4/CyLib.c ****     uint32 intState;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 52


 486              		.loc 1 2083 0
 487              		.cfi_startproc
2090:Generated_Source\PSoC4/CyLib.c **** 
 488              		.loc 1 2090 0
 489 0000 0122     		mov	r2, #1
2087:Generated_Source\PSoC4/CyLib.c **** 
 490              		.loc 1 2087 0
 491 0002 024B     		ldr	r3, .L41
2090:Generated_Source\PSoC4/CyLib.c **** 
 492              		.loc 1 2090 0
 493 0004 5242     		neg	r2, r2
2087:Generated_Source\PSoC4/CyLib.c **** 
 494              		.loc 1 2087 0
 495 0006 1868     		ldr	r0, [r3]
 496              	.LVL25:
2093:Generated_Source\PSoC4/CyLib.c **** 
 497              		.loc 1 2093 0
 498              		@ sp needed
2090:Generated_Source\PSoC4/CyLib.c **** 
 499              		.loc 1 2090 0
 500 0008 1A60     		str	r2, [r3]
2093:Generated_Source\PSoC4/CyLib.c **** 
 501              		.loc 1 2093 0
 502 000a 7047     		bx	lr
 503              	.L42:
 504              		.align	2
 505              	.L41:
 506 000c 80E100E0 		.word	-536813184
 507              		.cfi_endproc
 508              	.LFE17:
 509              		.size	CyDisableInts, .-CyDisableInts
 510              		.section	.text.CyEnableInts,"ax",%progbits
 511              		.align	1
 512              		.global	CyEnableInts
 513              		.code	16
 514              		.thumb_func
 515              		.type	CyEnableInts, %function
 516              	CyEnableInts:
 517              	.LFB18:
2106:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = mask;
 518              		.loc 1 2106 0
 519              		.cfi_startproc
 520              	.LVL26:
2107:Generated_Source\PSoC4/CyLib.c **** }
 521              		.loc 1 2107 0
 522 0000 014B     		ldr	r3, .L44
2108:Generated_Source\PSoC4/CyLib.c **** 
 523              		.loc 1 2108 0
 524              		@ sp needed
2107:Generated_Source\PSoC4/CyLib.c **** }
 525              		.loc 1 2107 0
 526 0002 1860     		str	r0, [r3]
2108:Generated_Source\PSoC4/CyLib.c **** 
 527              		.loc 1 2108 0
 528 0004 7047     		bx	lr
 529              	.L45:
 530 0006 C046     		.align	2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 53


 531              	.L44:
 532 0008 00E100E0 		.word	-536813312
 533              		.cfi_endproc
 534              	.LFE18:
 535              		.size	CyEnableInts, .-CyEnableInts
 536              		.section	.text.CyIntSetSysVector,"ax",%progbits
 537              		.align	1
 538              		.global	CyIntSetSysVector
 539              		.code	16
 540              		.thumb_func
 541              		.type	CyIntSetSysVector, %function
 542              	CyIntSetSysVector:
 543              	.LFB19:
2131:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 544              		.loc 1 2131 0
 545              		.cfi_startproc
 546              	.LVL27:
2135:Generated_Source\PSoC4/CyLib.c **** 
 547              		.loc 1 2135 0
 548 0000 0F28     		cmp	r0, #15
 549 0002 00D9     		bls	.L47
 550              	.LVL28:
 551              	.LBB32:
 552              	.LBB33:
 553              		.loc 1 2376 0
 554              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 555 0004 01BE     		    bkpt    1
 556              	@ 0 "" 2
 557              	.LVL29:
 558              		.code	16
 559              	.L47:
 560              	.LBE33:
 561              	.LBE32:
2138:Generated_Source\PSoC4/CyLib.c **** 
 562              		.loc 1 2138 0
 563 0006 8023     		mov	r3, #128
 564 0008 8000     		lsl	r0, r0, #2
 565              	.LVL30:
 566 000a 9B05     		lsl	r3, r3, #22
 567 000c C318     		add	r3, r0, r3
 568 000e 1868     		ldr	r0, [r3]
 569              	.LVL31:
2144:Generated_Source\PSoC4/CyLib.c **** 
 570              		.loc 1 2144 0
 571              		@ sp needed
2141:Generated_Source\PSoC4/CyLib.c **** 
 572              		.loc 1 2141 0
 573 0010 1960     		str	r1, [r3]
2144:Generated_Source\PSoC4/CyLib.c **** 
 574              		.loc 1 2144 0
 575 0012 7047     		bx	lr
 576              		.cfi_endproc
 577              	.LFE19:
 578              		.size	CyIntSetSysVector, .-CyIntSetSysVector
 579              		.section	.text.CyIntGetSysVector,"ax",%progbits
 580              		.align	1
 581              		.global	CyIntGetSysVector
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 54


 582              		.code	16
 583              		.thumb_func
 584              		.type	CyIntGetSysVector, %function
 585              	CyIntGetSysVector:
 586              	.LFB20:
2165:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 587              		.loc 1 2165 0
 588              		.cfi_startproc
 589              	.LVL32:
2168:Generated_Source\PSoC4/CyLib.c **** 
 590              		.loc 1 2168 0
 591 0000 0F28     		cmp	r0, #15
 592 0002 00D9     		bls	.L49
 593              	.LVL33:
 594              	.LBB34:
 595              	.LBB35:
 596              		.loc 1 2376 0
 597              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 598 0004 01BE     		    bkpt    1
 599              	@ 0 "" 2
 600              	.LVL34:
 601              		.code	16
 602              	.L49:
 603              	.LBE35:
 604              	.LBE34:
2170:Generated_Source\PSoC4/CyLib.c **** }
 605              		.loc 1 2170 0
 606 0006 8023     		mov	r3, #128
 607 0008 8000     		lsl	r0, r0, #2
 608              	.LVL35:
 609 000a 9B05     		lsl	r3, r3, #22
 610 000c C018     		add	r0, r0, r3
 611 000e 0068     		ldr	r0, [r0]
2171:Generated_Source\PSoC4/CyLib.c **** 
 612              		.loc 1 2171 0
 613              		@ sp needed
 614 0010 7047     		bx	lr
 615              		.cfi_endproc
 616              	.LFE20:
 617              		.size	CyIntGetSysVector, .-CyIntGetSysVector
 618              		.section	.text.CyIntSetVector,"ax",%progbits
 619              		.align	1
 620              		.global	CyIntSetVector
 621              		.code	16
 622              		.thumb_func
 623              		.type	CyIntSetVector, %function
 624              	CyIntSetVector:
 625              	.LFB21:
2187:Generated_Source\PSoC4/CyLib.c ****     cyisraddress oldIsr;
 626              		.loc 1 2187 0
 627              		.cfi_startproc
 628              	.LVL36:
2191:Generated_Source\PSoC4/CyLib.c **** 
 629              		.loc 1 2191 0
 630 0000 1F28     		cmp	r0, #31
 631 0002 00D9     		bls	.L51
 632              	.LVL37:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 55


 633              	.LBB36:
 634              	.LBB37:
 635              		.loc 1 2376 0
 636              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 637 0004 01BE     		    bkpt    1
 638              	@ 0 "" 2
 639              	.LVL38:
 640              		.code	16
 641              	.L51:
 642              	.LBE37:
 643              	.LBE36:
2194:Generated_Source\PSoC4/CyLib.c **** 
 644              		.loc 1 2194 0
 645 0006 034B     		ldr	r3, .L52
 646 0008 8000     		lsl	r0, r0, #2
 647              	.LVL39:
 648 000a C318     		add	r3, r0, r3
 649 000c 1868     		ldr	r0, [r3]
 650              	.LVL40:
2200:Generated_Source\PSoC4/CyLib.c **** 
 651              		.loc 1 2200 0
 652              		@ sp needed
2197:Generated_Source\PSoC4/CyLib.c **** 
 653              		.loc 1 2197 0
 654 000e 1960     		str	r1, [r3]
2200:Generated_Source\PSoC4/CyLib.c **** 
 655              		.loc 1 2200 0
 656 0010 7047     		bx	lr
 657              	.L53:
 658 0012 C046     		.align	2
 659              	.L52:
 660 0014 40000020 		.word	536870976
 661              		.cfi_endproc
 662              	.LFE21:
 663              		.size	CyIntSetVector, .-CyIntSetVector
 664              		.section	.text.CyIntGetVector,"ax",%progbits
 665              		.align	1
 666              		.global	CyIntGetVector
 667              		.code	16
 668              		.thumb_func
 669              		.type	CyIntGetVector, %function
 670              	CyIntGetVector:
 671              	.LFB22:
2215:Generated_Source\PSoC4/CyLib.c ****     cyisraddress *ramVectorTable = (cyisraddress *) CY_INT_VECT_TABLE;
 672              		.loc 1 2215 0
 673              		.cfi_startproc
 674              	.LVL41:
2218:Generated_Source\PSoC4/CyLib.c **** 
 675              		.loc 1 2218 0
 676 0000 1F28     		cmp	r0, #31
 677 0002 00D9     		bls	.L55
 678              	.LVL42:
 679              	.LBB38:
 680              	.LBB39:
 681              		.loc 1 2376 0
 682              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 683 0004 01BE     		    bkpt    1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 56


 684              	@ 0 "" 2
 685              	.LVL43:
 686              		.code	16
 687              	.L55:
 688              	.LBE39:
 689              	.LBE38:
2220:Generated_Source\PSoC4/CyLib.c **** }
 690              		.loc 1 2220 0
 691 0006 024B     		ldr	r3, .L56
 692 0008 8000     		lsl	r0, r0, #2
 693              	.LVL44:
 694 000a C018     		add	r0, r0, r3
 695 000c 0068     		ldr	r0, [r0]
2221:Generated_Source\PSoC4/CyLib.c **** 
 696              		.loc 1 2221 0
 697              		@ sp needed
 698 000e 7047     		bx	lr
 699              	.L57:
 700              		.align	2
 701              	.L56:
 702 0010 40000020 		.word	536870976
 703              		.cfi_endproc
 704              	.LFE22:
 705              		.size	CyIntGetVector, .-CyIntGetVector
 706              		.section	.text.CyIntSetPriority,"ax",%progbits
 707              		.align	1
 708              		.global	CyIntSetPriority
 709              		.code	16
 710              		.thumb_func
 711              		.type	CyIntSetPriority, %function
 712              	CyIntSetPriority:
 713              	.LFB23:
2234:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 714              		.loc 1 2234 0
 715              		.cfi_startproc
 716              	.LVL45:
 717 0000 38B5     		push	{r3, r4, r5, lr}
 718              		.cfi_def_cfa_offset 16
 719              		.cfi_offset 3, -16
 720              		.cfi_offset 4, -12
 721              		.cfi_offset 5, -8
 722              		.cfi_offset 14, -4
2234:Generated_Source\PSoC4/CyLib.c ****     uint8 interruptState;
 723              		.loc 1 2234 0
 724 0002 041C     		mov	r4, r0
 725 0004 0D1E     		sub	r5, r1, #0
2239:Generated_Source\PSoC4/CyLib.c ****     CYASSERT(number < CY_NUM_INTERRUPTS);
 726              		.loc 1 2239 0
 727 0006 032D     		cmp	r5, #3
 728 0008 00D9     		bls	.L59
 729              	.LVL46:
 730              	.LBB40:
 731              	.LBB41:
 732              		.loc 1 2376 0
 733              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 734 000a 01BE     		    bkpt    1
 735              	@ 0 "" 2
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 57


 736              	.LVL47:
 737              		.code	16
 738              	.L59:
 739              	.LBE41:
 740              	.LBE40:
2240:Generated_Source\PSoC4/CyLib.c **** 
 741              		.loc 1 2240 0
 742 000c 1F2C     		cmp	r4, #31
 743 000e 00D9     		bls	.L60
 744              	.LVL48:
 745              	.LBB42:
 746              	.LBB43:
 747              		.loc 1 2376 0
 748              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 749 0010 01BE     		    bkpt    1
 750              	@ 0 "" 2
 751              	.LVL49:
 752              		.code	16
 753              	.L60:
 754              	.LBE43:
 755              	.LBE42:
2244:Generated_Source\PSoC4/CyLib.c **** 
 756              		.loc 1 2244 0
 757 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 758              	.LVL50:
2246:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 759              		.loc 1 2246 0
 760 0016 A308     		lsr	r3, r4, #2
 761 0018 074A     		ldr	r2, .L61
 762 001a 9B00     		lsl	r3, r3, #2
 763 001c 9B18     		add	r3, r3, r2
2242:Generated_Source\PSoC4/CyLib.c **** 
 764              		.loc 1 2242 0
 765 001e 0322     		mov	r2, #3
 766 0020 1440     		and	r4, r2
 767              	.LVL51:
 768 0022 9440     		lsl	r4, r4, r2
 769 0024 0634     		add	r4, r4, #6
2247:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 770              		.loc 1 2247 0
 771 0026 A240     		lsl	r2, r2, r4
2248:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 772              		.loc 1 2248 0
 773 0028 A540     		lsl	r5, r5, r4
2246:Generated_Source\PSoC4/CyLib.c ****     value &= (uint32)(~((uint32)(CY_INT_PRIORITY_MASK << shift)));
 774              		.loc 1 2246 0
 775 002a 1968     		ldr	r1, [r3]
 776              	.LVL52:
2252:Generated_Source\PSoC4/CyLib.c **** 
 777              		.loc 1 2252 0
 778              		@ sp needed
2247:Generated_Source\PSoC4/CyLib.c ****     value |= ((uint32)priority << shift);
 779              		.loc 1 2247 0
 780 002c 9143     		bic	r1, r2
 781              	.LVL53:
2248:Generated_Source\PSoC4/CyLib.c ****     CY_INT_PRIORITY_REG(number) = value;
 782              		.loc 1 2248 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 58


 783 002e 2943     		orr	r1, r5
 784              	.LVL54:
2249:Generated_Source\PSoC4/CyLib.c **** 
 785              		.loc 1 2249 0
 786 0030 1960     		str	r1, [r3]
2251:Generated_Source\PSoC4/CyLib.c **** }
 787              		.loc 1 2251 0
 788 0032 FFF7FEFF 		bl	CyExitCriticalSection
 789              	.LVL55:
2252:Generated_Source\PSoC4/CyLib.c **** 
 790              		.loc 1 2252 0
 791 0036 38BD     		pop	{r3, r4, r5, pc}
 792              	.L62:
 793              		.align	2
 794              	.L61:
 795 0038 00E400E0 		.word	-536812544
 796              		.cfi_endproc
 797              	.LFE23:
 798              		.size	CyIntSetPriority, .-CyIntSetPriority
 799              		.section	.text.CyIntGetPriority,"ax",%progbits
 800              		.align	1
 801              		.global	CyIntGetPriority
 802              		.code	16
 803              		.thumb_func
 804              		.type	CyIntGetPriority, %function
 805              	CyIntGetPriority:
 806              	.LFB24:
2268:Generated_Source\PSoC4/CyLib.c ****     uint8 priority;
 807              		.loc 1 2268 0
 808              		.cfi_startproc
 809              	.LVL56:
2271:Generated_Source\PSoC4/CyLib.c **** 
 810              		.loc 1 2271 0
 811 0000 1F28     		cmp	r0, #31
 812 0002 00D9     		bls	.L64
 813              	.LVL57:
 814              	.LBB44:
 815              	.LBB45:
 816              		.loc 1 2376 0
 817              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 818 0004 01BE     		    bkpt    1
 819              	@ 0 "" 2
 820              	.LVL58:
 821              		.code	16
 822              	.L64:
 823              	.LBE45:
 824              	.LBE44:
2273:Generated_Source\PSoC4/CyLib.c **** 
 825              		.loc 1 2273 0
 826 0006 8308     		lsr	r3, r0, #2
 827 0008 064A     		ldr	r2, .L65
 828 000a 9B00     		lsl	r3, r3, #2
 829 000c 9B18     		add	r3, r3, r2
 830 000e 1968     		ldr	r1, [r3]
 831              	.LVL59:
 832 0010 0322     		mov	r2, #3
 833 0012 031C     		mov	r3, r0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 59


 834 0014 1340     		and	r3, r2
 835 0016 9340     		lsl	r3, r3, r2
 836 0018 0633     		add	r3, r3, #6
 837 001a D940     		lsr	r1, r1, r3
 838              	.LVL60:
 839 001c 081C     		mov	r0, r1
 840              	.LVL61:
2276:Generated_Source\PSoC4/CyLib.c **** 
 841              		.loc 1 2276 0
 842              		@ sp needed
2275:Generated_Source\PSoC4/CyLib.c **** }
 843              		.loc 1 2275 0
 844 001e 1040     		and	r0, r2
2276:Generated_Source\PSoC4/CyLib.c **** 
 845              		.loc 1 2276 0
 846 0020 7047     		bx	lr
 847              	.L66:
 848 0022 C046     		.align	2
 849              	.L65:
 850 0024 00E400E0 		.word	-536812544
 851              		.cfi_endproc
 852              	.LFE24:
 853              		.size	CyIntGetPriority, .-CyIntGetPriority
 854              		.section	.text.CyIntEnable,"ax",%progbits
 855              		.align	1
 856              		.global	CyIntEnable
 857              		.code	16
 858              		.thumb_func
 859              		.type	CyIntEnable, %function
 860              	CyIntEnable:
 861              	.LFB25:
2289:Generated_Source\PSoC4/CyLib.c ****     CY_INT_ENABLE_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 862              		.loc 1 2289 0
 863              		.cfi_startproc
 864              	.LVL62:
2290:Generated_Source\PSoC4/CyLib.c **** }
 865              		.loc 1 2290 0
 866 0000 1F23     		mov	r3, #31
 867 0002 1840     		and	r0, r3
 868              	.LVL63:
 869 0004 1E3B     		sub	r3, r3, #30
 870 0006 8340     		lsl	r3, r3, r0
 871 0008 181C     		mov	r0, r3
 872 000a 014B     		ldr	r3, .L68
2291:Generated_Source\PSoC4/CyLib.c **** 
 873              		.loc 1 2291 0
 874              		@ sp needed
2290:Generated_Source\PSoC4/CyLib.c **** }
 875              		.loc 1 2290 0
 876 000c 1860     		str	r0, [r3]
2291:Generated_Source\PSoC4/CyLib.c **** 
 877              		.loc 1 2291 0
 878 000e 7047     		bx	lr
 879              	.L69:
 880              		.align	2
 881              	.L68:
 882 0010 00E100E0 		.word	-536813312
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 60


 883              		.cfi_endproc
 884              	.LFE25:
 885              		.size	CyIntEnable, .-CyIntEnable
 886              		.section	.text.CyIntGetState,"ax",%progbits
 887              		.align	1
 888              		.global	CyIntGetState
 889              		.code	16
 890              		.thumb_func
 891              		.type	CyIntGetState, %function
 892              	CyIntGetState:
 893              	.LFB26:
2307:Generated_Source\PSoC4/CyLib.c ****     /* Get state of interrupt. */
 894              		.loc 1 2307 0
 895              		.cfi_startproc
 896              	.LVL64:
2309:Generated_Source\PSoC4/CyLib.c **** }
 897              		.loc 1 2309 0
 898 0000 1F22     		mov	r2, #31
 899 0002 044B     		ldr	r3, .L71
 900 0004 1040     		and	r0, r2
 901              	.LVL65:
 902 0006 1B68     		ldr	r3, [r3]
2310:Generated_Source\PSoC4/CyLib.c **** 
 903              		.loc 1 2310 0
 904              		@ sp needed
2309:Generated_Source\PSoC4/CyLib.c **** }
 905              		.loc 1 2309 0
 906 0008 C340     		lsr	r3, r3, r0
 907 000a 181C     		mov	r0, r3
 908 000c 0123     		mov	r3, #1
 909 000e 1840     		and	r0, r3
2310:Generated_Source\PSoC4/CyLib.c **** 
 910              		.loc 1 2310 0
 911 0010 7047     		bx	lr
 912              	.L72:
 913 0012 C046     		.align	2
 914              	.L71:
 915 0014 00E100E0 		.word	-536813312
 916              		.cfi_endproc
 917              	.LFE26:
 918              		.size	CyIntGetState, .-CyIntGetState
 919              		.section	.text.CyIntDisable,"ax",%progbits
 920              		.align	1
 921              		.global	CyIntDisable
 922              		.code	16
 923              		.thumb_func
 924              		.type	CyIntDisable, %function
 925              	CyIntDisable:
 926              	.LFB27:
2323:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLEAR_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 927              		.loc 1 2323 0
 928              		.cfi_startproc
 929              	.LVL66:
2324:Generated_Source\PSoC4/CyLib.c **** }
 930              		.loc 1 2324 0
 931 0000 1F23     		mov	r3, #31
 932 0002 1840     		and	r0, r3
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 61


 933              	.LVL67:
 934 0004 1E3B     		sub	r3, r3, #30
 935 0006 8340     		lsl	r3, r3, r0
 936 0008 181C     		mov	r0, r3
 937 000a 014B     		ldr	r3, .L74
2325:Generated_Source\PSoC4/CyLib.c **** 
 938              		.loc 1 2325 0
 939              		@ sp needed
2324:Generated_Source\PSoC4/CyLib.c **** }
 940              		.loc 1 2324 0
 941 000c 1860     		str	r0, [r3]
2325:Generated_Source\PSoC4/CyLib.c **** 
 942              		.loc 1 2325 0
 943 000e 7047     		bx	lr
 944              	.L75:
 945              		.align	2
 946              	.L74:
 947 0010 80E100E0 		.word	-536813184
 948              		.cfi_endproc
 949              	.LFE27:
 950              		.size	CyIntDisable, .-CyIntDisable
 951              		.section	.text.CyIntSetPending,"ax",%progbits
 952              		.align	1
 953              		.global	CyIntSetPending
 954              		.code	16
 955              		.thumb_func
 956              		.type	CyIntSetPending, %function
 957              	CyIntSetPending:
 958              	.LFB28:
2337:Generated_Source\PSoC4/CyLib.c ****     CY_INT_SET_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 959              		.loc 1 2337 0
 960              		.cfi_startproc
 961              	.LVL68:
2338:Generated_Source\PSoC4/CyLib.c **** }
 962              		.loc 1 2338 0
 963 0000 1F23     		mov	r3, #31
 964 0002 1840     		and	r0, r3
 965              	.LVL69:
 966 0004 1E3B     		sub	r3, r3, #30
 967 0006 8340     		lsl	r3, r3, r0
 968 0008 181C     		mov	r0, r3
 969 000a 014B     		ldr	r3, .L77
2339:Generated_Source\PSoC4/CyLib.c **** 
 970              		.loc 1 2339 0
 971              		@ sp needed
2338:Generated_Source\PSoC4/CyLib.c **** }
 972              		.loc 1 2338 0
 973 000c 1860     		str	r0, [r3]
2339:Generated_Source\PSoC4/CyLib.c **** 
 974              		.loc 1 2339 0
 975 000e 7047     		bx	lr
 976              	.L78:
 977              		.align	2
 978              	.L77:
 979 0010 00E200E0 		.word	-536813056
 980              		.cfi_endproc
 981              	.LFE28:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 62


 982              		.size	CyIntSetPending, .-CyIntSetPending
 983              		.section	.text.CyIntClearPending,"ax",%progbits
 984              		.align	1
 985              		.global	CyIntClearPending
 986              		.code	16
 987              		.thumb_func
 988              		.type	CyIntClearPending, %function
 989              	CyIntClearPending:
 990              	.LFB29:
2352:Generated_Source\PSoC4/CyLib.c ****     CY_INT_CLR_PEND_REG = ((uint32) 0x01u << (CY_INT_ENABLE_RANGE_MASK & number));
 991              		.loc 1 2352 0
 992              		.cfi_startproc
 993              	.LVL70:
2353:Generated_Source\PSoC4/CyLib.c **** }
 994              		.loc 1 2353 0
 995 0000 1F23     		mov	r3, #31
 996 0002 1840     		and	r0, r3
 997              	.LVL71:
 998 0004 1E3B     		sub	r3, r3, #30
 999 0006 8340     		lsl	r3, r3, r0
 1000 0008 181C     		mov	r0, r3
 1001 000a 014B     		ldr	r3, .L80
2354:Generated_Source\PSoC4/CyLib.c **** 
 1002              		.loc 1 2354 0
 1003              		@ sp needed
2353:Generated_Source\PSoC4/CyLib.c **** }
 1004              		.loc 1 2353 0
 1005 000c 1860     		str	r0, [r3]
2354:Generated_Source\PSoC4/CyLib.c **** 
 1006              		.loc 1 2354 0
 1007 000e 7047     		bx	lr
 1008              	.L81:
 1009              		.align	2
 1010              	.L80:
 1011 0010 80E200E0 		.word	-536812928
 1012              		.cfi_endproc
 1013              	.LFE29:
 1014              		.size	CyIntClearPending, .-CyIntClearPending
 1015              		.section	.text.CyHalt,"ax",%progbits
 1016              		.align	1
 1017              		.global	CyHalt
 1018              		.code	16
 1019              		.thumb_func
 1020              		.type	CyHalt, %function
 1021              	CyHalt:
 1022              	.LFB30:
2367:Generated_Source\PSoC4/CyLib.c ****     if(0u != reason)
 1023              		.loc 1 2367 0
 1024              		.cfi_startproc
 1025              	.LVL72:
 1026              		.loc 1 2376 0
 1027              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1028 0000 01BE     		    bkpt    1
 1029              	@ 0 "" 2
2377:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
2378:Generated_Source\PSoC4/CyLib.c ****         CYDEV_HALT_CPU;
2379:Generated_Source\PSoC4/CyLib.c ****     #endif  /* (__ARMCC_VERSION) */
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 63


2380:Generated_Source\PSoC4/CyLib.c **** }
 1030              		.loc 1 2380 0
 1031              		.code	16
 1032              		@ sp needed
 1033 0002 7047     		bx	lr
 1034              		.cfi_endproc
 1035              	.LFE30:
 1036              		.size	CyHalt, .-CyHalt
 1037              		.section	.text.CySoftwareReset,"ax",%progbits
 1038              		.align	1
 1039              		.global	CySoftwareReset
 1040              		.code	16
 1041              		.thumb_func
 1042              		.type	CySoftwareReset, %function
 1043              	CySoftwareReset:
 1044              	.LFB31:
2381:Generated_Source\PSoC4/CyLib.c **** 
2382:Generated_Source\PSoC4/CyLib.c **** 
2383:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2384:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySoftwareReset
2385:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2386:Generated_Source\PSoC4/CyLib.c **** *
2387:Generated_Source\PSoC4/CyLib.c **** *  Forces a software reset of the device.
2388:Generated_Source\PSoC4/CyLib.c **** *
2389:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2390:Generated_Source\PSoC4/CyLib.c **** void CySoftwareReset(void)
2391:Generated_Source\PSoC4/CyLib.c **** {
 1045              		.loc 1 2391 0
 1046              		.cfi_startproc
2392:Generated_Source\PSoC4/CyLib.c ****     /***************************************************************************
2393:Generated_Source\PSoC4/CyLib.c ****     * Setting the system reset request bit. The vector key value must be written
2394:Generated_Source\PSoC4/CyLib.c ****     * to the register, otherwise the register write is unpredictable.
2395:Generated_Source\PSoC4/CyLib.c ****     ***************************************************************************/
2396:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_AIRCR_REG = (CY_SYS_AIRCR_REG & (uint32)(~CY_SYS_AIRCR_VECTKEY_MASK)) |
 1047              		.loc 1 2396 0
 1048 0000 034A     		ldr	r2, .L84
2397:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1049              		.loc 1 2397 0
 1050 0002 0449     		ldr	r1, .L84+4
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1051              		.loc 1 2396 0
 1052 0004 1368     		ldr	r3, [r2]
2398:Generated_Source\PSoC4/CyLib.c **** }
 1053              		.loc 1 2398 0
 1054              		@ sp needed
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1055              		.loc 1 2396 0
 1056 0006 9BB2     		uxth	r3, r3
2397:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1057              		.loc 1 2397 0
 1058 0008 0B43     		orr	r3, r1
2396:Generated_Source\PSoC4/CyLib.c ****                             CY_SYS_AIRCR_VECTKEY | CY_SYS_AIRCR_SYSRESETREQ;
 1059              		.loc 1 2396 0
 1060 000a 1360     		str	r3, [r2]
 1061              		.loc 1 2398 0
 1062 000c 7047     		bx	lr
 1063              	.L85:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 64


 1064 000e C046     		.align	2
 1065              	.L84:
 1066 0010 0CED00E0 		.word	-536810228
 1067 0014 0400FA05 		.word	100270084
 1068              		.cfi_endproc
 1069              	.LFE31:
 1070              		.size	CySoftwareReset, .-CySoftwareReset
 1071              		.section	.text.CyDelay,"ax",%progbits
 1072              		.align	1
 1073              		.global	CyDelay
 1074              		.code	16
 1075              		.thumb_func
 1076              		.type	CyDelay, %function
 1077              	CyDelay:
 1078              	.LFB32:
2399:Generated_Source\PSoC4/CyLib.c **** 
2400:Generated_Source\PSoC4/CyLib.c **** 
2401:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2402:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelay
2403:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2404:Generated_Source\PSoC4/CyLib.c **** *
2405:Generated_Source\PSoC4/CyLib.c **** *  Blocks for milliseconds.
2406:Generated_Source\PSoC4/CyLib.c **** *
2407:Generated_Source\PSoC4/CyLib.c **** *  \param milliseconds: number of milliseconds to delay.
2408:Generated_Source\PSoC4/CyLib.c **** *
2409:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2410:Generated_Source\PSoC4/CyLib.c **** void CyDelay(uint32 milliseconds)
2411:Generated_Source\PSoC4/CyLib.c **** {
 1079              		.loc 1 2411 0
 1080              		.cfi_startproc
 1081              	.LVL73:
 1082 0000 10B5     		push	{r4, lr}
 1083              		.cfi_def_cfa_offset 8
 1084              		.cfi_offset 4, -8
 1085              		.cfi_offset 14, -4
 1086 0002 041C     		mov	r4, r0
 1087              	.LVL74:
 1088              	.L87:
2412:Generated_Source\PSoC4/CyLib.c ****     while (milliseconds > CY_DELAY_MS_OVERFLOW)
 1089              		.loc 1 2412 0
 1090 0004 8022     		mov	r2, #128
 1091 0006 074B     		ldr	r3, .L90
 1092 0008 1202     		lsl	r2, r2, #8
 1093 000a 9442     		cmp	r4, r2
 1094 000c 05D9     		bls	.L89
2413:Generated_Source\PSoC4/CyLib.c ****     {
2414:Generated_Source\PSoC4/CyLib.c ****         /* This loop prevents overflow.
2415:Generated_Source\PSoC4/CyLib.c ****          * At 100MHz, milliseconds * cydelayFreqKhz overflows at about 42 seconds
2416:Generated_Source\PSoC4/CyLib.c ****          */
2417:Generated_Source\PSoC4/CyLib.c ****         CyDelayCycles(cydelay32kMs);
 1095              		.loc 1 2417 0
 1096 000e 1868     		ldr	r0, [r3]
 1097 0010 FFF7FEFF 		bl	CyDelayCycles
 1098              	.LVL75:
2418:Generated_Source\PSoC4/CyLib.c ****         milliseconds -= CY_DELAY_MS_OVERFLOW;
 1099              		.loc 1 2418 0
 1100 0014 044B     		ldr	r3, .L90+4
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 65


 1101 0016 E418     		add	r4, r4, r3
 1102              	.LVL76:
 1103 0018 F4E7     		b	.L87
 1104              	.L89:
2419:Generated_Source\PSoC4/CyLib.c ****     }
2420:Generated_Source\PSoC4/CyLib.c **** 
2421:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles(milliseconds * cydelayFreqKhz);
 1105              		.loc 1 2421 0
 1106 001a 5868     		ldr	r0, [r3, #4]
2422:Generated_Source\PSoC4/CyLib.c **** }
 1107              		.loc 1 2422 0
 1108              		@ sp needed
2421:Generated_Source\PSoC4/CyLib.c **** }
 1109              		.loc 1 2421 0
 1110 001c 6043     		mul	r0, r4
 1111 001e FFF7FEFF 		bl	CyDelayCycles
 1112              	.LVL77:
 1113              	.LVL78:
 1114              		.loc 1 2422 0
 1115 0022 10BD     		pop	{r4, pc}
 1116              	.L91:
 1117              		.align	2
 1118              	.L90:
 1119 0024 00000000 		.word	.LANCHOR0
 1120 0028 0080FFFF 		.word	-32768
 1121              		.cfi_endproc
 1122              	.LFE32:
 1123              		.size	CyDelay, .-CyDelay
 1124              		.section	.text.CyDelayUs,"ax",%progbits
 1125              		.align	1
 1126              		.global	CyDelayUs
 1127              		.code	16
 1128              		.thumb_func
 1129              		.type	CyDelayUs, %function
 1130              	CyDelayUs:
 1131              	.LFB33:
2423:Generated_Source\PSoC4/CyLib.c **** 
2424:Generated_Source\PSoC4/CyLib.c **** 
2425:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2426:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayUs
2427:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2428:Generated_Source\PSoC4/CyLib.c **** *  Blocks for microseconds.
2429:Generated_Source\PSoC4/CyLib.c **** *
2430:Generated_Source\PSoC4/CyLib.c **** *  \param microseconds: number of microseconds to delay.
2431:Generated_Source\PSoC4/CyLib.c **** *
2432:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2433:Generated_Source\PSoC4/CyLib.c **** void CyDelayUs(uint16 microseconds)
2434:Generated_Source\PSoC4/CyLib.c **** {
 1132              		.loc 1 2434 0
 1133              		.cfi_startproc
 1134              	.LVL79:
 1135 0000 08B5     		push	{r3, lr}
 1136              		.cfi_def_cfa_offset 8
 1137              		.cfi_offset 3, -8
 1138              		.cfi_offset 14, -4
2435:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1139              		.loc 1 2435 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 66


 1140 0002 034B     		ldr	r3, .L93
2436:Generated_Source\PSoC4/CyLib.c **** }
 1141              		.loc 1 2436 0
 1142              		@ sp needed
2435:Generated_Source\PSoC4/CyLib.c ****     CyDelayCycles((uint32)microseconds * cydelayFreqMhz);
 1143              		.loc 1 2435 0
 1144 0004 1B7A     		ldrb	r3, [r3, #8]
 1145 0006 5843     		mul	r0, r3
 1146              	.LVL80:
 1147 0008 FFF7FEFF 		bl	CyDelayCycles
 1148              	.LVL81:
 1149              		.loc 1 2436 0
 1150 000c 08BD     		pop	{r3, pc}
 1151              	.L94:
 1152 000e C046     		.align	2
 1153              	.L93:
 1154 0010 00000000 		.word	.LANCHOR0
 1155              		.cfi_endproc
 1156              	.LFE33:
 1157              		.size	CyDelayUs, .-CyDelayUs
 1158              		.section	.text.CySysClkWriteImoFreq,"ax",%progbits
 1159              		.align	1
 1160              		.global	CySysClkWriteImoFreq
 1161              		.code	16
 1162              		.thumb_func
 1163              		.type	CySysClkWriteImoFreq, %function
 1164              	CySysClkWriteImoFreq:
 1165              	.LFB7:
 577:Generated_Source\PSoC4/CyLib.c ****         #if (CY_IP_FMLT)
 1166              		.loc 1 577 0
 1167              		.cfi_startproc
 1168              	.LVL82:
 1169 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1170              		.cfi_def_cfa_offset 20
 1171              		.cfi_offset 4, -20
 1172              		.cfi_offset 5, -16
 1173              		.cfi_offset 6, -12
 1174              		.cfi_offset 7, -8
 1175              		.cfi_offset 14, -4
 1176 0002 051C     		mov	r5, r0
 1177 0004 87B0     		sub	sp, sp, #28
 1178              		.cfi_def_cfa_offset 48
 600:Generated_Source\PSoC4/CyLib.c **** 
 1179              		.loc 1 600 0
 1180 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1181              	.LVL83:
 650:Generated_Source\PSoC4/CyLib.c ****         {
 1182              		.loc 1 650 0
 1183 000a EB1E     		sub	r3, r5, #3
 600:Generated_Source\PSoC4/CyLib.c **** 
 1184              		.loc 1 600 0
 1185 000c 0490     		str	r0, [sp, #16]
 1186              	.LVL84:
 650:Generated_Source\PSoC4/CyLib.c ****         {
 1187              		.loc 1 650 0
 1188 000e 0393     		str	r3, [sp, #12]
 1189 0010 2D2B     		cmp	r3, #45
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 67


 1190 0012 5CD8     		bhi	.L96
 652:Generated_Source\PSoC4/CyLib.c ****             {
 1191              		.loc 1 652 0
 1192 0014 314B     		ldr	r3, .L107
 1193 0016 1B78     		ldrb	r3, [r3]
 1194 0018 9D42     		cmp	r5, r3
 1195 001a 04D8     		bhi	.L97
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1196              		.loc 1 654 0
 1197 001c 304B     		ldr	r3, .L107+4
 1198 001e 1C78     		ldrb	r4, [r3]
 655:Generated_Source\PSoC4/CyLib.c ****             }
 1199              		.loc 1 655 0
 1200 0020 304B     		ldr	r3, .L107+8
 654:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO0_REG;
 1201              		.loc 1 654 0
 1202 0022 E4B2     		uxtb	r4, r4
 1203              	.LVL85:
 1204 0024 1EE0     		b	.L105
 1205              	.LVL86:
 1206              	.L97:
 657:Generated_Source\PSoC4/CyLib.c ****             {
 1207              		.loc 1 657 0
 1208 0026 304B     		ldr	r3, .L107+12
 1209 0028 1B78     		ldrb	r3, [r3]
 1210 002a 9D42     		cmp	r5, r3
 1211 002c 04D8     		bhi	.L99
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1212              		.loc 1 659 0
 1213 002e 2F4B     		ldr	r3, .L107+16
 1214 0030 1C78     		ldrb	r4, [r3]
 660:Generated_Source\PSoC4/CyLib.c ****             }
 1215              		.loc 1 660 0
 1216 0032 2F4B     		ldr	r3, .L107+20
 659:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO1_REG;
 1217              		.loc 1 659 0
 1218 0034 E4B2     		uxtb	r4, r4
 1219              	.LVL87:
 1220 0036 15E0     		b	.L105
 1221              	.LVL88:
 1222              	.L99:
 662:Generated_Source\PSoC4/CyLib.c ****             {
 1223              		.loc 1 662 0
 1224 0038 2E4B     		ldr	r3, .L107+24
 1225 003a 1B78     		ldrb	r3, [r3]
 1226 003c 9D42     		cmp	r5, r3
 1227 003e 04D8     		bhi	.L100
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1228              		.loc 1 664 0
 1229 0040 2D4B     		ldr	r3, .L107+28
 1230 0042 1C78     		ldrb	r4, [r3]
 665:Generated_Source\PSoC4/CyLib.c ****             }
 1231              		.loc 1 665 0
 1232 0044 2D4B     		ldr	r3, .L107+32
 664:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO2_REG;
 1233              		.loc 1 664 0
 1234 0046 E4B2     		uxtb	r4, r4
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 68


 1235              	.LVL89:
 1236 0048 0CE0     		b	.L105
 1237              	.LVL90:
 1238              	.L100:
 667:Generated_Source\PSoC4/CyLib.c ****             {
 1239              		.loc 1 667 0
 1240 004a 2D4B     		ldr	r3, .L107+36
 1241 004c 1B78     		ldrb	r3, [r3]
 1242 004e 9D42     		cmp	r5, r3
 1243 0050 04D8     		bhi	.L101
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1244              		.loc 1 669 0
 1245 0052 2C4B     		ldr	r3, .L107+40
 1246 0054 1C78     		ldrb	r4, [r3]
 670:Generated_Source\PSoC4/CyLib.c ****             }
 1247              		.loc 1 670 0
 1248 0056 2C4B     		ldr	r3, .L107+44
 669:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO3_REG;
 1249              		.loc 1 669 0
 1250 0058 E4B2     		uxtb	r4, r4
 1251              	.LVL91:
 1252 005a 03E0     		b	.L105
 1253              	.LVL92:
 1254              	.L101:
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1255              		.loc 1 674 0
 1256 005c 2B4B     		ldr	r3, .L107+48
 1257 005e 1C78     		ldrb	r4, [r3]
 675:Generated_Source\PSoC4/CyLib.c ****             }
 1258              		.loc 1 675 0
 1259 0060 2B4B     		ldr	r3, .L107+52
 674:Generated_Source\PSoC4/CyLib.c ****                 bgTrim5 = CY_SFLASH_IMO_TMPCO4_REG;
 1260              		.loc 1 674 0
 1261 0062 E4B2     		uxtb	r4, r4
 1262              	.LVL93:
 1263              	.L105:
 675:Generated_Source\PSoC4/CyLib.c ****             }
 1264              		.loc 1 675 0
 1265 0064 1B78     		ldrb	r3, [r3]
 679:Generated_Source\PSoC4/CyLib.c **** 
 1266              		.loc 1 679 0
 1267 0066 039A     		ldr	r2, [sp, #12]
 675:Generated_Source\PSoC4/CyLib.c ****             }
 1268              		.loc 1 675 0
 1269 0068 DBB2     		uxtb	r3, r3
 1270 006a 0193     		str	r3, [sp, #4]
 1271              	.LVL94:
 679:Generated_Source\PSoC4/CyLib.c **** 
 1272              		.loc 1 679 0
 1273 006c 294B     		ldr	r3, .L107+56
 1274 006e 2A4F     		ldr	r7, .L107+60
 1275 0070 9A5C     		ldrb	r2, [r3, r2]
 1276 0072 0593     		str	r3, [sp, #20]
 1277 0074 0292     		str	r2, [sp, #8]
 1278              	.LVL95:
 691:Generated_Source\PSoC4/CyLib.c ****             {
 1279              		.loc 1 691 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 69


 1280 0076 2F2A     		cmp	r2, #47
 1281 0078 04D9     		bls	.L102
 691:Generated_Source\PSoC4/CyLib.c ****             {
 1282              		.loc 1 691 0 is_stmt 0 discriminator 1
 1283 007a 2A2D     		cmp	r5, #42
 1284 007c 02D9     		bls	.L102
 694:Generated_Source\PSoC4/CyLib.c ****                                                                      CY_SYS_CLK_IMO_FREQ_TABLE_OFFS
 1285              		.loc 1 694 0 is_stmt 1
 1286 007e 1926     		mov	r6, #25
 1287 0080 3E60     		str	r6, [r7]
 1288 0082 08E0     		b	.L106
 1289              	.L102:
 703:Generated_Source\PSoC4/CyLib.c ****             }
 1290              		.loc 1 703 0
 1291 0084 3F23     		mov	r3, #63
 1292 0086 3E68     		ldr	r6, [r7]
 1293 0088 1E40     		and	r6, r3
 1294              	.LVL96:
 715:Generated_Source\PSoC4/CyLib.c ****             {
 1295              		.loc 1 715 0
 1296 008a 029B     		ldr	r3, [sp, #8]
 1297 008c B342     		cmp	r3, r6
 1298 008e 05D2     		bcs	.L103
 718:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1299              		.loc 1 718 0
 1300 0090 214B     		ldr	r3, .L107+60
 1301 0092 029A     		ldr	r2, [sp, #8]
 1302 0094 1A60     		str	r2, [r3]
 1303              	.LVL97:
 1304              	.L106:
 719:Generated_Source\PSoC4/CyLib.c ****             }
 1305              		.loc 1 719 0
 1306 0096 0520     		mov	r0, #5
 1307 0098 FFF7FEFF 		bl	CyDelayCycles
 1308              	.LVL98:
 1309              	.L103:
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1310              		.loc 1 738 0
 1311 009c 1C4B     		ldr	r3, .L107+52
 742:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1312              		.loc 1 742 0
 1313 009e 1F4A     		ldr	r2, .L107+64
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1314              		.loc 1 738 0
 1315 00a0 ED18     		add	r5, r5, r3
 1316              	.LVL99:
 1317 00a2 2B78     		ldrb	r3, [r5]
 745:Generated_Source\PSoC4/CyLib.c **** 
 1318              		.loc 1 745 0
 1319 00a4 0520     		mov	r0, #5
 738:Generated_Source\PSoC4/CyLib.c ****             #endif  /* (CY_IP_IMO_TRIMMABLE_BY_USB) */
 1320              		.loc 1 738 0
 1321 00a6 DBB2     		uxtb	r3, r3
 1322              	.LVL100:
 742:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM4_REG  = bgTrim4;
 1323              		.loc 1 742 0
 1324 00a8 1360     		str	r3, [r2]
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 70


 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1325              		.loc 1 743 0
 1326 00aa 1D4B     		ldr	r3, .L107+68
 1327              	.LVL101:
 744:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1328              		.loc 1 744 0
 1329 00ac 019A     		ldr	r2, [sp, #4]
 1330              	.LVL102:
 743:Generated_Source\PSoC4/CyLib.c ****             CY_PWR_BG_TRIM5_REG  = bgTrim5;
 1331              		.loc 1 743 0
 1332 00ae 1C60     		str	r4, [r3]
 1333              	.LVL103:
 744:Generated_Source\PSoC4/CyLib.c ****             CyDelayUs(CY_SYS_CLK_IMO_TRIM_TIMEOUT_US);
 1334              		.loc 1 744 0
 1335 00b0 1C4B     		ldr	r3, .L107+72
 1336 00b2 1A60     		str	r2, [r3]
 745:Generated_Source\PSoC4/CyLib.c **** 
 1337              		.loc 1 745 0
 1338 00b4 FFF7FEFF 		bl	CyDelayUs
 1339              	.LVL104:
 747:Generated_Source\PSoC4/CyLib.c ****             {
 1340              		.loc 1 747 0
 1341 00b8 029B     		ldr	r3, [sp, #8]
 1342 00ba B342     		cmp	r3, r6
 1343 00bc 08D9     		bls	.L104
 750:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1344              		.loc 1 750 0
 1345 00be 059B     		ldr	r3, [sp, #20]
 1346 00c0 039A     		ldr	r2, [sp, #12]
 751:Generated_Source\PSoC4/CyLib.c ****             }
 1347              		.loc 1 751 0
 1348 00c2 0520     		mov	r0, #5
 750:Generated_Source\PSoC4/CyLib.c ****                 CyDelayCycles(CY_SYS_CLK_IMO_FREQ_TIMEOUT_CYCLES);
 1349              		.loc 1 750 0
 1350 00c4 9B5C     		ldrb	r3, [r3, r2]
 1351 00c6 3B60     		str	r3, [r7]
 751:Generated_Source\PSoC4/CyLib.c ****             }
 1352              		.loc 1 751 0
 1353 00c8 FFF7FEFF 		bl	CyDelayCycles
 1354              	.LVL105:
 1355 00cc 00E0     		b	.L104
 1356              	.LVL106:
 1357              	.L96:
 1358              	.LBB46:
 1359              	.LBB47:
2376:Generated_Source\PSoC4/CyLib.c ****     #elif defined(__C51__)
 1360              		.loc 1 2376 0
 1361              	@ 2376 "Generated_Source\PSoC4\CyLib.c" 1
 1362 00ce 01BE     		    bkpt    1
 1363              	@ 0 "" 2
 1364              	.LVL107:
 1365              		.code	16
 1366              	.L104:
 1367              	.LBE47:
 1368              	.LBE46:
 776:Generated_Source\PSoC4/CyLib.c ****     }
 1369              		.loc 1 776 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 71


 1370 00d0 0498     		ldr	r0, [sp, #16]
 1371 00d2 FFF7FEFF 		bl	CyExitCriticalSection
 1372              	.LVL108:
 777:Generated_Source\PSoC4/CyLib.c **** 
 1373              		.loc 1 777 0
 1374 00d6 07B0     		add	sp, sp, #28
 1375              		@ sp needed
 1376 00d8 F0BD     		pop	{r4, r5, r6, r7, pc}
 1377              	.L108:
 1378 00da C046     		.align	2
 1379              	.L107:
 1380 00dc 40F3FF0F 		.word	268432192
 1381 00e0 41F3FF0F 		.word	268432193
 1382 00e4 42F3FF0F 		.word	268432194
 1383 00e8 43F3FF0F 		.word	268432195
 1384 00ec 44F3FF0F 		.word	268432196
 1385 00f0 45F3FF0F 		.word	268432197
 1386 00f4 46F3FF0F 		.word	268432198
 1387 00f8 47F3FF0F 		.word	268432199
 1388 00fc 48F3FF0F 		.word	268432200
 1389 0100 49F3FF0F 		.word	268432201
 1390 0104 4AF3FF0F 		.word	268432202
 1391 0108 4BF3FF0F 		.word	268432203
 1392 010c 4CF3FF0F 		.word	268432204
 1393 0110 4DF3FF0F 		.word	268432205
 1394 0114 00000000 		.word	.LANCHOR1
 1395 0118 2CFF0B40 		.word	1074528044
 1396 011c 28FF0B40 		.word	1074528040
 1397 0120 1CFF0B40 		.word	1074528028
 1398 0124 20FF0B40 		.word	1074528032
 1399              		.cfi_endproc
 1400              	.LFE7:
 1401              		.size	CySysClkWriteImoFreq, .-CySysClkWriteImoFreq
 1402              		.section	.text.CySysClkEcoStart,"ax",%progbits
 1403              		.align	1
 1404              		.global	CySysClkEcoStart
 1405              		.code	16
 1406              		.thumb_func
 1407              		.type	CySysClkEcoStart, %function
 1408              	CySysClkEcoStart:
 1409              	.LFB8:
 979:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1410              		.loc 1 979 0
 1411              		.cfi_startproc
 1412              	.LVL109:
 984:Generated_Source\PSoC4/CyLib.c **** 
 1413              		.loc 1 984 0
 1414 0000 0121     		mov	r1, #1
 1415 0002 0F4A     		ldr	r2, .L114
 979:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1416              		.loc 1 979 0
 1417 0004 10B5     		push	{r4, lr}
 1418              		.cfi_def_cfa_offset 8
 1419              		.cfi_offset 4, -8
 1420              		.cfi_offset 14, -4
 984:Generated_Source\PSoC4/CyLib.c **** 
 1421              		.loc 1 984 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 72


 1422 0006 1368     		ldr	r3, [r2]
 979:Generated_Source\PSoC4/CyLib.c ****         cystatus returnStatus = CYRET_SUCCESS;
 1423              		.loc 1 979 0
 1424 0008 041C     		mov	r4, r0
 984:Generated_Source\PSoC4/CyLib.c **** 
 1425              		.loc 1 984 0
 1426 000a 0B43     		orr	r3, r1
 990:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 1427              		.loc 1 990 0
 1428 000c 8021     		mov	r1, #128
 984:Generated_Source\PSoC4/CyLib.c **** 
 1429              		.loc 1 984 0
 1430 000e 1360     		str	r3, [r2]
 987:Generated_Source\PSoC4/CyLib.c **** 
 1431              		.loc 1 987 0
 1432 0010 0C4A     		ldr	r2, .L114+4
 1433 0012 0D4B     		ldr	r3, .L114+8
 990:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 1434              		.loc 1 990 0
 1435 0014 0902     		lsl	r1, r1, #8
 987:Generated_Source\PSoC4/CyLib.c **** 
 1436              		.loc 1 987 0
 1437 0016 1A60     		str	r2, [r3]
 990:Generated_Source\PSoC4/CyLib.c ****         #else /* CY_IP_WCO_SRSSV2 */
 1438              		.loc 1 990 0
 1439 0018 0C4A     		ldr	r2, .L114+12
 1440 001a 1368     		ldr	r3, [r2]
 1441 001c 0B43     		orr	r3, r1
 1442 001e 1360     		str	r3, [r2]
 997:Generated_Source\PSoC4/CyLib.c ****         {
 1443              		.loc 1 997 0
 1444 0020 0028     		cmp	r0, #0
 1445 0022 01D1     		bne	.L113
 1446              	.LVL110:
 1447              	.L112:
 980:Generated_Source\PSoC4/CyLib.c **** 
 1448              		.loc 1 980 0
 1449 0024 0020     		mov	r0, #0
 1450 0026 0AE0     		b	.L111
 1451              	.L113:
1003:Generated_Source\PSoC4/CyLib.c **** 
 1452              		.loc 1 1003 0
 1453 0028 0120     		mov	r0, #1
 1454 002a FFF7FEFF 		bl	CyDelayUs
 1455              	.LVL111:
 1456              	.LBB48:
 1457              	.LBB49:
1066:Generated_Source\PSoC4/CyLib.c ****         #else
 1458              		.loc 1 1066 0
 1459 002e 084B     		ldr	r3, .L114+16
 1460 0030 1B68     		ldr	r3, [r3]
 1461              	.LVL112:
 1462              	.LBE49:
 1463              	.LBE48:
1005:Generated_Source\PSoC4/CyLib.c ****                 {
 1464              		.loc 1 1005 0
 1465 0032 DB07     		lsl	r3, r3, #31
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 73


 1466 0034 F6D4     		bmi	.L112
 1467              	.LVL113:
1001:Generated_Source\PSoC4/CyLib.c ****             {
 1468              		.loc 1 1001 0
 1469 0036 013C     		sub	r4, r4, #1
 1470              	.LVL114:
 1471 0038 002C     		cmp	r4, #0
 1472 003a F5D1     		bne	.L113
 999:Generated_Source\PSoC4/CyLib.c **** 
 1473              		.loc 1 999 0
 1474 003c 1020     		mov	r0, #16
 1475              	.L111:
 1476              	.LVL115:
1015:Generated_Source\PSoC4/CyLib.c **** 
 1477              		.loc 1 1015 0
 1478              		@ sp needed
 1479              	.LVL116:
 1480 003e 10BD     		pop	{r4, pc}
 1481              	.L115:
 1482              		.align	2
 1483              	.L114:
 1484 0040 60F02E40 		.word	1076818016
 1485 0044 02200000 		.word	8194
 1486 0048 78002E40 		.word	1076756600
 1487 004c 10002E40 		.word	1076756496
 1488 0050 0C002E40 		.word	1076756492
 1489              		.cfi_endproc
 1490              	.LFE8:
 1491              		.size	CySysClkEcoStart, .-CySysClkEcoStart
 1492              		.section	.text.CySysLvdEnable,"ax",%progbits
 1493              		.align	1
 1494              		.global	CySysLvdEnable
 1495              		.code	16
 1496              		.thumb_func
 1497              		.type	CySysLvdEnable, %function
 1498              	CySysLvdEnable:
 1499              	.LFB12:
1970:Generated_Source\PSoC4/CyLib.c ****         /* Prevent propagating a false interrupt */
 1500              		.loc 1 1970 0
 1501              		.cfi_startproc
 1502              	.LVL117:
 1503 0000 38B5     		push	{r3, r4, r5, lr}
 1504              		.cfi_def_cfa_offset 16
 1505              		.cfi_offset 3, -16
 1506              		.cfi_offset 4, -12
 1507              		.cfi_offset 5, -8
 1508              		.cfi_offset 14, -4
1972:Generated_Source\PSoC4/CyLib.c **** 
 1509              		.loc 1 1972 0
 1510 0002 0225     		mov	r5, #2
1976:Generated_Source\PSoC4/CyLib.c **** 
 1511              		.loc 1 1976 0
 1512 0004 1E21     		mov	r1, #30
1972:Generated_Source\PSoC4/CyLib.c **** 
 1513              		.loc 1 1972 0
 1514 0006 0C4C     		ldr	r4, .L117
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 74


 1515              		.loc 1 1975 0
 1516 0008 0C4A     		ldr	r2, .L117+4
1972:Generated_Source\PSoC4/CyLib.c **** 
 1517              		.loc 1 1972 0
 1518 000a 2368     		ldr	r3, [r4]
1976:Generated_Source\PSoC4/CyLib.c **** 
 1519              		.loc 1 1976 0
 1520 000c 4000     		lsl	r0, r0, #1
 1521              	.LVL118:
1972:Generated_Source\PSoC4/CyLib.c **** 
 1522              		.loc 1 1972 0
 1523 000e AB43     		bic	r3, r5
 1524 0010 2360     		str	r3, [r4]
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1525              		.loc 1 1975 0
 1526 0012 1368     		ldr	r3, [r2]
1976:Generated_Source\PSoC4/CyLib.c **** 
 1527              		.loc 1 1976 0
 1528 0014 0840     		and	r0, r1
1975:Generated_Source\PSoC4/CyLib.c ****                 ((threshold << CY_LVD_PWR_VMON_CONFIG_LVD_SEL_SHIFT) & CY_LVD_PWR_VMON_CONFIG_LVD_S
 1529              		.loc 1 1975 0
 1530 0016 8B43     		bic	r3, r1
 1531 0018 1843     		orr	r0, r3
 1532 001a 1060     		str	r0, [r2]
1982:Generated_Source\PSoC4/CyLib.c **** 
 1533              		.loc 1 1982 0
 1534 001c FA20     		mov	r0, #250
1979:Generated_Source\PSoC4/CyLib.c **** 
 1535              		.loc 1 1979 0
 1536 001e 1368     		ldr	r3, [r2]
 1537 0020 1D39     		sub	r1, r1, #29
 1538 0022 0B43     		orr	r3, r1
 1539 0024 1360     		str	r3, [r2]
1982:Generated_Source\PSoC4/CyLib.c **** 
 1540              		.loc 1 1982 0
 1541 0026 8000     		lsl	r0, r0, #2
 1542 0028 FFF7FEFF 		bl	CyDelayUs
 1543              	.LVL119:
 1544              	.LBB50:
 1545              	.LBB51:
2035:Generated_Source\PSoC4/CyLib.c ****     }
 1546              		.loc 1 2035 0
 1547 002c 044B     		ldr	r3, .L117+8
 1548              	.LBE51:
 1549              	.LBE50:
1989:Generated_Source\PSoC4/CyLib.c **** 
 1550              		.loc 1 1989 0
 1551              		@ sp needed
 1552              	.LBB53:
 1553              	.LBB52:
2035:Generated_Source\PSoC4/CyLib.c ****     }
 1554              		.loc 1 2035 0
 1555 002e 1D60     		str	r5, [r3]
 1556              	.LBE52:
 1557              	.LBE53:
1988:Generated_Source\PSoC4/CyLib.c ****     }
 1558              		.loc 1 1988 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 75


 1559 0030 2368     		ldr	r3, [r4]
 1560 0032 1D43     		orr	r5, r3
 1561 0034 2560     		str	r5, [r4]
1989:Generated_Source\PSoC4/CyLib.c **** 
 1562              		.loc 1 1989 0
 1563 0036 38BD     		pop	{r3, r4, r5, pc}
 1564              	.L118:
 1565              		.align	2
 1566              	.L117:
 1567 0038 08000B40 		.word	1074462728
 1568 003c 18000B40 		.word	1074462744
 1569 0040 04000B40 		.word	1074462724
 1570              		.cfi_endproc
 1571              	.LFE12:
 1572              		.size	CySysLvdEnable, .-CySysLvdEnable
 1573              		.global	__aeabi_uidiv
 1574              		.section	.text.CyDelayFreq,"ax",%progbits
 1575              		.align	1
 1576              		.global	CyDelayFreq
 1577              		.code	16
 1578              		.thumb_func
 1579              		.type	CyDelayFreq, %function
 1580              	CyDelayFreq:
 1581              	.LFB34:
2437:Generated_Source\PSoC4/CyLib.c **** 
2438:Generated_Source\PSoC4/CyLib.c **** 
2439:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2440:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyDelayFreq
2441:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2442:Generated_Source\PSoC4/CyLib.c **** *  Sets clock frequency for CyDelay.
2443:Generated_Source\PSoC4/CyLib.c **** *
2444:Generated_Source\PSoC4/CyLib.c **** *  \param freq: Frequency of bus clock in Hertz.
2445:Generated_Source\PSoC4/CyLib.c **** *
2446:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2447:Generated_Source\PSoC4/CyLib.c **** void CyDelayFreq(uint32 freq)
2448:Generated_Source\PSoC4/CyLib.c **** {
 1582              		.loc 1 2448 0
 1583              		.cfi_startproc
 1584              	.LVL120:
 1585 0000 38B5     		push	{r3, r4, r5, lr}
 1586              		.cfi_def_cfa_offset 16
 1587              		.cfi_offset 3, -16
 1588              		.cfi_offset 4, -12
 1589              		.cfi_offset 5, -8
 1590              		.cfi_offset 14, -4
 1591 0002 0C4C     		ldr	r4, .L122
2449:Generated_Source\PSoC4/CyLib.c ****     if (freq != 0u)
 1592              		.loc 1 2449 0
 1593 0004 0028     		cmp	r0, #0
 1594 0006 01D0     		beq	.L120
2450:Generated_Source\PSoC4/CyLib.c ****     {
2451:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = freq;
 1595              		.loc 1 2451 0
 1596 0008 E060     		str	r0, [r4, #12]
 1597 000a 01E0     		b	.L121
 1598              	.L120:
2452:Generated_Source\PSoC4/CyLib.c ****     }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 76


2453:Generated_Source\PSoC4/CyLib.c ****     else
2454:Generated_Source\PSoC4/CyLib.c ****     {
2455:Generated_Source\PSoC4/CyLib.c ****         cydelayFreqHz = CYDEV_BCLK__SYSCLK__HZ;
 1599              		.loc 1 2455 0
 1600 000c 0A4B     		ldr	r3, .L122+4
 1601 000e E360     		str	r3, [r4, #12]
 1602              	.L121:
2456:Generated_Source\PSoC4/CyLib.c ****     }
2457:Generated_Source\PSoC4/CyLib.c **** 
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqMhz = (uint8)((cydelayFreqHz + CY_DELAY_1M_MINUS_1_THRESHOLD) / CY_DELAY_1M_THRESHOL
 1603              		.loc 1 2458 0
 1604 0010 E568     		ldr	r5, [r4, #12]
 1605 0012 0A4B     		ldr	r3, .L122+8
 1606 0014 0A49     		ldr	r1, .L122+12
 1607 0016 E818     		add	r0, r5, r3
 1608              	.LVL121:
 1609 0018 FFF7FEFF 		bl	__aeabi_uidiv
 1610              	.LVL122:
2459:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1611              		.loc 1 2459 0
 1612 001c FA21     		mov	r1, #250
 1613 001e 094B     		ldr	r3, .L122+16
2458:Generated_Source\PSoC4/CyLib.c ****     cydelayFreqKhz = (cydelayFreqHz + CY_DELAY_1K_MINUS_1_THRESHOLD) / CY_DELAY_1K_THRESHOLD;
 1614              		.loc 1 2458 0
 1615 0020 2072     		strb	r0, [r4, #8]
 1616              		.loc 1 2459 0
 1617 0022 8900     		lsl	r1, r1, #2
 1618 0024 E818     		add	r0, r5, r3
 1619 0026 FFF7FEFF 		bl	__aeabi_uidiv
 1620              	.LVL123:
 1621 002a 6060     		str	r0, [r4, #4]
2460:Generated_Source\PSoC4/CyLib.c ****     cydelay32kMs   = CY_DELAY_MS_OVERFLOW * cydelayFreqKhz;
 1622              		.loc 1 2460 0
 1623 002c C003     		lsl	r0, r0, #15
 1624 002e 2060     		str	r0, [r4]
2461:Generated_Source\PSoC4/CyLib.c **** }
 1625              		.loc 1 2461 0
 1626              		@ sp needed
 1627 0030 38BD     		pop	{r3, r4, r5, pc}
 1628              	.L123:
 1629 0032 C046     		.align	2
 1630              	.L122:
 1631 0034 00000000 		.word	.LANCHOR0
 1632 0038 0024F400 		.word	16000000
 1633 003c 3F420F00 		.word	999999
 1634 0040 40420F00 		.word	1000000
 1635 0044 E7030000 		.word	999
 1636              		.cfi_endproc
 1637              	.LFE34:
 1638              		.size	CyDelayFreq, .-CyDelayFreq
 1639              		.section	.text.CySysTickInit,"ax",%progbits
 1640              		.align	1
 1641              		.global	CySysTickInit
 1642              		.code	16
 1643              		.thumb_func
 1644              		.type	CySysTickInit, %function
 1645              	CySysTickInit:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 77


 1646              	.LFB36:
2462:Generated_Source\PSoC4/CyLib.c **** 
2463:Generated_Source\PSoC4/CyLib.c **** 
2464:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2465:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTick_Start
2466:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2467:Generated_Source\PSoC4/CyLib.c **** *
2468:Generated_Source\PSoC4/CyLib.c **** *  Starts the system timer (SysTick): configures SysTick to generate interrupt
2469:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms and enables the interrupt.
2470:Generated_Source\PSoC4/CyLib.c **** *
2471:Generated_Source\PSoC4/CyLib.c **** *  There are components (LIN, CapSense Gesture) that relies on the default 
2472:Generated_Source\PSoC4/CyLib.c **** *  interval (1 ms). And that changing the interval will negatively impact 
2473:Generated_Source\PSoC4/CyLib.c **** *  their functionality.
2474:Generated_Source\PSoC4/CyLib.c **** *
2475:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2476:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2477:Generated_Source\PSoC4/CyLib.c **** *
2478:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2479:Generated_Source\PSoC4/CyLib.c **** void CySysTickStart(void)
2480:Generated_Source\PSoC4/CyLib.c **** {
2481:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
2482:Generated_Source\PSoC4/CyLib.c ****     {
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInit();
2484:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
2485:Generated_Source\PSoC4/CyLib.c ****     }
2486:Generated_Source\PSoC4/CyLib.c **** 
2487:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnable();
2488:Generated_Source\PSoC4/CyLib.c **** }
2489:Generated_Source\PSoC4/CyLib.c **** 
2490:Generated_Source\PSoC4/CyLib.c **** 
2491:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2492:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickInit
2493:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2494:Generated_Source\PSoC4/CyLib.c **** *
2495:Generated_Source\PSoC4/CyLib.c **** *  Initializes the callback addresses with pointers to NULL, associates the
2496:Generated_Source\PSoC4/CyLib.c **** *  SysTick system vector with the function that is responsible for calling
2497:Generated_Source\PSoC4/CyLib.c **** *  registered callback functions, configures SysTick timer to generate interrupt
2498:Generated_Source\PSoC4/CyLib.c **** *  every 1 ms.
2499:Generated_Source\PSoC4/CyLib.c **** *
2500:Generated_Source\PSoC4/CyLib.c **** *  The 1 ms interrupt interval is configured based on the frequency determined
2501:Generated_Source\PSoC4/CyLib.c **** *  by PSoC Creator at build time. If System clock frequency is changed in
2502:Generated_Source\PSoC4/CyLib.c **** *  runtime, the CyDelayFreq() with the appropriate parameter should be called.
2503:Generated_Source\PSoC4/CyLib.c **** *
2504:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2505:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2506:Generated_Source\PSoC4/CyLib.c **** *
2507:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2508:Generated_Source\PSoC4/CyLib.c **** void CySysTickInit(void)
2509:Generated_Source\PSoC4/CyLib.c **** {
 1647              		.loc 1 2509 0
 1648              		.cfi_startproc
 1649              	.LVL124:
 1650 0000 10B5     		push	{r4, lr}
 1651              		.cfi_def_cfa_offset 8
 1652              		.cfi_offset 4, -8
 1653              		.cfi_offset 14, -4
2510:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 78


2511:Generated_Source\PSoC4/CyLib.c **** 
2512:Generated_Source\PSoC4/CyLib.c ****     for (i = 0u; i<CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2513:Generated_Source\PSoC4/CyLib.c ****     {
2514:Generated_Source\PSoC4/CyLib.c ****         CySysTickCallbacks[i] = (void *) 0;
 1654              		.loc 1 2514 0
 1655 0002 0024     		mov	r4, #0
 1656              	.LBB68:
 1657              	.LBB69:
 1658              	.LBB70:
2515:Generated_Source\PSoC4/CyLib.c ****     }
2516:Generated_Source\PSoC4/CyLib.c **** 
2517:Generated_Source\PSoC4/CyLib.c ****     (void) CyIntSetSysVector(CY_INT_SYSTICK_IRQN, &CySysTickServiceCallbacks);
2518:Generated_Source\PSoC4/CyLib.c **** 
2519:Generated_Source\PSoC4/CyLib.c ****     #if(CY_SYSTICK_LFCLK_SOURCE)
2520:Generated_Source\PSoC4/CyLib.c ****         CySysTickSetClockSource(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK);
2521:Generated_Source\PSoC4/CyLib.c ****     #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2522:Generated_Source\PSoC4/CyLib.c **** 
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickSetReload(cydelayFreqHz/1000u);
2524:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
2525:Generated_Source\PSoC4/CyLib.c ****     CyIntEnable(CY_INT_SYSTICK_IRQN);
2526:Generated_Source\PSoC4/CyLib.c **** }
2527:Generated_Source\PSoC4/CyLib.c **** 
2528:Generated_Source\PSoC4/CyLib.c **** 
2529:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2530:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnable
2531:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2532:Generated_Source\PSoC4/CyLib.c **** *
2533:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick timer and its interrupt.
2534:Generated_Source\PSoC4/CyLib.c **** *
2535:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2536:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2537:Generated_Source\PSoC4/CyLib.c **** *
2538:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2539:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnable(void)
2540:Generated_Source\PSoC4/CyLib.c **** {
2541:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
2542:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
2543:Generated_Source\PSoC4/CyLib.c **** }
2544:Generated_Source\PSoC4/CyLib.c **** 
2545:Generated_Source\PSoC4/CyLib.c **** 
2546:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2547:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickStop
2548:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2549:Generated_Source\PSoC4/CyLib.c **** *
2550:Generated_Source\PSoC4/CyLib.c **** *  Stops the system timer (SysTick).
2551:Generated_Source\PSoC4/CyLib.c **** *
2552:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2553:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2554:Generated_Source\PSoC4/CyLib.c **** *
2555:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2556:Generated_Source\PSoC4/CyLib.c **** void CySysTickStop(void)
2557:Generated_Source\PSoC4/CyLib.c **** {
2558:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
2559:Generated_Source\PSoC4/CyLib.c **** }
2560:Generated_Source\PSoC4/CyLib.c **** 
2561:Generated_Source\PSoC4/CyLib.c **** 
2562:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 79


2563:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickEnableInterrupt
2564:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2565:Generated_Source\PSoC4/CyLib.c **** *
2566:Generated_Source\PSoC4/CyLib.c **** *  Enables the SysTick interrupt.
2567:Generated_Source\PSoC4/CyLib.c **** *
2568:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2569:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2570:Generated_Source\PSoC4/CyLib.c **** *
2571:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2572:Generated_Source\PSoC4/CyLib.c **** void CySysTickEnableInterrupt(void)
2573:Generated_Source\PSoC4/CyLib.c **** {
2574:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
2575:Generated_Source\PSoC4/CyLib.c **** }
2576:Generated_Source\PSoC4/CyLib.c **** 
2577:Generated_Source\PSoC4/CyLib.c **** 
2578:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2579:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickDisableInterrupt
2580:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2581:Generated_Source\PSoC4/CyLib.c **** *
2582:Generated_Source\PSoC4/CyLib.c **** *  Disables the SysTick interrupt.
2583:Generated_Source\PSoC4/CyLib.c **** *
2584:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2585:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set
2586:Generated_Source\PSoC4/CyLib.c **** *
2587:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2588:Generated_Source\PSoC4/CyLib.c **** void CySysTickDisableInterrupt(void)
2589:Generated_Source\PSoC4/CyLib.c **** {
2590:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
2591:Generated_Source\PSoC4/CyLib.c **** }
2592:Generated_Source\PSoC4/CyLib.c **** 
2593:Generated_Source\PSoC4/CyLib.c **** 
2594:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2595:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetReload
2596:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2597:Generated_Source\PSoC4/CyLib.c **** *
2598:Generated_Source\PSoC4/CyLib.c **** *  Sets value the counter is set to on startup and after it reaches zero. This
2599:Generated_Source\PSoC4/CyLib.c **** *  function do not change or reset current sysTick counter value, so it should
2600:Generated_Source\PSoC4/CyLib.c **** *  be cleared using CySysTickClear() API.
2601:Generated_Source\PSoC4/CyLib.c **** *
2602:Generated_Source\PSoC4/CyLib.c **** *  \param value: Valid range [0x0-0x00FFFFFF]. Counter reset value
2603:Generated_Source\PSoC4/CyLib.c **** *
2604:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2605:Generated_Source\PSoC4/CyLib.c **** void CySysTickSetReload(uint32 value)
2606:Generated_Source\PSoC4/CyLib.c **** {
2607:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
2608:Generated_Source\PSoC4/CyLib.c **** }
2609:Generated_Source\PSoC4/CyLib.c **** 
2610:Generated_Source\PSoC4/CyLib.c **** 
2611:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2612:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetReload
2613:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2614:Generated_Source\PSoC4/CyLib.c **** *
2615:Generated_Source\PSoC4/CyLib.c **** *  Gets value the counter is set to on startup and after it reaches zero.
2616:Generated_Source\PSoC4/CyLib.c **** *
2617:Generated_Source\PSoC4/CyLib.c **** * \return
2618:Generated_Source\PSoC4/CyLib.c **** *  Counter reset value.
2619:Generated_Source\PSoC4/CyLib.c **** *
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 80


2620:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2621:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetReload(void)
2622:Generated_Source\PSoC4/CyLib.c **** {
2623:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
2624:Generated_Source\PSoC4/CyLib.c **** }
2625:Generated_Source\PSoC4/CyLib.c **** 
2626:Generated_Source\PSoC4/CyLib.c **** 
2627:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2628:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetValue
2629:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2630:Generated_Source\PSoC4/CyLib.c **** *
2631:Generated_Source\PSoC4/CyLib.c **** *  Gets current SysTick counter value.
2632:Generated_Source\PSoC4/CyLib.c **** *
2633:Generated_Source\PSoC4/CyLib.c **** * \return
2634:Generated_Source\PSoC4/CyLib.c **** *  Current SysTick counter value
2635:Generated_Source\PSoC4/CyLib.c **** *
2636:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2637:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetValue(void)
2638:Generated_Source\PSoC4/CyLib.c **** {
2639:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
2640:Generated_Source\PSoC4/CyLib.c **** }
2641:Generated_Source\PSoC4/CyLib.c **** 
2642:Generated_Source\PSoC4/CyLib.c **** 
2643:Generated_Source\PSoC4/CyLib.c **** #if(CY_SYSTICK_LFCLK_SOURCE)
2644:Generated_Source\PSoC4/CyLib.c ****     /*******************************************************************************
2645:Generated_Source\PSoC4/CyLib.c ****     * Function Name: CySysTickSetClockSource
2646:Generated_Source\PSoC4/CyLib.c ****     ****************************************************************************//**
2647:Generated_Source\PSoC4/CyLib.c ****     *
2648:Generated_Source\PSoC4/CyLib.c ****     *  Sets the clock source for the SysTick counter.
2649:Generated_Source\PSoC4/CyLib.c ****     *
2650:Generated_Source\PSoC4/CyLib.c ****     *  Clears SysTick count flag if it was set. If clock source is not ready this
2651:Generated_Source\PSoC4/CyLib.c ****     *  function call will have no effect. After changing clock source to the low
2652:Generated_Source\PSoC4/CyLib.c ****     *  frequency clock the counter and reload register values will remain unchanged
2653:Generated_Source\PSoC4/CyLib.c ****     *  so time to the interrupt will be significantly longer and vice versa.
2654:Generated_Source\PSoC4/CyLib.c ****     *
2655:Generated_Source\PSoC4/CyLib.c ****     *  The changing of SysTick clock source and\or its frequency will change 
2656:Generated_Source\PSoC4/CyLib.c ****     *  the interrupt interval and that CySysTickSetReload() should be 
2657:Generated_Source\PSoC4/CyLib.c ****     *  called to compensate this change.    
2658:Generated_Source\PSoC4/CyLib.c ****     *
2659:Generated_Source\PSoC4/CyLib.c ****     *  The function is not available on PSoC 4000, PSoC 4100, and PSoC 42000
2660:Generated_Source\PSoC4/CyLib.c ****     *  devices. The SysTick timer clocked by the System clock on these devices.
2661:Generated_Source\PSoC4/CyLib.c ****     *
2662:Generated_Source\PSoC4/CyLib.c ****     *  \param clockSource Clock source for SysTick counter
2663:Generated_Source\PSoC4/CyLib.c ****     *         Define                     Clock Source
2664:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_SYSCLK     SysTick is clocked by CPU clock.
2665:Generated_Source\PSoC4/CyLib.c ****     *   CY_SYS_SYST_CSR_CLK_SRC_LFCLK      SysTick is clocked by the low frequency
2666:Generated_Source\PSoC4/CyLib.c ****     *                                      clock. (ILO 100 KHz for PSoC 5LP, and
2667:Generated_Source\PSoC4/CyLib.c ****     *                                      LFCLK for PSoC 4).
2668:Generated_Source\PSoC4/CyLib.c ****     *******************************************************************************/
2669:Generated_Source\PSoC4/CyLib.c ****     void CySysTickSetClockSource(uint32 clockSource)
2670:Generated_Source\PSoC4/CyLib.c ****     {
2671:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
2672:Generated_Source\PSoC4/CyLib.c ****         {
2673:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG |= (uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SYST_CSR_CLK_S
 1659              		.loc 1 2673 0
 1660 0004 0421     		mov	r1, #4
 1661              	.LBE70:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 81


 1662              	.LBE69:
 1663              	.LBE68:
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1664              		.loc 1 2514 0
 1665 0006 0E4B     		ldr	r3, .L125
 1666              	.LBB75:
 1667              	.LBB76:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1668              		.loc 1 2141 0
 1669 0008 0E4A     		ldr	r2, .L125+4
 1670              	.LBE76:
 1671              	.LBE75:
2514:Generated_Source\PSoC4/CyLib.c ****     }
 1672              		.loc 1 2514 0
 1673 000a 1C60     		str	r4, [r3]
 1674              	.LVL125:
 1675 000c DC60     		str	r4, [r3, #12]
 1676 000e 5C60     		str	r4, [r3, #4]
 1677              	.LVL126:
 1678 0010 9C60     		str	r4, [r3, #8]
 1679              	.LVL127:
 1680 0012 1C61     		str	r4, [r3, #16]
 1681              	.LVL128:
 1682              	.LBB79:
 1683              	.LBB77:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1684              		.loc 1 2141 0
 1685 0014 0C4B     		ldr	r3, .L125+8
 1686              	.LVL129:
 1687              	.LBE77:
 1688              	.LBE79:
2526:Generated_Source\PSoC4/CyLib.c **** 
 1689              		.loc 1 2526 0
 1690              		@ sp needed
 1691              	.LBB80:
 1692              	.LBB78:
2141:Generated_Source\PSoC4/CyLib.c **** 
 1693              		.loc 1 2141 0
 1694 0016 1A60     		str	r2, [r3]
 1695              	.LVL130:
 1696              	.LBE78:
 1697              	.LBE80:
 1698              	.LBB81:
 1699              	.LBB73:
 1700              	.LBB71:
 1701              		.loc 1 2673 0
 1702 0018 0C4A     		ldr	r2, .L125+12
 1703 001a 1368     		ldr	r3, [r2]
 1704 001c 0B43     		orr	r3, r1
 1705              	.LBE71:
 1706              	.LBE73:
 1707              	.LBE81:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1708              		.loc 1 2523 0
 1709 001e FA21     		mov	r1, #250
 1710              	.LBB82:
 1711              	.LBB74:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 82


 1712              	.LBB72:
 1713              		.loc 1 2673 0
 1714 0020 1360     		str	r3, [r2]
 1715              	.LBE72:
 1716              	.LBE74:
 1717              	.LBE82:
2523:Generated_Source\PSoC4/CyLib.c ****     CySysTickClear();
 1718              		.loc 1 2523 0
 1719 0022 0B4B     		ldr	r3, .L125+16
 1720 0024 8900     		lsl	r1, r1, #2
 1721 0026 D868     		ldr	r0, [r3, #12]
 1722 0028 FFF7FEFF 		bl	__aeabi_uidiv
 1723              	.LVL131:
 1724              	.LBB83:
 1725              	.LBB84:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1726              		.loc 1 2290 0
 1727 002c 8022     		mov	r2, #128
 1728              	.LBE84:
 1729              	.LBE83:
 1730              	.LBB87:
 1731              	.LBB88:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1732              		.loc 1 2607 0
 1733 002e 094B     		ldr	r3, .L125+20
 1734              	.LBE88:
 1735              	.LBE87:
 1736              	.LBB90:
 1737              	.LBB85:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1738              		.loc 1 2290 0
 1739 0030 1202     		lsl	r2, r2, #8
 1740              	.LBE85:
 1741              	.LBE90:
 1742              	.LBB91:
 1743              	.LBB89:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1744              		.loc 1 2607 0
 1745 0032 1860     		str	r0, [r3]
 1746              	.LBE89:
 1747              	.LBE91:
 1748              	.LBB92:
 1749              	.LBB93:
2674:Generated_Source\PSoC4/CyLib.c ****         }
2675:Generated_Source\PSoC4/CyLib.c ****         else
2676:Generated_Source\PSoC4/CyLib.c ****         {
2677:Generated_Source\PSoC4/CyLib.c ****             CY_SYS_SYST_CSR_REG &= ((uint32) ~((uint32)(CY_SYS_SYST_CSR_CLK_SRC_SYSCLK << CY_SYS_SY
2678:Generated_Source\PSoC4/CyLib.c ****         }
2679:Generated_Source\PSoC4/CyLib.c ****     }
2680:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
2681:Generated_Source\PSoC4/CyLib.c **** 
2682:Generated_Source\PSoC4/CyLib.c **** 
2683:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2684:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCountFlag
2685:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2686:Generated_Source\PSoC4/CyLib.c **** *
2687:Generated_Source\PSoC4/CyLib.c **** *  The count flag is set once SysTick counter reaches zero.
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 83


2688:Generated_Source\PSoC4/CyLib.c **** *  The flag cleared on read.
2689:Generated_Source\PSoC4/CyLib.c **** *
2690:Generated_Source\PSoC4/CyLib.c **** * \return
2691:Generated_Source\PSoC4/CyLib.c ****     *  Returns non-zero value if flag is set, otherwise zero is returned.
2692:Generated_Source\PSoC4/CyLib.c **** *
2693:Generated_Source\PSoC4/CyLib.c **** *
2694:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
2695:Generated_Source\PSoC4/CyLib.c **** *  Clears SysTick count flag if it was set.
2696:Generated_Source\PSoC4/CyLib.c **** *
2697:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2698:Generated_Source\PSoC4/CyLib.c **** uint32 CySysTickGetCountFlag(void)
2699:Generated_Source\PSoC4/CyLib.c **** {
2700:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
2701:Generated_Source\PSoC4/CyLib.c **** }
2702:Generated_Source\PSoC4/CyLib.c **** 
2703:Generated_Source\PSoC4/CyLib.c **** 
2704:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2705:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickClear
2706:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2707:Generated_Source\PSoC4/CyLib.c **** *
2708:Generated_Source\PSoC4/CyLib.c **** *  Clears the SysTick counter for well-defined startup.
2709:Generated_Source\PSoC4/CyLib.c **** *
2710:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2711:Generated_Source\PSoC4/CyLib.c **** void CySysTickClear(void)
2712:Generated_Source\PSoC4/CyLib.c **** {
2713:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 1750              		.loc 1 2713 0
 1751 0034 084B     		ldr	r3, .L125+24
 1752 0036 1C60     		str	r4, [r3]
 1753              	.LVL132:
 1754              	.LBE93:
 1755              	.LBE92:
 1756              	.LBB94:
 1757              	.LBB86:
2290:Generated_Source\PSoC4/CyLib.c **** }
 1758              		.loc 1 2290 0
 1759 0038 084B     		ldr	r3, .L125+28
 1760 003a 1A60     		str	r2, [r3]
 1761              	.LBE86:
 1762              	.LBE94:
2526:Generated_Source\PSoC4/CyLib.c **** 
 1763              		.loc 1 2526 0
 1764 003c 10BD     		pop	{r4, pc}
 1765              	.L126:
 1766 003e C046     		.align	2
 1767              	.L125:
 1768 0040 00000000 		.word	.LANCHOR2
 1769 0044 00000000 		.word	CySysTickServiceCallbacks
 1770 0048 3C000020 		.word	536870972
 1771 004c 10E000E0 		.word	-536813552
 1772 0050 00000000 		.word	.LANCHOR0
 1773 0054 14E000E0 		.word	-536813548
 1774 0058 18E000E0 		.word	-536813544
 1775 005c 00E100E0 		.word	-536813312
 1776              		.cfi_endproc
 1777              	.LFE36:
 1778              		.size	CySysTickInit, .-CySysTickInit
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 84


 1779              		.section	.text.CySysTickStop,"ax",%progbits
 1780              		.align	1
 1781              		.global	CySysTickStop
 1782              		.code	16
 1783              		.thumb_func
 1784              		.type	CySysTickStop, %function
 1785              	CySysTickStop:
 1786              	.LFB38:
2557:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE));
 1787              		.loc 1 2557 0
 1788              		.cfi_startproc
2558:Generated_Source\PSoC4/CyLib.c **** }
 1789              		.loc 1 2558 0
 1790 0000 0121     		mov	r1, #1
 1791 0002 024A     		ldr	r2, .L128
2559:Generated_Source\PSoC4/CyLib.c **** 
 1792              		.loc 1 2559 0
 1793              		@ sp needed
2558:Generated_Source\PSoC4/CyLib.c **** }
 1794              		.loc 1 2558 0
 1795 0004 1368     		ldr	r3, [r2]
 1796 0006 8B43     		bic	r3, r1
 1797 0008 1360     		str	r3, [r2]
2559:Generated_Source\PSoC4/CyLib.c **** 
 1798              		.loc 1 2559 0
 1799 000a 7047     		bx	lr
 1800              	.L129:
 1801              		.align	2
 1802              	.L128:
 1803 000c 10E000E0 		.word	-536813552
 1804              		.cfi_endproc
 1805              	.LFE38:
 1806              		.size	CySysTickStop, .-CySysTickStop
 1807              		.section	.text.CySysTickEnableInterrupt,"ax",%progbits
 1808              		.align	1
 1809              		.global	CySysTickEnableInterrupt
 1810              		.code	16
 1811              		.thumb_func
 1812              		.type	CySysTickEnableInterrupt, %function
 1813              	CySysTickEnableInterrupt:
 1814              	.LFB39:
2573:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE_INT;
 1815              		.loc 1 2573 0
 1816              		.cfi_startproc
2574:Generated_Source\PSoC4/CyLib.c **** }
 1817              		.loc 1 2574 0
 1818 0000 0221     		mov	r1, #2
 1819 0002 024A     		ldr	r2, .L131
2575:Generated_Source\PSoC4/CyLib.c **** 
 1820              		.loc 1 2575 0
 1821              		@ sp needed
2574:Generated_Source\PSoC4/CyLib.c **** }
 1822              		.loc 1 2574 0
 1823 0004 1368     		ldr	r3, [r2]
 1824 0006 0B43     		orr	r3, r1
 1825 0008 1360     		str	r3, [r2]
2575:Generated_Source\PSoC4/CyLib.c **** 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 85


 1826              		.loc 1 2575 0
 1827 000a 7047     		bx	lr
 1828              	.L132:
 1829              		.align	2
 1830              	.L131:
 1831 000c 10E000E0 		.word	-536813552
 1832              		.cfi_endproc
 1833              	.LFE39:
 1834              		.size	CySysTickEnableInterrupt, .-CySysTickEnableInterrupt
 1835              		.section	.text.CySysTickEnable,"ax",%progbits
 1836              		.align	1
 1837              		.global	CySysTickEnable
 1838              		.code	16
 1839              		.thumb_func
 1840              		.type	CySysTickEnable, %function
 1841              	CySysTickEnable:
 1842              	.LFB37:
2540:Generated_Source\PSoC4/CyLib.c ****     CySysTickEnableInterrupt();
 1843              		.loc 1 2540 0
 1844              		.cfi_startproc
 1845 0000 08B5     		push	{r3, lr}
 1846              		.cfi_def_cfa_offset 8
 1847              		.cfi_offset 3, -8
 1848              		.cfi_offset 14, -4
2541:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG |= CY_SYS_SYST_CSR_ENABLE;
 1849              		.loc 1 2541 0
 1850 0002 FFF7FEFF 		bl	CySysTickEnableInterrupt
 1851              	.LVL133:
2542:Generated_Source\PSoC4/CyLib.c **** }
 1852              		.loc 1 2542 0
 1853 0006 0121     		mov	r1, #1
 1854 0008 024A     		ldr	r2, .L134
2543:Generated_Source\PSoC4/CyLib.c **** 
 1855              		.loc 1 2543 0
 1856              		@ sp needed
2542:Generated_Source\PSoC4/CyLib.c **** }
 1857              		.loc 1 2542 0
 1858 000a 1368     		ldr	r3, [r2]
 1859 000c 0B43     		orr	r3, r1
 1860 000e 1360     		str	r3, [r2]
2543:Generated_Source\PSoC4/CyLib.c **** 
 1861              		.loc 1 2543 0
 1862 0010 08BD     		pop	{r3, pc}
 1863              	.L135:
 1864 0012 C046     		.align	2
 1865              	.L134:
 1866 0014 10E000E0 		.word	-536813552
 1867              		.cfi_endproc
 1868              	.LFE37:
 1869              		.size	CySysTickEnable, .-CySysTickEnable
 1870              		.section	.text.CySysTickStart,"ax",%progbits
 1871              		.align	1
 1872              		.global	CySysTickStart
 1873              		.code	16
 1874              		.thumb_func
 1875              		.type	CySysTickStart, %function
 1876              	CySysTickStart:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 86


 1877              	.LFB35:
2480:Generated_Source\PSoC4/CyLib.c ****     if (0u == CySysTickInitVar)
 1878              		.loc 1 2480 0
 1879              		.cfi_startproc
 1880 0000 10B5     		push	{r4, lr}
 1881              		.cfi_def_cfa_offset 8
 1882              		.cfi_offset 4, -8
 1883              		.cfi_offset 14, -4
2481:Generated_Source\PSoC4/CyLib.c ****     {
 1884              		.loc 1 2481 0
 1885 0002 054C     		ldr	r4, .L138
 1886 0004 6369     		ldr	r3, [r4, #20]
 1887 0006 002B     		cmp	r3, #0
 1888 0008 03D1     		bne	.L137
2483:Generated_Source\PSoC4/CyLib.c ****         CySysTickInitVar = 1u;
 1889              		.loc 1 2483 0
 1890 000a FFF7FEFF 		bl	CySysTickInit
 1891              	.LVL134:
2484:Generated_Source\PSoC4/CyLib.c ****     }
 1892              		.loc 1 2484 0
 1893 000e 0123     		mov	r3, #1
 1894 0010 6361     		str	r3, [r4, #20]
 1895              	.L137:
2487:Generated_Source\PSoC4/CyLib.c **** }
 1896              		.loc 1 2487 0
 1897 0012 FFF7FEFF 		bl	CySysTickEnable
 1898              	.LVL135:
2488:Generated_Source\PSoC4/CyLib.c **** 
 1899              		.loc 1 2488 0
 1900              		@ sp needed
 1901 0016 10BD     		pop	{r4, pc}
 1902              	.L139:
 1903              		.align	2
 1904              	.L138:
 1905 0018 00000000 		.word	.LANCHOR2
 1906              		.cfi_endproc
 1907              	.LFE35:
 1908              		.size	CySysTickStart, .-CySysTickStart
 1909              		.section	.text.CySysTickDisableInterrupt,"ax",%progbits
 1910              		.align	1
 1911              		.global	CySysTickDisableInterrupt
 1912              		.code	16
 1913              		.thumb_func
 1914              		.type	CySysTickDisableInterrupt, %function
 1915              	CySysTickDisableInterrupt:
 1916              	.LFB40:
2589:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CSR_REG &= ((uint32) ~(CY_SYS_SYST_CSR_ENABLE_INT));
 1917              		.loc 1 2589 0
 1918              		.cfi_startproc
2590:Generated_Source\PSoC4/CyLib.c **** }
 1919              		.loc 1 2590 0
 1920 0000 0221     		mov	r1, #2
 1921 0002 024A     		ldr	r2, .L141
2591:Generated_Source\PSoC4/CyLib.c **** 
 1922              		.loc 1 2591 0
 1923              		@ sp needed
2590:Generated_Source\PSoC4/CyLib.c **** }
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 87


 1924              		.loc 1 2590 0
 1925 0004 1368     		ldr	r3, [r2]
 1926 0006 8B43     		bic	r3, r1
 1927 0008 1360     		str	r3, [r2]
2591:Generated_Source\PSoC4/CyLib.c **** 
 1928              		.loc 1 2591 0
 1929 000a 7047     		bx	lr
 1930              	.L142:
 1931              		.align	2
 1932              	.L141:
 1933 000c 10E000E0 		.word	-536813552
 1934              		.cfi_endproc
 1935              	.LFE40:
 1936              		.size	CySysTickDisableInterrupt, .-CySysTickDisableInterrupt
 1937              		.section	.text.CySysTickSetReload,"ax",%progbits
 1938              		.align	1
 1939              		.global	CySysTickSetReload
 1940              		.code	16
 1941              		.thumb_func
 1942              		.type	CySysTickSetReload, %function
 1943              	CySysTickSetReload:
 1944              	.LFB41:
2606:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_RVR_REG = (value & CY_SYS_SYST_RVR_CNT_MASK);
 1945              		.loc 1 2606 0
 1946              		.cfi_startproc
 1947              	.LVL136:
2607:Generated_Source\PSoC4/CyLib.c **** }
 1948              		.loc 1 2607 0
 1949 0000 024B     		ldr	r3, .L144
 1950 0002 0002     		lsl	r0, r0, #8
 1951              	.LVL137:
 1952 0004 000A     		lsr	r0, r0, #8
 1953 0006 1860     		str	r0, [r3]
2608:Generated_Source\PSoC4/CyLib.c **** 
 1954              		.loc 1 2608 0
 1955              		@ sp needed
 1956 0008 7047     		bx	lr
 1957              	.L145:
 1958 000a C046     		.align	2
 1959              	.L144:
 1960 000c 14E000E0 		.word	-536813548
 1961              		.cfi_endproc
 1962              	.LFE41:
 1963              		.size	CySysTickSetReload, .-CySysTickSetReload
 1964              		.section	.text.CySysTickGetReload,"ax",%progbits
 1965              		.align	1
 1966              		.global	CySysTickGetReload
 1967              		.code	16
 1968              		.thumb_func
 1969              		.type	CySysTickGetReload, %function
 1970              	CySysTickGetReload:
 1971              	.LFB42:
2622:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_RVR_REG & CY_SYS_SYST_RVR_CNT_MASK);
 1972              		.loc 1 2622 0
 1973              		.cfi_startproc
2623:Generated_Source\PSoC4/CyLib.c **** }
 1974              		.loc 1 2623 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 88


 1975 0000 024B     		ldr	r3, .L147
2624:Generated_Source\PSoC4/CyLib.c **** 
 1976              		.loc 1 2624 0
 1977              		@ sp needed
2623:Generated_Source\PSoC4/CyLib.c **** }
 1978              		.loc 1 2623 0
 1979 0002 1868     		ldr	r0, [r3]
 1980 0004 0002     		lsl	r0, r0, #8
 1981 0006 000A     		lsr	r0, r0, #8
2624:Generated_Source\PSoC4/CyLib.c **** 
 1982              		.loc 1 2624 0
 1983 0008 7047     		bx	lr
 1984              	.L148:
 1985 000a C046     		.align	2
 1986              	.L147:
 1987 000c 14E000E0 		.word	-536813548
 1988              		.cfi_endproc
 1989              	.LFE42:
 1990              		.size	CySysTickGetReload, .-CySysTickGetReload
 1991              		.section	.text.CySysTickGetValue,"ax",%progbits
 1992              		.align	1
 1993              		.global	CySysTickGetValue
 1994              		.code	16
 1995              		.thumb_func
 1996              		.type	CySysTickGetValue, %function
 1997              	CySysTickGetValue:
 1998              	.LFB43:
2638:Generated_Source\PSoC4/CyLib.c ****     return(CY_SYS_SYST_CVR_REG & CY_SYS_SYST_CVR_CNT_MASK);
 1999              		.loc 1 2638 0
 2000              		.cfi_startproc
2639:Generated_Source\PSoC4/CyLib.c **** }
 2001              		.loc 1 2639 0
 2002 0000 024B     		ldr	r3, .L150
2640:Generated_Source\PSoC4/CyLib.c **** 
 2003              		.loc 1 2640 0
 2004              		@ sp needed
2639:Generated_Source\PSoC4/CyLib.c **** }
 2005              		.loc 1 2639 0
 2006 0002 1868     		ldr	r0, [r3]
 2007 0004 0002     		lsl	r0, r0, #8
 2008 0006 000A     		lsr	r0, r0, #8
2640:Generated_Source\PSoC4/CyLib.c **** 
 2009              		.loc 1 2640 0
 2010 0008 7047     		bx	lr
 2011              	.L151:
 2012 000a C046     		.align	2
 2013              	.L150:
 2014 000c 18E000E0 		.word	-536813544
 2015              		.cfi_endproc
 2016              	.LFE43:
 2017              		.size	CySysTickGetValue, .-CySysTickGetValue
 2018              		.section	.text.CySysTickSetClockSource,"ax",%progbits
 2019              		.align	1
 2020              		.global	CySysTickSetClockSource
 2021              		.code	16
 2022              		.thumb_func
 2023              		.type	CySysTickSetClockSource, %function
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 89


 2024              	CySysTickSetClockSource:
 2025              	.LFB44:
2670:Generated_Source\PSoC4/CyLib.c ****         if (clockSource == CY_SYS_SYST_CSR_CLK_SRC_SYSCLK)
 2026              		.loc 1 2670 0
 2027              		.cfi_startproc
 2028              	.LVL138:
 2029 0000 044B     		ldr	r3, .L156
 2030 0002 0421     		mov	r1, #4
 2031              	.LBB97:
 2032              	.LBB98:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 2033              		.loc 1 2673 0
 2034 0004 1A68     		ldr	r2, [r3]
 2035              	.LBE98:
 2036              	.LBE97:
2671:Generated_Source\PSoC4/CyLib.c ****         {
 2037              		.loc 1 2671 0
 2038 0006 0128     		cmp	r0, #1
 2039 0008 01D1     		bne	.L153
 2040              	.LVL139:
 2041              	.LBB100:
 2042              	.LBB99:
2673:Generated_Source\PSoC4/CyLib.c ****         }
 2043              		.loc 1 2673 0
 2044 000a 0A43     		orr	r2, r1
 2045 000c 00E0     		b	.L155
 2046              	.LVL140:
 2047              	.L153:
 2048              	.LBE99:
 2049              	.LBE100:
2677:Generated_Source\PSoC4/CyLib.c ****         }
 2050              		.loc 1 2677 0
 2051 000e 8A43     		bic	r2, r1
 2052              	.L155:
 2053 0010 1A60     		str	r2, [r3]
2679:Generated_Source\PSoC4/CyLib.c **** #endif /* (CY_SYSTICK_LFCLK_SOURCE) */
 2054              		.loc 1 2679 0
 2055              		@ sp needed
 2056 0012 7047     		bx	lr
 2057              	.L157:
 2058              		.align	2
 2059              	.L156:
 2060 0014 10E000E0 		.word	-536813552
 2061              		.cfi_endproc
 2062              	.LFE44:
 2063              		.size	CySysTickSetClockSource, .-CySysTickSetClockSource
 2064              		.section	.text.CySysTickGetCountFlag,"ax",%progbits
 2065              		.align	1
 2066              		.global	CySysTickGetCountFlag
 2067              		.code	16
 2068              		.thumb_func
 2069              		.type	CySysTickGetCountFlag, %function
 2070              	CySysTickGetCountFlag:
 2071              	.LFB45:
2699:Generated_Source\PSoC4/CyLib.c ****     return ((CY_SYS_SYST_CSR_REG>>CY_SYS_SYST_CSR_COUNTFLAG_SHIFT) & 0x01u);
 2072              		.loc 1 2699 0
 2073              		.cfi_startproc
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 90


2700:Generated_Source\PSoC4/CyLib.c **** }
 2074              		.loc 1 2700 0
 2075 0000 024B     		ldr	r3, .L159
2701:Generated_Source\PSoC4/CyLib.c **** 
 2076              		.loc 1 2701 0
 2077              		@ sp needed
2700:Generated_Source\PSoC4/CyLib.c **** }
 2078              		.loc 1 2700 0
 2079 0002 1868     		ldr	r0, [r3]
 2080 0004 C003     		lsl	r0, r0, #15
 2081 0006 C00F     		lsr	r0, r0, #31
2701:Generated_Source\PSoC4/CyLib.c **** 
 2082              		.loc 1 2701 0
 2083 0008 7047     		bx	lr
 2084              	.L160:
 2085 000a C046     		.align	2
 2086              	.L159:
 2087 000c 10E000E0 		.word	-536813552
 2088              		.cfi_endproc
 2089              	.LFE45:
 2090              		.size	CySysTickGetCountFlag, .-CySysTickGetCountFlag
 2091              		.section	.text.CySysTickServiceCallbacks,"ax",%progbits
 2092              		.align	1
 2093              		.code	16
 2094              		.thumb_func
 2095              		.type	CySysTickServiceCallbacks, %function
 2096              	CySysTickServiceCallbacks:
 2097              	.LFB49:
2714:Generated_Source\PSoC4/CyLib.c **** }
2715:Generated_Source\PSoC4/CyLib.c **** 
2716:Generated_Source\PSoC4/CyLib.c **** 
2717:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2718:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickSetCallback
2719:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2720:Generated_Source\PSoC4/CyLib.c **** *
2721:Generated_Source\PSoC4/CyLib.c **** *  This function allows up to five user-defined interrupt service routine
2722:Generated_Source\PSoC4/CyLib.c **** *  functions to be associated with the SysTick interrupt. These are specified
2723:Generated_Source\PSoC4/CyLib.c **** *  through the use of pointers to the function.
2724:Generated_Source\PSoC4/CyLib.c **** *
2725:Generated_Source\PSoC4/CyLib.c **** *  To set a custom callback function without the overhead of the system provided
2726:Generated_Source\PSoC4/CyLib.c **** *  one, use CyIntSetSysVector(CY_INT_SYSTICK_IRQN, cyisraddress <address>),
2727:Generated_Source\PSoC4/CyLib.c **** *  where <address> is address of the custom defined interrupt service routine.
2728:Generated_Source\PSoC4/CyLib.c **** *  Note: a custom callback function overrides the system defined callback
2729:Generated_Source\PSoC4/CyLib.c **** *  functions.
2730:Generated_Source\PSoC4/CyLib.c **** *
2731:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of the callback function addresses to be set. The valid
2732:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2733:Generated_Source\PSoC4/CyLib.c **** *
2734:Generated_Source\PSoC4/CyLib.c **** *  void(*CallbackFunction(void): A pointer to the function that will be
2735:Generated_Source\PSoC4/CyLib.c **** *                                associated with the SysTick ISR for the
2736:Generated_Source\PSoC4/CyLib.c **** *                                specified number.
2737:Generated_Source\PSoC4/CyLib.c **** *
2738:Generated_Source\PSoC4/CyLib.c **** * \return
2739:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the previous callback function.
2740:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not set.
2741:Generated_Source\PSoC4/CyLib.c **** *
2742:Generated_Source\PSoC4/CyLib.c **** * \sideeffect
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 91


2743:Generated_Source\PSoC4/CyLib.c **** *  The registered callback functions will be executed in the interrupt.
2744:Generated_Source\PSoC4/CyLib.c **** *
2745:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2746:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickSetCallback(uint32 number, cySysTickCallback function)
2747:Generated_Source\PSoC4/CyLib.c **** {
2748:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
2749:Generated_Source\PSoC4/CyLib.c **** 
2750:Generated_Source\PSoC4/CyLib.c ****     retVal = CySysTickCallbacks[number];
2751:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
2752:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
2753:Generated_Source\PSoC4/CyLib.c **** }
2754:Generated_Source\PSoC4/CyLib.c **** 
2755:Generated_Source\PSoC4/CyLib.c **** 
2756:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2757:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickGetCallback
2758:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2759:Generated_Source\PSoC4/CyLib.c **** *
2760:Generated_Source\PSoC4/CyLib.c **** *  The function get the specified callback pointer.
2761:Generated_Source\PSoC4/CyLib.c **** *
2762:Generated_Source\PSoC4/CyLib.c **** *  \param number: The number of callback function address to get. The valid
2763:Generated_Source\PSoC4/CyLib.c **** *          range is from 0 to 4.
2764:Generated_Source\PSoC4/CyLib.c **** *
2765:Generated_Source\PSoC4/CyLib.c **** * \return
2766:Generated_Source\PSoC4/CyLib.c **** *  Returns the address of the specified callback function.
2767:Generated_Source\PSoC4/CyLib.c **** *  The NULL is returned if the specified address in not initialized.
2768:Generated_Source\PSoC4/CyLib.c **** *
2769:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2770:Generated_Source\PSoC4/CyLib.c **** cySysTickCallback CySysTickGetCallback(uint32 number)
2771:Generated_Source\PSoC4/CyLib.c **** {
2772:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
2773:Generated_Source\PSoC4/CyLib.c **** }
2774:Generated_Source\PSoC4/CyLib.c **** 
2775:Generated_Source\PSoC4/CyLib.c **** 
2776:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2777:Generated_Source\PSoC4/CyLib.c **** * Function Name: CySysTickServiceCallbacks
2778:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2779:Generated_Source\PSoC4/CyLib.c **** *
2780:Generated_Source\PSoC4/CyLib.c **** *  System Tick timer interrupt routine
2781:Generated_Source\PSoC4/CyLib.c **** *
2782:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2783:Generated_Source\PSoC4/CyLib.c **** static void CySysTickServiceCallbacks(void)
2784:Generated_Source\PSoC4/CyLib.c **** {
 2098              		.loc 1 2784 0
 2099              		.cfi_startproc
 2100 0000 10B5     		push	{r4, lr}
 2101              		.cfi_def_cfa_offset 8
 2102              		.cfi_offset 4, -8
 2103              		.cfi_offset 14, -4
2785:Generated_Source\PSoC4/CyLib.c ****     uint32 i;
2786:Generated_Source\PSoC4/CyLib.c **** 
2787:Generated_Source\PSoC4/CyLib.c ****     /* Verify that tick timer flag was set */
2788:Generated_Source\PSoC4/CyLib.c ****     if (1u == CySysTickGetCountFlag())
 2104              		.loc 1 2788 0
 2105 0002 FFF7FEFF 		bl	CySysTickGetCountFlag
 2106              	.LVL141:
 2107 0006 0128     		cmp	r0, #1
 2108 0008 08D1     		bne	.L161
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 92


 2109 000a 0024     		mov	r4, #0
 2110              	.L162:
 2111              	.LBB103:
2789:Generated_Source\PSoC4/CyLib.c ****     {
2790:Generated_Source\PSoC4/CyLib.c ****         for (i=0u; i < CY_SYS_SYST_NUM_OF_CALLBACKS; i++)
2791:Generated_Source\PSoC4/CyLib.c ****         {
2792:Generated_Source\PSoC4/CyLib.c ****             if (CySysTickCallbacks[i] != (void *) 0)
 2112              		.loc 1 2792 0
 2113 000c 044B     		ldr	r3, .L169
 2114 000e E358     		ldr	r3, [r4, r3]
 2115 0010 002B     		cmp	r3, #0
 2116 0012 00D0     		beq	.L163
2793:Generated_Source\PSoC4/CyLib.c ****             {
2794:Generated_Source\PSoC4/CyLib.c ****                 (void)(CySysTickCallbacks[i])();
 2117              		.loc 1 2794 0
 2118 0014 9847     		blx	r3
 2119              	.LVL142:
 2120              	.L163:
 2121 0016 0434     		add	r4, r4, #4
2790:Generated_Source\PSoC4/CyLib.c ****         {
 2122              		.loc 1 2790 0
 2123 0018 142C     		cmp	r4, #20
 2124 001a F7D1     		bne	.L162
 2125              	.L161:
 2126              	.LBE103:
2795:Generated_Source\PSoC4/CyLib.c ****             }
2796:Generated_Source\PSoC4/CyLib.c ****         }
2797:Generated_Source\PSoC4/CyLib.c ****     }
2798:Generated_Source\PSoC4/CyLib.c **** }
 2127              		.loc 1 2798 0
 2128              		@ sp needed
 2129 001c 10BD     		pop	{r4, pc}
 2130              	.L170:
 2131 001e C046     		.align	2
 2132              	.L169:
 2133 0020 00000000 		.word	.LANCHOR2
 2134              		.cfi_endproc
 2135              	.LFE49:
 2136              		.size	CySysTickServiceCallbacks, .-CySysTickServiceCallbacks
 2137              		.section	.text.CySysTickClear,"ax",%progbits
 2138              		.align	1
 2139              		.global	CySysTickClear
 2140              		.code	16
 2141              		.thumb_func
 2142              		.type	CySysTickClear, %function
 2143              	CySysTickClear:
 2144              	.LFB46:
2712:Generated_Source\PSoC4/CyLib.c ****     CY_SYS_SYST_CVR_REG = 0u;
 2145              		.loc 1 2712 0
 2146              		.cfi_startproc
2713:Generated_Source\PSoC4/CyLib.c **** }
 2147              		.loc 1 2713 0
 2148 0000 0022     		mov	r2, #0
 2149 0002 014B     		ldr	r3, .L172
2714:Generated_Source\PSoC4/CyLib.c **** 
 2150              		.loc 1 2714 0
 2151              		@ sp needed
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 93


2713:Generated_Source\PSoC4/CyLib.c **** }
 2152              		.loc 1 2713 0
 2153 0004 1A60     		str	r2, [r3]
2714:Generated_Source\PSoC4/CyLib.c **** 
 2154              		.loc 1 2714 0
 2155 0006 7047     		bx	lr
 2156              	.L173:
 2157              		.align	2
 2158              	.L172:
 2159 0008 18E000E0 		.word	-536813544
 2160              		.cfi_endproc
 2161              	.LFE46:
 2162              		.size	CySysTickClear, .-CySysTickClear
 2163              		.section	.text.CySysTickSetCallback,"ax",%progbits
 2164              		.align	1
 2165              		.global	CySysTickSetCallback
 2166              		.code	16
 2167              		.thumb_func
 2168              		.type	CySysTickSetCallback, %function
 2169              	CySysTickSetCallback:
 2170              	.LFB47:
2747:Generated_Source\PSoC4/CyLib.c ****     cySysTickCallback retVal;
 2171              		.loc 1 2747 0
 2172              		.cfi_startproc
 2173              	.LVL143:
2750:Generated_Source\PSoC4/CyLib.c ****     CySysTickCallbacks[number] = function;
 2174              		.loc 1 2750 0
 2175 0000 024A     		ldr	r2, .L175
 2176 0002 8300     		lsl	r3, r0, #2
 2177 0004 9858     		ldr	r0, [r3, r2]
 2178              	.LVL144:
2753:Generated_Source\PSoC4/CyLib.c **** 
 2179              		.loc 1 2753 0
 2180              		@ sp needed
2751:Generated_Source\PSoC4/CyLib.c ****     return (retVal);
 2181              		.loc 1 2751 0
 2182 0006 9950     		str	r1, [r3, r2]
2753:Generated_Source\PSoC4/CyLib.c **** 
 2183              		.loc 1 2753 0
 2184 0008 7047     		bx	lr
 2185              	.L176:
 2186 000a C046     		.align	2
 2187              	.L175:
 2188 000c 00000000 		.word	.LANCHOR2
 2189              		.cfi_endproc
 2190              	.LFE47:
 2191              		.size	CySysTickSetCallback, .-CySysTickSetCallback
 2192              		.section	.text.CySysTickGetCallback,"ax",%progbits
 2193              		.align	1
 2194              		.global	CySysTickGetCallback
 2195              		.code	16
 2196              		.thumb_func
 2197              		.type	CySysTickGetCallback, %function
 2198              	CySysTickGetCallback:
 2199              	.LFB48:
2771:Generated_Source\PSoC4/CyLib.c ****     return ((cySysTickCallback) CySysTickCallbacks[number]);
 2200              		.loc 1 2771 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 94


 2201              		.cfi_startproc
 2202              	.LVL145:
2772:Generated_Source\PSoC4/CyLib.c **** }
 2203              		.loc 1 2772 0
 2204 0000 014B     		ldr	r3, .L178
 2205 0002 8000     		lsl	r0, r0, #2
 2206              	.LVL146:
 2207 0004 C058     		ldr	r0, [r0, r3]
2773:Generated_Source\PSoC4/CyLib.c **** 
 2208              		.loc 1 2773 0
 2209              		@ sp needed
 2210 0006 7047     		bx	lr
 2211              	.L179:
 2212              		.align	2
 2213              	.L178:
 2214 0008 00000000 		.word	.LANCHOR2
 2215              		.cfi_endproc
 2216              	.LFE48:
 2217              		.size	CySysTickGetCallback, .-CySysTickGetCallback
 2218              		.section	.text.CyGetUniqueId,"ax",%progbits
 2219              		.align	1
 2220              		.global	CyGetUniqueId
 2221              		.code	16
 2222              		.thumb_func
 2223              		.type	CyGetUniqueId, %function
 2224              	CyGetUniqueId:
 2225              	.LFB50:
2799:Generated_Source\PSoC4/CyLib.c **** 
2800:Generated_Source\PSoC4/CyLib.c **** 
2801:Generated_Source\PSoC4/CyLib.c **** /*******************************************************************************
2802:Generated_Source\PSoC4/CyLib.c **** * Function Name: CyGetUniqueId
2803:Generated_Source\PSoC4/CyLib.c **** ****************************************************************************//**
2804:Generated_Source\PSoC4/CyLib.c **** *
2805:Generated_Source\PSoC4/CyLib.c **** *  Returns the 64-bit unique ID of the device. The uniqueness of the number is
2806:Generated_Source\PSoC4/CyLib.c **** *  guaranteed for 10 years due to the die lot number having a cycle life of 10
2807:Generated_Source\PSoC4/CyLib.c **** *  years and even after 10 years, the probability of getting two identical
2808:Generated_Source\PSoC4/CyLib.c **** *  numbers is very small.
2809:Generated_Source\PSoC4/CyLib.c **** *
2810:Generated_Source\PSoC4/CyLib.c **** *  \param uniqueId: The pointer to a two element 32-bit unsigned integer array. Returns
2811:Generated_Source\PSoC4/CyLib.c **** *  the 64-bit unique ID of the device by loading them into the integer array
2812:Generated_Source\PSoC4/CyLib.c **** *  pointed to by uniqueId.
2813:Generated_Source\PSoC4/CyLib.c **** *
2814:Generated_Source\PSoC4/CyLib.c **** *******************************************************************************/
2815:Generated_Source\PSoC4/CyLib.c **** void CyGetUniqueId(uint32* uniqueId)
2816:Generated_Source\PSoC4/CyLib.c **** {
 2226              		.loc 1 2816 0
 2227              		.cfi_startproc
 2228              	.LVL147:
2817:Generated_Source\PSoC4/CyLib.c **** #if(CY_PSOC4)
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT0  );
 2229              		.loc 1 2818 0
 2230 0000 134B     		ldr	r3, .L181
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT2  ) << 16u);
2821:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
2822:Generated_Source\PSoC4/CyLib.c **** 
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32)(* (reg8 *) CYREG_SFLASH_DIE_X     );
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 95


2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
2826:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
2827:Generated_Source\PSoC4/CyLib.c **** #else
2828:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_LSB   )
2829:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_LOT_MSB   )
2830:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_MLOGIC_REV_ID                )
2831:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WAFER_NUM )
2832:Generated_Source\PSoC4/CyLib.c **** 
2833:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u]  =  (uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_X_LOC     )
2834:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_Y_LOC     )
2835:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_WRK_WK    )
2836:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32) CY_GET_XTND_REG8((void CYFAR *) (CYREG_FLSHID_CUST_TABLES_FAB_YR    )
2837:Generated_Source\PSoC4/CyLib.c **** #endif  /* (CY_PSOC4) */
2838:Generated_Source\PSoC4/CyLib.c **** }
 2231              		.loc 1 2838 0
 2232              		@ sp needed
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2233              		.loc 1 2818 0
 2234 0002 1B78     		ldrb	r3, [r3]
 2235 0004 DAB2     		uxtb	r2, r3
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2236              		.loc 1 2819 0
 2237 0006 134B     		ldr	r3, .L181+4
2818:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2238              		.loc 1 2818 0
 2239 0008 0260     		str	r2, [r0]
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2240              		.loc 1 2819 0
 2241 000a 1B78     		ldrb	r3, [r3]
 2242 000c 1B02     		lsl	r3, r3, #8
 2243 000e 1343     		orr	r3, r2
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2244              		.loc 1 2820 0
 2245 0010 114A     		ldr	r2, .L181+8
2819:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_LOT1  ) <<  8u);
 2246              		.loc 1 2819 0
 2247 0012 0360     		str	r3, [r0]
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2248              		.loc 1 2820 0
 2249 0014 1278     		ldrb	r2, [r2]
 2250 0016 1204     		lsl	r2, r2, #16
 2251 0018 1343     		orr	r3, r2
2821:Generated_Source\PSoC4/CyLib.c **** 
 2252              		.loc 1 2821 0
 2253 001a 104A     		ldr	r2, .L181+12
2820:Generated_Source\PSoC4/CyLib.c ****     uniqueId[0u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_WAFER ) << 24u);
 2254              		.loc 1 2820 0
 2255 001c 0360     		str	r3, [r0]
2821:Generated_Source\PSoC4/CyLib.c **** 
 2256              		.loc 1 2821 0
 2257 001e 1278     		ldrb	r2, [r2]
 2258 0020 1206     		lsl	r2, r2, #24
 2259 0022 1343     		orr	r3, r2
 2260 0024 0360     		str	r3, [r0]
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2261              		.loc 1 2823 0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 96


 2262 0026 0E4B     		ldr	r3, .L181+16
 2263 0028 1B78     		ldrb	r3, [r3]
 2264 002a DAB2     		uxtb	r2, r3
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2265              		.loc 1 2824 0
 2266 002c 0D4B     		ldr	r3, .L181+20
2823:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_Y     ) <<  8u);
 2267              		.loc 1 2823 0
 2268 002e 4260     		str	r2, [r0, #4]
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2269              		.loc 1 2824 0
 2270 0030 1B78     		ldrb	r3, [r3]
 2271 0032 1B02     		lsl	r3, r3, #8
 2272 0034 1343     		orr	r3, r2
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2273              		.loc 1 2825 0
 2274 0036 0C4A     		ldr	r2, .L181+24
2824:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_SORT  ) << 16u);
 2275              		.loc 1 2824 0
 2276 0038 4360     		str	r3, [r0, #4]
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2277              		.loc 1 2825 0
 2278 003a 1278     		ldrb	r2, [r2]
 2279 003c 1204     		lsl	r2, r2, #16
 2280 003e 1343     		orr	r3, r2
2826:Generated_Source\PSoC4/CyLib.c **** #else
 2281              		.loc 1 2826 0
 2282 0040 0A4A     		ldr	r2, .L181+28
2825:Generated_Source\PSoC4/CyLib.c ****     uniqueId[1u] |= ((uint32)(* (reg8 *) CYREG_SFLASH_DIE_MINOR ) << 24u);
 2283              		.loc 1 2825 0
 2284 0042 4360     		str	r3, [r0, #4]
2826:Generated_Source\PSoC4/CyLib.c **** #else
 2285              		.loc 1 2826 0
 2286 0044 1278     		ldrb	r2, [r2]
 2287 0046 1206     		lsl	r2, r2, #24
 2288 0048 1343     		orr	r3, r2
 2289 004a 4360     		str	r3, [r0, #4]
 2290              		.loc 1 2838 0
 2291 004c 7047     		bx	lr
 2292              	.L182:
 2293 004e C046     		.align	2
 2294              	.L181:
 2295 0050 78F2FF0F 		.word	268431992
 2296 0054 79F2FF0F 		.word	268431993
 2297 0058 7AF2FF0F 		.word	268431994
 2298 005c 7BF2FF0F 		.word	268431995
 2299 0060 7CF2FF0F 		.word	268431996
 2300 0064 7DF2FF0F 		.word	268431997
 2301 0068 7EF2FF0F 		.word	268431998
 2302 006c 7FF2FF0F 		.word	268431999
 2303              		.cfi_endproc
 2304              	.LFE50:
 2305              		.size	CyGetUniqueId, .-CyGetUniqueId
 2306              		.global	cyImoFreqMhz2Reg
 2307              		.global	CySysTickInitVar
 2308              		.global	cydelay32kMs
 2309              		.global	cydelayFreqMhz
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 97


 2310              		.global	cydelayFreqKhz
 2311              		.global	cydelayFreqHz
 2312              		.section	.rodata
 2313              		.set	.LANCHOR1,. + 0
 2314              		.type	cyImoFreqMhz2Reg, %object
 2315              		.size	cyImoFreqMhz2Reg, 46
 2316              	cyImoFreqMhz2Reg:
 2317 0000 03       		.byte	3
 2318 0001 04       		.byte	4
 2319 0002 05       		.byte	5
 2320 0003 06       		.byte	6
 2321 0004 07       		.byte	7
 2322 0005 08       		.byte	8
 2323 0006 09       		.byte	9
 2324 0007 0A       		.byte	10
 2325 0008 0B       		.byte	11
 2326 0009 0C       		.byte	12
 2327 000a 0E       		.byte	14
 2328 000b 0F       		.byte	15
 2329 000c 10       		.byte	16
 2330 000d 11       		.byte	17
 2331 000e 12       		.byte	18
 2332 000f 13       		.byte	19
 2333 0010 14       		.byte	20
 2334 0011 15       		.byte	21
 2335 0012 16       		.byte	22
 2336 0013 17       		.byte	23
 2337 0014 18       		.byte	24
 2338 0015 19       		.byte	25
 2339 0016 1B       		.byte	27
 2340 0017 1C       		.byte	28
 2341 0018 1D       		.byte	29
 2342 0019 1E       		.byte	30
 2343 001a 1F       		.byte	31
 2344 001b 20       		.byte	32
 2345 001c 21       		.byte	33
 2346 001d 22       		.byte	34
 2347 001e 23       		.byte	35
 2348 001f 25       		.byte	37
 2349 0020 26       		.byte	38
 2350 0021 27       		.byte	39
 2351 0022 28       		.byte	40
 2352 0023 29       		.byte	41
 2353 0024 2A       		.byte	42
 2354 0025 2B       		.byte	43
 2355 0026 2E       		.byte	46
 2356 0027 2F       		.byte	47
 2357 0028 30       		.byte	48
 2358 0029 31       		.byte	49
 2359 002a 32       		.byte	50
 2360 002b 33       		.byte	51
 2361 002c 34       		.byte	52
 2362 002d 35       		.byte	53
 2363              		.data
 2364              		.align	2
 2365              		.set	.LANCHOR0,. + 0
 2366              		.type	cydelay32kMs, %object
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 98


 2367              		.size	cydelay32kMs, 4
 2368              	cydelay32kMs:
 2369 0000 0000401F 		.word	524288000
 2370              		.type	cydelayFreqKhz, %object
 2371              		.size	cydelayFreqKhz, 4
 2372              	cydelayFreqKhz:
 2373 0004 803E0000 		.word	16000
 2374              		.type	cydelayFreqMhz, %object
 2375              		.size	cydelayFreqMhz, 1
 2376              	cydelayFreqMhz:
 2377 0008 10       		.byte	16
 2378 0009 000000   		.space	3
 2379              		.type	cydelayFreqHz, %object
 2380              		.size	cydelayFreqHz, 4
 2381              	cydelayFreqHz:
 2382 000c 0024F400 		.word	16000000
 2383              		.bss
 2384              		.align	2
 2385              		.set	.LANCHOR2,. + 0
 2386              		.type	CySysTickCallbacks, %object
 2387              		.size	CySysTickCallbacks, 20
 2388              	CySysTickCallbacks:
 2389 0000 00000000 		.space	20
 2389      00000000 
 2389      00000000 
 2389      00000000 
 2389      00000000 
 2390              		.type	CySysTickInitVar, %object
 2391              		.size	CySysTickInitVar, 4
 2392              	CySysTickInitVar:
 2393 0014 00000000 		.space	4
 2394              		.text
 2395              	.Letext0:
 2396              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 2397              		.file 3 "Generated_Source\\PSoC4\\CyLib.h"
 2398              		.section	.debug_info,"",%progbits
 2399              	.Ldebug_info0:
 2400 0000 720D0000 		.4byte	0xd72
 2401 0004 0400     		.2byte	0x4
 2402 0006 00000000 		.4byte	.Ldebug_abbrev0
 2403 000a 04       		.byte	0x4
 2404 000b 01       		.uleb128 0x1
 2405 000c 1E000000 		.4byte	.LASF108
 2406 0010 01       		.byte	0x1
 2407 0011 E2060000 		.4byte	.LASF109
 2408 0015 B9050000 		.4byte	.LASF110
 2409 0019 A8000000 		.4byte	.Ldebug_ranges0+0xa8
 2410 001d 00000000 		.4byte	0
 2411 0021 00000000 		.4byte	.Ldebug_line0
 2412 0025 02       		.uleb128 0x2
 2413 0026 01       		.byte	0x1
 2414 0027 06       		.byte	0x6
 2415 0028 79010000 		.4byte	.LASF0
 2416 002c 02       		.uleb128 0x2
 2417 002d 01       		.byte	0x1
 2418 002e 08       		.byte	0x8
 2419 002f E9040000 		.4byte	.LASF1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 99


 2420 0033 02       		.uleb128 0x2
 2421 0034 02       		.byte	0x2
 2422 0035 05       		.byte	0x5
 2423 0036 F7040000 		.4byte	.LASF2
 2424 003a 02       		.uleb128 0x2
 2425 003b 02       		.byte	0x2
 2426 003c 07       		.byte	0x7
 2427 003d 56030000 		.4byte	.LASF3
 2428 0041 02       		.uleb128 0x2
 2429 0042 04       		.byte	0x4
 2430 0043 05       		.byte	0x5
 2431 0044 B8010000 		.4byte	.LASF4
 2432 0048 02       		.uleb128 0x2
 2433 0049 04       		.byte	0x4
 2434 004a 07       		.byte	0x7
 2435 004b DE020000 		.4byte	.LASF5
 2436 004f 02       		.uleb128 0x2
 2437 0050 08       		.byte	0x8
 2438 0051 05       		.byte	0x5
 2439 0052 6B010000 		.4byte	.LASF6
 2440 0056 02       		.uleb128 0x2
 2441 0057 08       		.byte	0x8
 2442 0058 07       		.byte	0x7
 2443 0059 FF000000 		.4byte	.LASF7
 2444 005d 03       		.uleb128 0x3
 2445 005e 04       		.byte	0x4
 2446 005f 05       		.byte	0x5
 2447 0060 696E7400 		.ascii	"int\000"
 2448 0064 02       		.uleb128 0x2
 2449 0065 04       		.byte	0x4
 2450 0066 07       		.byte	0x7
 2451 0067 C2020000 		.4byte	.LASF8
 2452 006b 04       		.uleb128 0x4
 2453 006c E3010000 		.4byte	.LASF9
 2454 0070 02       		.byte	0x2
 2455 0071 9801     		.2byte	0x198
 2456 0073 2C000000 		.4byte	0x2c
 2457 0077 04       		.uleb128 0x4
 2458 0078 17000000 		.4byte	.LASF10
 2459 007c 02       		.byte	0x2
 2460 007d 9901     		.2byte	0x199
 2461 007f 3A000000 		.4byte	0x3a
 2462 0083 04       		.uleb128 0x4
 2463 0084 26020000 		.4byte	.LASF11
 2464 0088 02       		.byte	0x2
 2465 0089 9A01     		.2byte	0x19a
 2466 008b 48000000 		.4byte	0x48
 2467 008f 02       		.uleb128 0x2
 2468 0090 04       		.byte	0x4
 2469 0091 04       		.byte	0x4
 2470 0092 6C040000 		.4byte	.LASF12
 2471 0096 02       		.uleb128 0x2
 2472 0097 08       		.byte	0x8
 2473 0098 04       		.byte	0x4
 2474 0099 02020000 		.4byte	.LASF13
 2475 009d 02       		.uleb128 0x2
 2476 009e 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 100


 2477 009f 08       		.byte	0x8
 2478 00a0 41050000 		.4byte	.LASF14
 2479 00a4 04       		.uleb128 0x4
 2480 00a5 B7060000 		.4byte	.LASF15
 2481 00a9 02       		.byte	0x2
 2482 00aa 3A02     		.2byte	0x23a
 2483 00ac 48000000 		.4byte	0x48
 2484 00b0 04       		.uleb128 0x4
 2485 00b1 D3040000 		.4byte	.LASF16
 2486 00b5 02       		.byte	0x2
 2487 00b6 4202     		.2byte	0x242
 2488 00b8 BC000000 		.4byte	0xbc
 2489 00bc 05       		.uleb128 0x5
 2490 00bd 6B000000 		.4byte	0x6b
 2491 00c1 04       		.uleb128 0x4
 2492 00c2 C7030000 		.4byte	.LASF17
 2493 00c6 02       		.byte	0x2
 2494 00c7 4402     		.2byte	0x244
 2495 00c9 CD000000 		.4byte	0xcd
 2496 00cd 05       		.uleb128 0x5
 2497 00ce 83000000 		.4byte	0x83
 2498 00d2 04       		.uleb128 0x4
 2499 00d3 46050000 		.4byte	.LASF18
 2500 00d7 02       		.byte	0x2
 2501 00d8 5402     		.2byte	0x254
 2502 00da DE000000 		.4byte	0xde
 2503 00de 06       		.uleb128 0x6
 2504 00df 04       		.byte	0x4
 2505 00e0 E4000000 		.4byte	0xe4
 2506 00e4 07       		.uleb128 0x7
 2507 00e5 02       		.uleb128 0x2
 2508 00e6 04       		.byte	0x4
 2509 00e7 07       		.byte	0x7
 2510 00e8 E9030000 		.4byte	.LASF19
 2511 00ec 08       		.uleb128 0x8
 2512 00ed 97040000 		.4byte	.LASF20
 2513 00f1 03       		.byte	0x3
 2514 00f2 F3       		.byte	0xf3
 2515 00f3 DE000000 		.4byte	0xde
 2516 00f7 09       		.uleb128 0x9
 2517 00f8 E2040000 		.4byte	.LASF21
 2518 00fc 01       		.byte	0x1
 2519 00fd 3E09     		.2byte	0x93e
 2520 00ff 01       		.byte	0x1
 2521 0100 11010000 		.4byte	0x111
 2522 0104 0A       		.uleb128 0xa
 2523 0105 3A050000 		.4byte	.LASF23
 2524 0109 01       		.byte	0x1
 2525 010a 3E09     		.2byte	0x93e
 2526 010c 6B000000 		.4byte	0x6b
 2527 0110 00       		.byte	0
 2528 0111 0B       		.uleb128 0xb
 2529 0112 2D020000 		.4byte	.LASF49
 2530 0116 01       		.byte	0x1
 2531 0117 2504     		.2byte	0x425
 2532 0119 83000000 		.4byte	0x83
 2533 011d 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 101


 2534 011e 2F010000 		.4byte	0x12f
 2535 0122 0C       		.uleb128 0xc
 2536 0123 42070000 		.4byte	.LASF25
 2537 0127 01       		.byte	0x1
 2538 0128 2704     		.2byte	0x427
 2539 012a 83000000 		.4byte	0x83
 2540 012e 00       		.byte	0
 2541 012f 0D       		.uleb128 0xd
 2542 0130 0F020000 		.4byte	.LASF28
 2543 0134 01       		.byte	0x1
 2544 0135 F107     		.2byte	0x7f1
 2545 0137 01       		.byte	0x1
 2546 0138 09       		.uleb128 0x9
 2547 0139 69030000 		.4byte	.LASF22
 2548 013d 01       		.byte	0x1
 2549 013e 6D0A     		.2byte	0xa6d
 2550 0140 01       		.byte	0x1
 2551 0141 52010000 		.4byte	0x152
 2552 0145 0A       		.uleb128 0xa
 2553 0146 92020000 		.4byte	.LASF24
 2554 014a 01       		.byte	0x1
 2555 014b 6D0A     		.2byte	0xa6d
 2556 014d 83000000 		.4byte	0x83
 2557 0151 00       		.byte	0
 2558 0152 0E       		.uleb128 0xe
 2559 0153 28070000 		.4byte	.LASF111
 2560 0157 01       		.byte	0x1
 2561 0158 DF0A     		.2byte	0xadf
 2562 015a 01       		.byte	0x1
 2563 015b 6A010000 		.4byte	0x16a
 2564 015f 0F       		.uleb128 0xf
 2565 0160 6900     		.ascii	"i\000"
 2566 0162 01       		.byte	0x1
 2567 0163 E10A     		.2byte	0xae1
 2568 0165 83000000 		.4byte	0x83
 2569 0169 00       		.byte	0
 2570 016a 09       		.uleb128 0x9
 2571 016b 15070000 		.4byte	.LASF26
 2572 016f 01       		.byte	0x1
 2573 0170 2D0A     		.2byte	0xa2d
 2574 0172 01       		.byte	0x1
 2575 0173 84010000 		.4byte	0x184
 2576 0177 0A       		.uleb128 0xa
 2577 0178 8C020000 		.4byte	.LASF27
 2578 017c 01       		.byte	0x1
 2579 017d 2D0A     		.2byte	0xa2d
 2580 017f 83000000 		.4byte	0x83
 2581 0183 00       		.byte	0
 2582 0184 0D       		.uleb128 0xd
 2583 0185 CF020000 		.4byte	.LASF29
 2584 0189 01       		.byte	0x1
 2585 018a 970A     		.2byte	0xa97
 2586 018c 01       		.byte	0x1
 2587 018d 10       		.uleb128 0x10
 2588 018e C0060000 		.4byte	.LASF30
 2589 0192 01       		.byte	0x1
 2590 0193 68       		.byte	0x68
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 102


 2591 0194 00000000 		.4byte	.LFB2
 2592 0198 14000000 		.4byte	.LFE2-.LFB2
 2593 019c 01       		.uleb128 0x1
 2594 019d 9C       		.byte	0x9c
 2595 019e 10       		.uleb128 0x10
 2596 019f 0B030000 		.4byte	.LASF31
 2597 01a3 01       		.byte	0x1
 2598 01a4 88       		.byte	0x88
 2599 01a5 00000000 		.4byte	.LFB3
 2600 01a9 10000000 		.4byte	.LFE3-.LFB3
 2601 01ad 01       		.uleb128 0x1
 2602 01ae 9C       		.byte	0x9c
 2603 01af 11       		.uleb128 0x11
 2604 01b0 B5000000 		.4byte	.LASF35
 2605 01b4 01       		.byte	0x1
 2606 01b5 AA01     		.2byte	0x1aa
 2607 01b7 00000000 		.4byte	.LFB4
 2608 01bb 20000000 		.4byte	.LFE4-.LFB4
 2609 01bf 01       		.uleb128 0x1
 2610 01c0 9C       		.byte	0x9c
 2611 01c1 08020000 		.4byte	0x208
 2612 01c5 12       		.uleb128 0x12
 2613 01c6 1F050000 		.4byte	.LASF37
 2614 01ca 01       		.byte	0x1
 2615 01cb AA01     		.2byte	0x1aa
 2616 01cd 83000000 		.4byte	0x83
 2617 01d1 00000000 		.4byte	.LLST0
 2618 01d5 13       		.uleb128 0x13
 2619 01d6 96010000 		.4byte	.LASF32
 2620 01da 01       		.byte	0x1
 2621 01db AC01     		.2byte	0x1ac
 2622 01dd 6B000000 		.4byte	0x6b
 2623 01e1 2C000000 		.4byte	.LLST1
 2624 01e5 13       		.uleb128 0x13
 2625 01e6 0E070000 		.4byte	.LASF33
 2626 01ea 01       		.byte	0x1
 2627 01eb AD01     		.2byte	0x1ad
 2628 01ed 83000000 		.4byte	0x83
 2629 01f1 3F000000 		.4byte	.LLST2
 2630 01f5 14       		.uleb128 0x14
 2631 01f6 08000000 		.4byte	.LVL1
 2632 01fa 4C0D0000 		.4byte	0xd4c
 2633 01fe 14       		.uleb128 0x14
 2634 01ff 1A000000 		.4byte	.LVL4
 2635 0203 570D0000 		.4byte	0xd57
 2636 0207 00       		.byte	0
 2637 0208 15       		.uleb128 0x15
 2638 0209 48020000 		.4byte	.LASF42
 2639 020d 01       		.byte	0x1
 2640 020e CF01     		.2byte	0x1cf
 2641 0210 83000000 		.4byte	0x83
 2642 0214 00000000 		.4byte	.LFB5
 2643 0218 18000000 		.4byte	.LFE5-.LFB5
 2644 021c 01       		.uleb128 0x1
 2645 021d 9C       		.byte	0x9c
 2646 021e 55020000 		.4byte	0x255
 2647 0222 13       		.uleb128 0x13
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 103


 2648 0223 96010000 		.4byte	.LASF32
 2649 0227 01       		.byte	0x1
 2650 0228 D101     		.2byte	0x1d1
 2651 022a 6B000000 		.4byte	0x6b
 2652 022e 5D000000 		.4byte	.LLST3
 2653 0232 13       		.uleb128 0x13
 2654 0233 14040000 		.4byte	.LASF34
 2655 0237 01       		.byte	0x1
 2656 0238 D201     		.2byte	0x1d2
 2657 023a 83000000 		.4byte	0x83
 2658 023e 70000000 		.4byte	.LLST4
 2659 0242 14       		.uleb128 0x14
 2660 0243 06000000 		.4byte	.LVL6
 2661 0247 4C0D0000 		.4byte	0xd4c
 2662 024b 14       		.uleb128 0x14
 2663 024c 0E000000 		.4byte	.LVL8
 2664 0250 570D0000 		.4byte	0xd57
 2665 0254 00       		.byte	0
 2666 0255 11       		.uleb128 0x11
 2667 0256 63050000 		.4byte	.LASF36
 2668 025a 01       		.byte	0x1
 2669 025b 0602     		.2byte	0x206
 2670 025d 00000000 		.4byte	.LFB6
 2671 0261 28000000 		.4byte	.LFE6-.LFB6
 2672 0265 01       		.uleb128 0x1
 2673 0266 9C       		.byte	0x9c
 2674 0267 9E020000 		.4byte	0x29e
 2675 026b 12       		.uleb128 0x12
 2676 026c 9B060000 		.4byte	.LASF38
 2677 0270 01       		.byte	0x1
 2678 0271 0602     		.2byte	0x206
 2679 0273 83000000 		.4byte	0x83
 2680 0277 92000000 		.4byte	.LLST5
 2681 027b 13       		.uleb128 0x13
 2682 027c 96010000 		.4byte	.LASF32
 2683 0280 01       		.byte	0x1
 2684 0281 0802     		.2byte	0x208
 2685 0283 6B000000 		.4byte	0x6b
 2686 0287 BE000000 		.4byte	.LLST6
 2687 028b 14       		.uleb128 0x14
 2688 028c 08000000 		.4byte	.LVL11
 2689 0290 4C0D0000 		.4byte	0xd4c
 2690 0294 14       		.uleb128 0x14
 2691 0295 1E000000 		.4byte	.LVL12
 2692 0299 570D0000 		.4byte	0xd57
 2693 029d 00       		.byte	0
 2694 029e 16       		.uleb128 0x16
 2695 029f 73060000 		.4byte	.LASF39
 2696 02a3 01       		.byte	0x1
 2697 02a4 0504     		.2byte	0x405
 2698 02a6 00000000 		.4byte	.LFB9
 2699 02aa 24000000 		.4byte	.LFE9-.LFB9
 2700 02ae 01       		.uleb128 0x1
 2701 02af 9C       		.byte	0x9c
 2702 02b0 17       		.uleb128 0x17
 2703 02b1 11010000 		.4byte	0x111
 2704 02b5 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 104


 2705 02b9 10000000 		.4byte	.LFE10-.LFB10
 2706 02bd 01       		.uleb128 0x1
 2707 02be 9C       		.byte	0x9c
 2708 02bf CD020000 		.4byte	0x2cd
 2709 02c3 18       		.uleb128 0x18
 2710 02c4 22010000 		.4byte	0x122
 2711 02c8 D1000000 		.4byte	.LLST7
 2712 02cc 00       		.byte	0
 2713 02cd 11       		.uleb128 0x11
 2714 02ce A3060000 		.4byte	.LASF40
 2715 02d2 01       		.byte	0x1
 2716 02d3 4D04     		.2byte	0x44d
 2717 02d5 00000000 		.4byte	.LFB11
 2718 02d9 38000000 		.4byte	.LFE11-.LFB11
 2719 02dd 01       		.uleb128 0x1
 2720 02de 9C       		.byte	0x9c
 2721 02df 34030000 		.4byte	0x334
 2722 02e3 12       		.uleb128 0x12
 2723 02e4 9B060000 		.4byte	.LASF38
 2724 02e8 01       		.byte	0x1
 2725 02e9 4D04     		.2byte	0x44d
 2726 02eb 83000000 		.4byte	0x83
 2727 02ef F3000000 		.4byte	.LLST8
 2728 02f3 13       		.uleb128 0x13
 2729 02f4 96010000 		.4byte	.LASF32
 2730 02f8 01       		.byte	0x1
 2731 02f9 4F04     		.2byte	0x44f
 2732 02fb 6B000000 		.4byte	0x6b
 2733 02ff 2A010000 		.4byte	.LLST9
 2734 0303 19       		.uleb128 0x19
 2735 0304 F7000000 		.4byte	0xf7
 2736 0308 2A000000 		.4byte	.LBB28
 2737 030c 02000000 		.4byte	.LBE28-.LBB28
 2738 0310 01       		.byte	0x1
 2739 0311 5D04     		.2byte	0x45d
 2740 0313 21030000 		.4byte	0x321
 2741 0317 1A       		.uleb128 0x1a
 2742 0318 04010000 		.4byte	0x104
 2743 031c 3D010000 		.4byte	.LLST10
 2744 0320 00       		.byte	0
 2745 0321 14       		.uleb128 0x14
 2746 0322 16000000 		.4byte	.LVL17
 2747 0326 4C0D0000 		.4byte	0xd4c
 2748 032a 14       		.uleb128 0x14
 2749 032b 28000000 		.4byte	.LVL18
 2750 032f 570D0000 		.4byte	0xd57
 2751 0333 00       		.byte	0
 2752 0334 16       		.uleb128 0x16
 2753 0335 54060000 		.4byte	.LASF41
 2754 0339 01       		.byte	0x1
 2755 033a CF07     		.2byte	0x7cf
 2756 033c 00000000 		.4byte	.LFB13
 2757 0340 20000000 		.4byte	.LFE13-.LFB13
 2758 0344 01       		.uleb128 0x1
 2759 0345 9C       		.byte	0x9c
 2760 0346 1B       		.uleb128 0x1b
 2761 0347 F0020000 		.4byte	.LASF90
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 105


 2762 034b 01       		.byte	0x1
 2763 034c E107     		.2byte	0x7e1
 2764 034e 83000000 		.4byte	0x83
 2765 0352 00000000 		.4byte	.LFB14
 2766 0356 10000000 		.4byte	.LFE14-.LFB14
 2767 035a 01       		.uleb128 0x1
 2768 035b 9C       		.byte	0x9c
 2769 035c 1C       		.uleb128 0x1c
 2770 035d 2F010000 		.4byte	0x12f
 2771 0361 00000000 		.4byte	.LFB15
 2772 0365 0C000000 		.4byte	.LFE15-.LFB15
 2773 0369 01       		.uleb128 0x1
 2774 036a 9C       		.byte	0x9c
 2775 036b 15       		.uleb128 0x15
 2776 036c 42030000 		.4byte	.LASF43
 2777 0370 01       		.byte	0x1
 2778 0371 0B08     		.2byte	0x80b
 2779 0373 83000000 		.4byte	0x83
 2780 0377 00000000 		.4byte	.LFB16
 2781 037b 14000000 		.4byte	.LFE16-.LFB16
 2782 037f 01       		.uleb128 0x1
 2783 0380 9C       		.byte	0x9c
 2784 0381 A6030000 		.4byte	0x3a6
 2785 0385 12       		.uleb128 0x12
 2786 0386 3A050000 		.4byte	.LASF23
 2787 038a 01       		.byte	0x1
 2788 038b 0B08     		.2byte	0x80b
 2789 038d 83000000 		.4byte	0x83
 2790 0391 51010000 		.4byte	.LLST11
 2791 0395 13       		.uleb128 0x13
 2792 0396 DC030000 		.4byte	.LASF44
 2793 039a 01       		.byte	0x1
 2794 039b 0D08     		.2byte	0x80d
 2795 039d 83000000 		.4byte	0x83
 2796 03a1 6F010000 		.4byte	.LLST12
 2797 03a5 00       		.byte	0
 2798 03a6 15       		.uleb128 0x15
 2799 03a7 DC000000 		.4byte	.LASF45
 2800 03ab 01       		.byte	0x1
 2801 03ac 2208     		.2byte	0x822
 2802 03ae 83000000 		.4byte	0x83
 2803 03b2 00000000 		.4byte	.LFB17
 2804 03b6 10000000 		.4byte	.LFE17-.LFB17
 2805 03ba 01       		.uleb128 0x1
 2806 03bb 9C       		.byte	0x9c
 2807 03bc CF030000 		.4byte	0x3cf
 2808 03c0 1D       		.uleb128 0x1d
 2809 03c1 AC000000 		.4byte	.LASF46
 2810 03c5 01       		.byte	0x1
 2811 03c6 2408     		.2byte	0x824
 2812 03c8 83000000 		.4byte	0x83
 2813 03cc 01       		.uleb128 0x1
 2814 03cd 50       		.byte	0x50
 2815 03ce 00       		.byte	0
 2816 03cf 11       		.uleb128 0x11
 2817 03d0 27010000 		.4byte	.LASF47
 2818 03d4 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 106


 2819 03d5 3908     		.2byte	0x839
 2820 03d7 00000000 		.4byte	.LFB18
 2821 03db 0C000000 		.4byte	.LFE18-.LFB18
 2822 03df 01       		.uleb128 0x1
 2823 03e0 9C       		.byte	0x9c
 2824 03e1 F4030000 		.4byte	0x3f4
 2825 03e5 1E       		.uleb128 0x1e
 2826 03e6 43020000 		.4byte	.LASF48
 2827 03ea 01       		.byte	0x1
 2828 03eb 3908     		.2byte	0x839
 2829 03ed 83000000 		.4byte	0x83
 2830 03f1 01       		.uleb128 0x1
 2831 03f2 50       		.byte	0x50
 2832 03f3 00       		.byte	0
 2833 03f4 0B       		.uleb128 0xb
 2834 03f5 B5030000 		.4byte	.LASF50
 2835 03f9 01       		.byte	0x1
 2836 03fa 5208     		.2byte	0x852
 2837 03fc D2000000 		.4byte	0xd2
 2838 0400 01       		.byte	0x1
 2839 0401 36040000 		.4byte	0x436
 2840 0405 0A       		.uleb128 0xa
 2841 0406 90030000 		.4byte	.LASF51
 2842 040a 01       		.byte	0x1
 2843 040b 5208     		.2byte	0x852
 2844 040d 6B000000 		.4byte	0x6b
 2845 0411 0A       		.uleb128 0xa
 2846 0412 04040000 		.4byte	.LASF52
 2847 0416 01       		.byte	0x1
 2848 0417 5208     		.2byte	0x852
 2849 0419 D2000000 		.4byte	0xd2
 2850 041d 0C       		.uleb128 0xc
 2851 041e CE000000 		.4byte	.LASF53
 2852 0422 01       		.byte	0x1
 2853 0423 5408     		.2byte	0x854
 2854 0425 D2000000 		.4byte	0xd2
 2855 0429 0C       		.uleb128 0xc
 2856 042a 00000000 		.4byte	.LASF54
 2857 042e 01       		.byte	0x1
 2858 042f 5508     		.2byte	0x855
 2859 0431 36040000 		.4byte	0x436
 2860 0435 00       		.byte	0
 2861 0436 06       		.uleb128 0x6
 2862 0437 04       		.byte	0x4
 2863 0438 D2000000 		.4byte	0xd2
 2864 043c 17       		.uleb128 0x17
 2865 043d F4030000 		.4byte	0x3f4
 2866 0441 00000000 		.4byte	.LFB19
 2867 0445 14000000 		.4byte	.LFE19-.LFB19
 2868 0449 01       		.uleb128 0x1
 2869 044a 9C       		.byte	0x9c
 2870 044b 8A040000 		.4byte	0x48a
 2871 044f 1A       		.uleb128 0x1a
 2872 0450 05040000 		.4byte	0x405
 2873 0454 91010000 		.4byte	.LLST13
 2874 0458 1F       		.uleb128 0x1f
 2875 0459 11040000 		.4byte	0x411
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 107


 2876 045d 01       		.uleb128 0x1
 2877 045e 51       		.byte	0x51
 2878 045f 20       		.uleb128 0x20
 2879 0460 1D040000 		.4byte	0x41d
 2880 0464 01       		.uleb128 0x1
 2881 0465 50       		.byte	0x50
 2882 0466 21       		.uleb128 0x21
 2883 0467 29040000 		.4byte	0x429
 2884 046b 00000020 		.4byte	0x20000000
 2885 046f 22       		.uleb128 0x22
 2886 0470 F7000000 		.4byte	0xf7
 2887 0474 04000000 		.4byte	.LBB32
 2888 0478 02000000 		.4byte	.LBE32-.LBB32
 2889 047c 01       		.byte	0x1
 2890 047d 5708     		.2byte	0x857
 2891 047f 1A       		.uleb128 0x1a
 2892 0480 04010000 		.4byte	0x104
 2893 0484 B2010000 		.4byte	.LLST14
 2894 0488 00       		.byte	0
 2895 0489 00       		.byte	0
 2896 048a 15       		.uleb128 0x15
 2897 048b 0D050000 		.4byte	.LASF55
 2898 048f 01       		.byte	0x1
 2899 0490 7408     		.2byte	0x874
 2900 0492 D2000000 		.4byte	0xd2
 2901 0496 00000000 		.4byte	.LFB20
 2902 049a 12000000 		.4byte	.LFE20-.LFB20
 2903 049e 01       		.uleb128 0x1
 2904 049f 9C       		.byte	0x9c
 2905 04a0 DF040000 		.4byte	0x4df
 2906 04a4 12       		.uleb128 0x12
 2907 04a5 90030000 		.4byte	.LASF51
 2908 04a9 01       		.byte	0x1
 2909 04aa 7408     		.2byte	0x874
 2910 04ac 6B000000 		.4byte	0x6b
 2911 04b0 C6010000 		.4byte	.LLST15
 2912 04b4 23       		.uleb128 0x23
 2913 04b5 00000000 		.4byte	.LASF54
 2914 04b9 01       		.byte	0x1
 2915 04ba 7608     		.2byte	0x876
 2916 04bc 36040000 		.4byte	0x436
 2917 04c0 00000020 		.4byte	0x20000000
 2918 04c4 22       		.uleb128 0x22
 2919 04c5 F7000000 		.4byte	0xf7
 2920 04c9 04000000 		.4byte	.LBB34
 2921 04cd 02000000 		.4byte	.LBE34-.LBB34
 2922 04d1 01       		.byte	0x1
 2923 04d2 7808     		.2byte	0x878
 2924 04d4 1A       		.uleb128 0x1a
 2925 04d5 04010000 		.4byte	0x104
 2926 04d9 E7010000 		.4byte	.LLST16
 2927 04dd 00       		.byte	0
 2928 04de 00       		.byte	0
 2929 04df 15       		.uleb128 0x15
 2930 04e0 81030000 		.4byte	.LASF56
 2931 04e4 01       		.byte	0x1
 2932 04e5 8A08     		.2byte	0x88a
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 108


 2933 04e7 D2000000 		.4byte	0xd2
 2934 04eb 00000000 		.4byte	.LFB21
 2935 04ef 18000000 		.4byte	.LFE21-.LFB21
 2936 04f3 01       		.uleb128 0x1
 2937 04f4 9C       		.byte	0x9c
 2938 04f5 50050000 		.4byte	0x550
 2939 04f9 12       		.uleb128 0x12
 2940 04fa 90030000 		.4byte	.LASF51
 2941 04fe 01       		.byte	0x1
 2942 04ff 8A08     		.2byte	0x88a
 2943 0501 6B000000 		.4byte	0x6b
 2944 0505 FB010000 		.4byte	.LLST17
 2945 0509 1E       		.uleb128 0x1e
 2946 050a 04040000 		.4byte	.LASF52
 2947 050e 01       		.byte	0x1
 2948 050f 8A08     		.2byte	0x88a
 2949 0511 D2000000 		.4byte	0xd2
 2950 0515 01       		.uleb128 0x1
 2951 0516 51       		.byte	0x51
 2952 0517 1D       		.uleb128 0x1d
 2953 0518 CE000000 		.4byte	.LASF53
 2954 051c 01       		.byte	0x1
 2955 051d 8C08     		.2byte	0x88c
 2956 051f D2000000 		.4byte	0xd2
 2957 0523 01       		.uleb128 0x1
 2958 0524 50       		.byte	0x50
 2959 0525 23       		.uleb128 0x23
 2960 0526 00000000 		.4byte	.LASF54
 2961 052a 01       		.byte	0x1
 2962 052b 8D08     		.2byte	0x88d
 2963 052d 36040000 		.4byte	0x436
 2964 0531 00000020 		.4byte	0x20000000
 2965 0535 22       		.uleb128 0x22
 2966 0536 F7000000 		.4byte	0xf7
 2967 053a 04000000 		.4byte	.LBB36
 2968 053e 02000000 		.4byte	.LBE36-.LBB36
 2969 0542 01       		.byte	0x1
 2970 0543 8F08     		.2byte	0x88f
 2971 0545 1A       		.uleb128 0x1a
 2972 0546 04010000 		.4byte	0x104
 2973 054a 1C020000 		.4byte	.LLST18
 2974 054e 00       		.byte	0
 2975 054f 00       		.byte	0
 2976 0550 15       		.uleb128 0x15
 2977 0551 A9040000 		.4byte	.LASF57
 2978 0555 01       		.byte	0x1
 2979 0556 A608     		.2byte	0x8a6
 2980 0558 D2000000 		.4byte	0xd2
 2981 055c 00000000 		.4byte	.LFB22
 2982 0560 14000000 		.4byte	.LFE22-.LFB22
 2983 0564 01       		.uleb128 0x1
 2984 0565 9C       		.byte	0x9c
 2985 0566 A5050000 		.4byte	0x5a5
 2986 056a 12       		.uleb128 0x12
 2987 056b 90030000 		.4byte	.LASF51
 2988 056f 01       		.byte	0x1
 2989 0570 A608     		.2byte	0x8a6
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 109


 2990 0572 6B000000 		.4byte	0x6b
 2991 0576 30020000 		.4byte	.LLST19
 2992 057a 23       		.uleb128 0x23
 2993 057b 00000000 		.4byte	.LASF54
 2994 057f 01       		.byte	0x1
 2995 0580 A808     		.2byte	0x8a8
 2996 0582 36040000 		.4byte	0x436
 2997 0586 00000020 		.4byte	0x20000000
 2998 058a 22       		.uleb128 0x22
 2999 058b F7000000 		.4byte	0xf7
 3000 058f 04000000 		.4byte	.LBB38
 3001 0593 02000000 		.4byte	.LBE38-.LBB38
 3002 0597 01       		.byte	0x1
 3003 0598 AA08     		.2byte	0x8aa
 3004 059a 1A       		.uleb128 0x1a
 3005 059b 04010000 		.4byte	0x104
 3006 059f 51020000 		.4byte	.LLST20
 3007 05a3 00       		.byte	0
 3008 05a4 00       		.byte	0
 3009 05a5 11       		.uleb128 0x11
 3010 05a6 5B040000 		.4byte	.LASF58
 3011 05aa 01       		.byte	0x1
 3012 05ab B908     		.2byte	0x8b9
 3013 05ad 00000000 		.4byte	.LFB23
 3014 05b1 3C000000 		.4byte	.LFE23-.LFB23
 3015 05b5 01       		.uleb128 0x1
 3016 05b6 9C       		.byte	0x9c
 3017 05b7 5A060000 		.4byte	0x65a
 3018 05bb 12       		.uleb128 0x12
 3019 05bc 90030000 		.4byte	.LASF51
 3020 05c0 01       		.byte	0x1
 3021 05c1 B908     		.2byte	0x8b9
 3022 05c3 6B000000 		.4byte	0x6b
 3023 05c7 65020000 		.4byte	.LLST21
 3024 05cb 12       		.uleb128 0x12
 3025 05cc 97030000 		.4byte	.LASF59
 3026 05d0 01       		.byte	0x1
 3027 05d1 B908     		.2byte	0x8b9
 3028 05d3 6B000000 		.4byte	0x6b
 3029 05d7 86020000 		.4byte	.LLST22
 3030 05db 13       		.uleb128 0x13
 3031 05dc 96010000 		.4byte	.LASF32
 3032 05e0 01       		.byte	0x1
 3033 05e1 BB08     		.2byte	0x8bb
 3034 05e3 6B000000 		.4byte	0x6b
 3035 05e7 A7020000 		.4byte	.LLST23
 3036 05eb 13       		.uleb128 0x13
 3037 05ec 09020000 		.4byte	.LASF60
 3038 05f0 01       		.byte	0x1
 3039 05f1 BC08     		.2byte	0x8bc
 3040 05f3 83000000 		.4byte	0x83
 3041 05f7 BA020000 		.4byte	.LLST24
 3042 05fb 13       		.uleb128 0x13
 3043 05fc 8C020000 		.4byte	.LASF27
 3044 0600 01       		.byte	0x1
 3045 0601 BD08     		.2byte	0x8bd
 3046 0603 83000000 		.4byte	0x83
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 110


 3047 0607 D8020000 		.4byte	.LLST25
 3048 060b 19       		.uleb128 0x19
 3049 060c F7000000 		.4byte	0xf7
 3050 0610 0A000000 		.4byte	.LBB40
 3051 0614 02000000 		.4byte	.LBE40-.LBB40
 3052 0618 01       		.byte	0x1
 3053 0619 BF08     		.2byte	0x8bf
 3054 061b 29060000 		.4byte	0x629
 3055 061f 1A       		.uleb128 0x1a
 3056 0620 04010000 		.4byte	0x104
 3057 0624 EB020000 		.4byte	.LLST26
 3058 0628 00       		.byte	0
 3059 0629 19       		.uleb128 0x19
 3060 062a F7000000 		.4byte	0xf7
 3061 062e 10000000 		.4byte	.LBB42
 3062 0632 02000000 		.4byte	.LBE42-.LBB42
 3063 0636 01       		.byte	0x1
 3064 0637 C008     		.2byte	0x8c0
 3065 0639 47060000 		.4byte	0x647
 3066 063d 1A       		.uleb128 0x1a
 3067 063e 04010000 		.4byte	0x104
 3068 0642 FF020000 		.4byte	.LLST27
 3069 0646 00       		.byte	0
 3070 0647 14       		.uleb128 0x14
 3071 0648 16000000 		.4byte	.LVL50
 3072 064c 4C0D0000 		.4byte	0xd4c
 3073 0650 14       		.uleb128 0x14
 3074 0651 36000000 		.4byte	.LVL55
 3075 0655 570D0000 		.4byte	0xd57
 3076 0659 00       		.byte	0
 3077 065a 15       		.uleb128 0x15
 3078 065b 60020000 		.4byte	.LASF61
 3079 065f 01       		.byte	0x1
 3080 0660 DB08     		.2byte	0x8db
 3081 0662 6B000000 		.4byte	0x6b
 3082 0666 00000000 		.4byte	.LFB24
 3083 066a 28000000 		.4byte	.LFE24-.LFB24
 3084 066e 01       		.uleb128 0x1
 3085 066f 9C       		.byte	0x9c
 3086 0670 AF060000 		.4byte	0x6af
 3087 0674 12       		.uleb128 0x12
 3088 0675 90030000 		.4byte	.LASF51
 3089 0679 01       		.byte	0x1
 3090 067a DB08     		.2byte	0x8db
 3091 067c 6B000000 		.4byte	0x6b
 3092 0680 13030000 		.4byte	.LLST28
 3093 0684 13       		.uleb128 0x13
 3094 0685 97030000 		.4byte	.LASF59
 3095 0689 01       		.byte	0x1
 3096 068a DD08     		.2byte	0x8dd
 3097 068c 6B000000 		.4byte	0x6b
 3098 0690 34030000 		.4byte	.LLST29
 3099 0694 22       		.uleb128 0x22
 3100 0695 F7000000 		.4byte	0xf7
 3101 0699 04000000 		.4byte	.LBB44
 3102 069d 02000000 		.4byte	.LBE44-.LBB44
 3103 06a1 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 111


 3104 06a2 DF08     		.2byte	0x8df
 3105 06a4 1A       		.uleb128 0x1a
 3106 06a5 04010000 		.4byte	0x104
 3107 06a9 55030000 		.4byte	.LLST30
 3108 06ad 00       		.byte	0
 3109 06ae 00       		.byte	0
 3110 06af 09       		.uleb128 0x9
 3111 06b0 01050000 		.4byte	.LASF62
 3112 06b4 01       		.byte	0x1
 3113 06b5 F008     		.2byte	0x8f0
 3114 06b7 01       		.byte	0x1
 3115 06b8 C9060000 		.4byte	0x6c9
 3116 06bc 0A       		.uleb128 0xa
 3117 06bd 90030000 		.4byte	.LASF51
 3118 06c1 01       		.byte	0x1
 3119 06c2 F008     		.2byte	0x8f0
 3120 06c4 6B000000 		.4byte	0x6b
 3121 06c8 00       		.byte	0
 3122 06c9 17       		.uleb128 0x17
 3123 06ca AF060000 		.4byte	0x6af
 3124 06ce 00000000 		.4byte	.LFB25
 3125 06d2 14000000 		.4byte	.LFE25-.LFB25
 3126 06d6 01       		.uleb128 0x1
 3127 06d7 9C       		.byte	0x9c
 3128 06d8 E6060000 		.4byte	0x6e6
 3129 06dc 1A       		.uleb128 0x1a
 3130 06dd BC060000 		.4byte	0x6bc
 3131 06e1 69030000 		.4byte	.LLST31
 3132 06e5 00       		.byte	0
 3133 06e6 15       		.uleb128 0x15
 3134 06e7 5D010000 		.4byte	.LASF63
 3135 06eb 01       		.byte	0x1
 3136 06ec 0209     		.2byte	0x902
 3137 06ee 6B000000 		.4byte	0x6b
 3138 06f2 00000000 		.4byte	.LFB26
 3139 06f6 18000000 		.4byte	.LFE26-.LFB26
 3140 06fa 01       		.uleb128 0x1
 3141 06fb 9C       		.byte	0x9c
 3142 06fc 11070000 		.4byte	0x711
 3143 0700 12       		.uleb128 0x12
 3144 0701 90030000 		.4byte	.LASF51
 3145 0705 01       		.byte	0x1
 3146 0706 0209     		.2byte	0x902
 3147 0708 6B000000 		.4byte	0x6b
 3148 070c 8A030000 		.4byte	.LLST32
 3149 0710 00       		.byte	0
 3150 0711 11       		.uleb128 0x11
 3151 0712 C1010000 		.4byte	.LASF64
 3152 0716 01       		.byte	0x1
 3153 0717 1209     		.2byte	0x912
 3154 0719 00000000 		.4byte	.LFB27
 3155 071d 14000000 		.4byte	.LFE27-.LFB27
 3156 0721 01       		.uleb128 0x1
 3157 0722 9C       		.byte	0x9c
 3158 0723 38070000 		.4byte	0x738
 3159 0727 12       		.uleb128 0x12
 3160 0728 90030000 		.4byte	.LASF51
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 112


 3161 072c 01       		.byte	0x1
 3162 072d 1209     		.2byte	0x912
 3163 072f 6B000000 		.4byte	0x6b
 3164 0733 AB030000 		.4byte	.LLST33
 3165 0737 00       		.byte	0
 3166 0738 11       		.uleb128 0x11
 3167 0739 32030000 		.4byte	.LASF65
 3168 073d 01       		.byte	0x1
 3169 073e 2009     		.2byte	0x920
 3170 0740 00000000 		.4byte	.LFB28
 3171 0744 14000000 		.4byte	.LFE28-.LFB28
 3172 0748 01       		.uleb128 0x1
 3173 0749 9C       		.byte	0x9c
 3174 074a 5F070000 		.4byte	0x75f
 3175 074e 12       		.uleb128 0x12
 3176 074f 90030000 		.4byte	.LASF51
 3177 0753 01       		.byte	0x1
 3178 0754 2009     		.2byte	0x920
 3179 0756 6B000000 		.4byte	0x6b
 3180 075a CC030000 		.4byte	.LLST34
 3181 075e 00       		.byte	0
 3182 075f 11       		.uleb128 0x11
 3183 0760 F2030000 		.4byte	.LASF66
 3184 0764 01       		.byte	0x1
 3185 0765 2F09     		.2byte	0x92f
 3186 0767 00000000 		.4byte	.LFB29
 3187 076b 14000000 		.4byte	.LFE29-.LFB29
 3188 076f 01       		.uleb128 0x1
 3189 0770 9C       		.byte	0x9c
 3190 0771 86070000 		.4byte	0x786
 3191 0775 12       		.uleb128 0x12
 3192 0776 90030000 		.4byte	.LASF51
 3193 077a 01       		.byte	0x1
 3194 077b 2F09     		.2byte	0x92f
 3195 077d 6B000000 		.4byte	0x6b
 3196 0781 ED030000 		.4byte	.LLST35
 3197 0785 00       		.byte	0
 3198 0786 17       		.uleb128 0x17
 3199 0787 F7000000 		.4byte	0xf7
 3200 078b 00000000 		.4byte	.LFB30
 3201 078f 04000000 		.4byte	.LFE30-.LFB30
 3202 0793 01       		.uleb128 0x1
 3203 0794 9C       		.byte	0x9c
 3204 0795 A1070000 		.4byte	0x7a1
 3205 0799 1F       		.uleb128 0x1f
 3206 079a 04010000 		.4byte	0x104
 3207 079e 01       		.uleb128 0x1
 3208 079f 50       		.byte	0x50
 3209 07a0 00       		.byte	0
 3210 07a1 16       		.uleb128 0x16
 3211 07a2 34010000 		.4byte	.LASF67
 3212 07a6 01       		.byte	0x1
 3213 07a7 5609     		.2byte	0x956
 3214 07a9 00000000 		.4byte	.LFB31
 3215 07ad 18000000 		.4byte	.LFE31-.LFB31
 3216 07b1 01       		.uleb128 0x1
 3217 07b2 9C       		.byte	0x9c
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 113


 3218 07b3 11       		.uleb128 0x11
 3219 07b4 32060000 		.4byte	.LASF68
 3220 07b8 01       		.byte	0x1
 3221 07b9 6A09     		.2byte	0x96a
 3222 07bb 00000000 		.4byte	.LFB32
 3223 07bf 2C000000 		.4byte	.LFE32-.LFB32
 3224 07c3 01       		.uleb128 0x1
 3225 07c4 9C       		.byte	0x9c
 3226 07c5 EC070000 		.4byte	0x7ec
 3227 07c9 12       		.uleb128 0x12
 3228 07ca B8040000 		.4byte	.LASF69
 3229 07ce 01       		.byte	0x1
 3230 07cf 6A09     		.2byte	0x96a
 3231 07d1 83000000 		.4byte	0x83
 3232 07d5 0E040000 		.4byte	.LLST36
 3233 07d9 14       		.uleb128 0x14
 3234 07da 14000000 		.4byte	.LVL75
 3235 07de 680D0000 		.4byte	0xd68
 3236 07e2 14       		.uleb128 0x14
 3237 07e3 22000000 		.4byte	.LVL77
 3238 07e7 680D0000 		.4byte	0xd68
 3239 07eb 00       		.byte	0
 3240 07ec 11       		.uleb128 0x11
 3241 07ed F8010000 		.4byte	.LASF70
 3242 07f1 01       		.byte	0x1
 3243 07f2 8109     		.2byte	0x981
 3244 07f4 00000000 		.4byte	.LFB33
 3245 07f8 14000000 		.4byte	.LFE33-.LFB33
 3246 07fc 01       		.uleb128 0x1
 3247 07fd 9C       		.byte	0x9c
 3248 07fe 1C080000 		.4byte	0x81c
 3249 0802 12       		.uleb128 0x12
 3250 0803 01070000 		.4byte	.LASF71
 3251 0807 01       		.byte	0x1
 3252 0808 8109     		.2byte	0x981
 3253 080a 77000000 		.4byte	0x77
 3254 080e 2C040000 		.4byte	.LLST37
 3255 0812 14       		.uleb128 0x14
 3256 0813 0C000000 		.4byte	.LVL81
 3257 0817 680D0000 		.4byte	0xd68
 3258 081b 00       		.byte	0
 3259 081c 11       		.uleb128 0x11
 3260 081d A0030000 		.4byte	.LASF72
 3261 0821 01       		.byte	0x1
 3262 0822 4002     		.2byte	0x240
 3263 0824 00000000 		.4byte	.LFB7
 3264 0828 28010000 		.4byte	.LFE7-.LFB7
 3265 082c 01       		.uleb128 0x1
 3266 082d 9C       		.byte	0x9c
 3267 082e 14090000 		.4byte	0x914
 3268 0832 12       		.uleb128 0x12
 3269 0833 85010000 		.4byte	.LASF73
 3270 0837 01       		.byte	0x1
 3271 0838 4002     		.2byte	0x240
 3272 083a 83000000 		.4byte	0x83
 3273 083e 4D040000 		.4byte	.LLST38
 3274 0842 13       		.uleb128 0x13
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 114


 3275 0843 0F000000 		.4byte	.LASF74
 3276 0847 01       		.byte	0x1
 3277 0848 4602     		.2byte	0x246
 3278 084a 6B000000 		.4byte	0x6b
 3279 084e 97040000 		.4byte	.LLST39
 3280 0852 13       		.uleb128 0x13
 3281 0853 0C040000 		.4byte	.LASF75
 3282 0857 01       		.byte	0x1
 3283 0858 4702     		.2byte	0x247
 3284 085a 6B000000 		.4byte	0x6b
 3285 085e D6040000 		.4byte	.LLST40
 3286 0862 13       		.uleb128 0x13
 3287 0863 D1060000 		.4byte	.LASF76
 3288 0867 01       		.byte	0x1
 3289 0868 4802     		.2byte	0x248
 3290 086a 6B000000 		.4byte	0x6b
 3291 086e EA040000 		.4byte	.LLST41
 3292 0872 13       		.uleb128 0x13
 3293 0873 EA000000 		.4byte	.LASF77
 3294 0877 01       		.byte	0x1
 3295 0878 4902     		.2byte	0x249
 3296 087a 6B000000 		.4byte	0x6b
 3297 087e FE040000 		.4byte	.LLST42
 3298 0882 13       		.uleb128 0x13
 3299 0883 A2050000 		.4byte	.LASF78
 3300 0887 01       		.byte	0x1
 3301 0888 4A02     		.2byte	0x24a
 3302 088a 6B000000 		.4byte	0x6b
 3303 088e 11050000 		.4byte	.LLST43
 3304 0892 1D       		.uleb128 0x1d
 3305 0893 96010000 		.4byte	.LASF32
 3306 0897 01       		.byte	0x1
 3307 0898 5502     		.2byte	0x255
 3308 089a 6B000000 		.4byte	0x6b
 3309 089e 02       		.uleb128 0x2
 3310 089f 91       		.byte	0x91
 3311 08a0 60       		.sleb128 -32
 3312 08a1 19       		.uleb128 0x19
 3313 08a2 F7000000 		.4byte	0xf7
 3314 08a6 CE000000 		.4byte	.LBB46
 3315 08aa 02000000 		.4byte	.LBE46-.LBB46
 3316 08ae 01       		.byte	0x1
 3317 08af F502     		.2byte	0x2f5
 3318 08b1 BF080000 		.4byte	0x8bf
 3319 08b5 1A       		.uleb128 0x1a
 3320 08b6 04010000 		.4byte	0x104
 3321 08ba 43050000 		.4byte	.LLST44
 3322 08be 00       		.byte	0
 3323 08bf 14       		.uleb128 0x14
 3324 08c0 0A000000 		.4byte	.LVL83
 3325 08c4 4C0D0000 		.4byte	0xd4c
 3326 08c8 24       		.uleb128 0x24
 3327 08c9 9C000000 		.4byte	.LVL98
 3328 08cd 680D0000 		.4byte	0xd68
 3329 08d1 DB080000 		.4byte	0x8db
 3330 08d5 25       		.uleb128 0x25
 3331 08d6 01       		.uleb128 0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 115


 3332 08d7 50       		.byte	0x50
 3333 08d8 01       		.uleb128 0x1
 3334 08d9 35       		.byte	0x35
 3335 08da 00       		.byte	0
 3336 08db 24       		.uleb128 0x24
 3337 08dc B8000000 		.4byte	.LVL104
 3338 08e0 EC070000 		.4byte	0x7ec
 3339 08e4 EE080000 		.4byte	0x8ee
 3340 08e8 25       		.uleb128 0x25
 3341 08e9 01       		.uleb128 0x1
 3342 08ea 50       		.byte	0x50
 3343 08eb 01       		.uleb128 0x1
 3344 08ec 35       		.byte	0x35
 3345 08ed 00       		.byte	0
 3346 08ee 24       		.uleb128 0x24
 3347 08ef CC000000 		.4byte	.LVL105
 3348 08f3 680D0000 		.4byte	0xd68
 3349 08f7 01090000 		.4byte	0x901
 3350 08fb 25       		.uleb128 0x25
 3351 08fc 01       		.uleb128 0x1
 3352 08fd 50       		.byte	0x50
 3353 08fe 01       		.uleb128 0x1
 3354 08ff 35       		.byte	0x35
 3355 0900 00       		.byte	0
 3356 0901 26       		.uleb128 0x26
 3357 0902 D6000000 		.4byte	.LVL108
 3358 0906 570D0000 		.4byte	0xd57
 3359 090a 25       		.uleb128 0x25
 3360 090b 01       		.uleb128 0x1
 3361 090c 50       		.byte	0x50
 3362 090d 04       		.uleb128 0x4
 3363 090e 91       		.byte	0x91
 3364 090f 60       		.sleb128 -32
 3365 0910 94       		.byte	0x94
 3366 0911 01       		.byte	0x1
 3367 0912 00       		.byte	0
 3368 0913 00       		.byte	0
 3369 0914 15       		.uleb128 0x15
 3370 0915 29050000 		.4byte	.LASF79
 3371 0919 01       		.byte	0x1
 3372 091a D203     		.2byte	0x3d2
 3373 091c A4000000 		.4byte	0xa4
 3374 0920 00000000 		.4byte	.LFB8
 3375 0924 54000000 		.4byte	.LFE8-.LFB8
 3376 0928 01       		.uleb128 0x1
 3377 0929 9C       		.byte	0x9c
 3378 092a 86090000 		.4byte	0x986
 3379 092e 12       		.uleb128 0x12
 3380 092f 91060000 		.4byte	.LASF80
 3381 0933 01       		.byte	0x1
 3382 0934 D203     		.2byte	0x3d2
 3383 0936 83000000 		.4byte	0x83
 3384 093a 57050000 		.4byte	.LLST45
 3385 093e 13       		.uleb128 0x13
 3386 093f DC030000 		.4byte	.LASF44
 3387 0943 01       		.byte	0x1
 3388 0944 D403     		.2byte	0x3d4
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 116


 3389 0946 A4000000 		.4byte	0xa4
 3390 094a 75050000 		.4byte	.LLST46
 3391 094e 19       		.uleb128 0x19
 3392 094f 11010000 		.4byte	0x111
 3393 0953 2E000000 		.4byte	.LBB48
 3394 0957 04000000 		.4byte	.LBE48-.LBB48
 3395 095b 01       		.byte	0x1
 3396 095c ED03     		.2byte	0x3ed
 3397 095e 76090000 		.4byte	0x976
 3398 0962 27       		.uleb128 0x27
 3399 0963 2E000000 		.4byte	.LBB49
 3400 0967 04000000 		.4byte	.LBE49-.LBB49
 3401 096b 18       		.uleb128 0x18
 3402 096c 22010000 		.4byte	0x122
 3403 0970 94050000 		.4byte	.LLST47
 3404 0974 00       		.byte	0
 3405 0975 00       		.byte	0
 3406 0976 26       		.uleb128 0x26
 3407 0977 2E000000 		.4byte	.LVL111
 3408 097b EC070000 		.4byte	0x7ec
 3409 097f 25       		.uleb128 0x25
 3410 0980 01       		.uleb128 0x1
 3411 0981 50       		.byte	0x50
 3412 0982 01       		.uleb128 0x1
 3413 0983 31       		.byte	0x31
 3414 0984 00       		.byte	0
 3415 0985 00       		.byte	0
 3416 0986 11       		.uleb128 0x11
 3417 0987 88040000 		.4byte	.LASF81
 3418 098b 01       		.byte	0x1
 3419 098c B107     		.2byte	0x7b1
 3420 098e 00000000 		.4byte	.LFB12
 3421 0992 44000000 		.4byte	.LFE12-.LFB12
 3422 0996 01       		.uleb128 0x1
 3423 0997 9C       		.byte	0x9c
 3424 0998 CE090000 		.4byte	0x9ce
 3425 099c 12       		.uleb128 0x12
 3426 099d D8040000 		.4byte	.LASF82
 3427 09a1 01       		.byte	0x1
 3428 09a2 B107     		.2byte	0x7b1
 3429 09a4 83000000 		.4byte	0x83
 3430 09a8 AB050000 		.4byte	.LLST48
 3431 09ac 28       		.uleb128 0x28
 3432 09ad 2F010000 		.4byte	0x12f
 3433 09b1 2C000000 		.4byte	.LBB50
 3434 09b5 00000000 		.4byte	.Ldebug_ranges0+0
 3435 09b9 01       		.byte	0x1
 3436 09ba C107     		.2byte	0x7c1
 3437 09bc 26       		.uleb128 0x26
 3438 09bd 2C000000 		.4byte	.LVL119
 3439 09c1 EC070000 		.4byte	0x7ec
 3440 09c5 25       		.uleb128 0x25
 3441 09c6 01       		.uleb128 0x1
 3442 09c7 50       		.byte	0x50
 3443 09c8 03       		.uleb128 0x3
 3444 09c9 0A       		.byte	0xa
 3445 09ca E803     		.2byte	0x3e8
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 117


 3446 09cc 00       		.byte	0
 3447 09cd 00       		.byte	0
 3448 09ce 29       		.uleb128 0x29
 3449 09cf 8A010000 		.4byte	.LASF83
 3450 09d3 01       		.byte	0x1
 3451 09d4 8F09     		.2byte	0x98f
 3452 09d6 00000000 		.4byte	.LFB34
 3453 09da 48000000 		.4byte	.LFE34-.LFB34
 3454 09de 01       		.uleb128 0x1
 3455 09df 9C       		.byte	0x9c
 3456 09e0 F5090000 		.4byte	0x9f5
 3457 09e4 12       		.uleb128 0x12
 3458 09e5 85010000 		.4byte	.LASF73
 3459 09e9 01       		.byte	0x1
 3460 09ea 8F09     		.2byte	0x98f
 3461 09ec 83000000 		.4byte	0x83
 3462 09f0 CC050000 		.4byte	.LLST49
 3463 09f4 00       		.byte	0
 3464 09f5 29       		.uleb128 0x29
 3465 09f6 7E020000 		.4byte	.LASF84
 3466 09fa 01       		.byte	0x1
 3467 09fb CC09     		.2byte	0x9cc
 3468 09fd 00000000 		.4byte	.LFB36
 3469 0a01 60000000 		.4byte	.LFE36-.LFB36
 3470 0a05 01       		.uleb128 0x1
 3471 0a06 9C       		.byte	0x9c
 3472 0a07 C70A0000 		.4byte	0xac7
 3473 0a0b 2A       		.uleb128 0x2a
 3474 0a0c 6900     		.ascii	"i\000"
 3475 0a0e 01       		.byte	0x1
 3476 0a0f CE09     		.2byte	0x9ce
 3477 0a11 83000000 		.4byte	0x83
 3478 0a15 ED050000 		.4byte	.LLST50
 3479 0a19 2B       		.uleb128 0x2b
 3480 0a1a 38010000 		.4byte	0x138
 3481 0a1e 04000000 		.4byte	.LBB68
 3482 0a22 18000000 		.4byte	.Ldebug_ranges0+0x18
 3483 0a26 01       		.byte	0x1
 3484 0a27 D809     		.2byte	0x9d8
 3485 0a29 400A0000 		.4byte	0xa40
 3486 0a2d 2C       		.uleb128 0x2c
 3487 0a2e 45010000 		.4byte	0x145
 3488 0a32 01       		.byte	0x1
 3489 0a33 2D       		.uleb128 0x2d
 3490 0a34 18000000 		.4byte	.Ldebug_ranges0+0x18
 3491 0a38 2C       		.uleb128 0x2c
 3492 0a39 45010000 		.4byte	0x145
 3493 0a3d 01       		.byte	0x1
 3494 0a3e 00       		.byte	0
 3495 0a3f 00       		.byte	0
 3496 0a40 2B       		.uleb128 0x2b
 3497 0a41 F4030000 		.4byte	0x3f4
 3498 0a45 08000000 		.4byte	.LBB75
 3499 0a49 38000000 		.4byte	.Ldebug_ranges0+0x38
 3500 0a4d 01       		.byte	0x1
 3501 0a4e D509     		.2byte	0x9d5
 3502 0a50 7F0A0000 		.4byte	0xa7f
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 118


 3503 0a54 1F       		.uleb128 0x1f
 3504 0a55 11040000 		.4byte	0x411
 3505 0a59 06       		.uleb128 0x6
 3506 0a5a 03       		.byte	0x3
 3507 0a5b 00000000 		.4byte	CySysTickServiceCallbacks
 3508 0a5f 9F       		.byte	0x9f
 3509 0a60 2C       		.uleb128 0x2c
 3510 0a61 05040000 		.4byte	0x405
 3511 0a65 0F       		.byte	0xf
 3512 0a66 2D       		.uleb128 0x2d
 3513 0a67 38000000 		.4byte	.Ldebug_ranges0+0x38
 3514 0a6b 18       		.uleb128 0x18
 3515 0a6c 1D040000 		.4byte	0x41d
 3516 0a70 31060000 		.4byte	.LLST51
 3517 0a74 21       		.uleb128 0x21
 3518 0a75 29040000 		.4byte	0x429
 3519 0a79 00000020 		.4byte	0x20000000
 3520 0a7d 00       		.byte	0
 3521 0a7e 00       		.byte	0
 3522 0a7f 2B       		.uleb128 0x2b
 3523 0a80 AF060000 		.4byte	0x6af
 3524 0a84 2C000000 		.4byte	.LBB83
 3525 0a88 58000000 		.4byte	.Ldebug_ranges0+0x58
 3526 0a8c 01       		.byte	0x1
 3527 0a8d DD09     		.2byte	0x9dd
 3528 0a8f 9A0A0000 		.4byte	0xa9a
 3529 0a93 2C       		.uleb128 0x2c
 3530 0a94 BC060000 		.4byte	0x6bc
 3531 0a98 0F       		.byte	0xf
 3532 0a99 00       		.byte	0
 3533 0a9a 2B       		.uleb128 0x2b
 3534 0a9b 6A010000 		.4byte	0x16a
 3535 0a9f 2E000000 		.4byte	.LBB87
 3536 0aa3 78000000 		.4byte	.Ldebug_ranges0+0x78
 3537 0aa7 01       		.byte	0x1
 3538 0aa8 DB09     		.2byte	0x9db
 3539 0aaa B60A0000 		.4byte	0xab6
 3540 0aae 1F       		.uleb128 0x1f
 3541 0aaf 77010000 		.4byte	0x177
 3542 0ab3 01       		.uleb128 0x1
 3543 0ab4 50       		.byte	0x50
 3544 0ab5 00       		.byte	0
 3545 0ab6 2E       		.uleb128 0x2e
 3546 0ab7 84010000 		.4byte	0x184
 3547 0abb 34000000 		.4byte	.LBB92
 3548 0abf 04000000 		.4byte	.LBE92-.LBB92
 3549 0ac3 01       		.byte	0x1
 3550 0ac4 DC09     		.2byte	0x9dc
 3551 0ac6 00       		.byte	0
 3552 0ac7 16       		.uleb128 0x16
 3553 0ac8 83060000 		.4byte	.LASF85
 3554 0acc 01       		.byte	0x1
 3555 0acd FC09     		.2byte	0x9fc
 3556 0acf 00000000 		.4byte	.LFB38
 3557 0ad3 10000000 		.4byte	.LFE38-.LFB38
 3558 0ad7 01       		.uleb128 0x1
 3559 0ad8 9C       		.byte	0x9c
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 119


 3560 0ad9 16       		.uleb128 0x16
 3561 0ada 44010000 		.4byte	.LASF86
 3562 0ade 01       		.byte	0x1
 3563 0adf 0C0A     		.2byte	0xa0c
 3564 0ae1 00000000 		.4byte	.LFB39
 3565 0ae5 10000000 		.4byte	.LFE39-.LFB39
 3566 0ae9 01       		.uleb128 0x1
 3567 0aea 9C       		.byte	0x9c
 3568 0aeb 11       		.uleb128 0x11
 3569 0aec 53050000 		.4byte	.LASF87
 3570 0af0 01       		.byte	0x1
 3571 0af1 EB09     		.2byte	0x9eb
 3572 0af3 00000000 		.4byte	.LFB37
 3573 0af7 18000000 		.4byte	.LFE37-.LFB37
 3574 0afb 01       		.uleb128 0x1
 3575 0afc 9C       		.byte	0x9c
 3576 0afd 0B0B0000 		.4byte	0xb0b
 3577 0b01 14       		.uleb128 0x14
 3578 0b02 06000000 		.4byte	.LVL133
 3579 0b06 D90A0000 		.4byte	0xad9
 3580 0b0a 00       		.byte	0
 3581 0b0b 11       		.uleb128 0x11
 3582 0b0c CD030000 		.4byte	.LASF88
 3583 0b10 01       		.byte	0x1
 3584 0b11 AF09     		.2byte	0x9af
 3585 0b13 00000000 		.4byte	.LFB35
 3586 0b17 1C000000 		.4byte	.LFE35-.LFB35
 3587 0b1b 01       		.uleb128 0x1
 3588 0b1c 9C       		.byte	0x9c
 3589 0b1d 340B0000 		.4byte	0xb34
 3590 0b21 14       		.uleb128 0x14
 3591 0b22 0E000000 		.4byte	.LVL134
 3592 0b26 F5090000 		.4byte	0x9f5
 3593 0b2a 14       		.uleb128 0x14
 3594 0b2b 16000000 		.4byte	.LVL135
 3595 0b2f EB0A0000 		.4byte	0xaeb
 3596 0b33 00       		.byte	0
 3597 0b34 16       		.uleb128 0x16
 3598 0b35 3A060000 		.4byte	.LASF89
 3599 0b39 01       		.byte	0x1
 3600 0b3a 1C0A     		.2byte	0xa1c
 3601 0b3c 00000000 		.4byte	.LFB40
 3602 0b40 10000000 		.4byte	.LFE40-.LFB40
 3603 0b44 01       		.uleb128 0x1
 3604 0b45 9C       		.byte	0x9c
 3605 0b46 17       		.uleb128 0x17
 3606 0b47 6A010000 		.4byte	0x16a
 3607 0b4b 00000000 		.4byte	.LFB41
 3608 0b4f 10000000 		.4byte	.LFE41-.LFB41
 3609 0b53 01       		.uleb128 0x1
 3610 0b54 9C       		.byte	0x9c
 3611 0b55 630B0000 		.4byte	0xb63
 3612 0b59 1A       		.uleb128 0x1a
 3613 0b5a 77010000 		.4byte	0x177
 3614 0b5e 54060000 		.4byte	.LLST52
 3615 0b62 00       		.byte	0
 3616 0b63 1B       		.uleb128 0x1b
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 120


 3617 0b64 A5010000 		.4byte	.LASF91
 3618 0b68 01       		.byte	0x1
 3619 0b69 3D0A     		.2byte	0xa3d
 3620 0b6b 83000000 		.4byte	0x83
 3621 0b6f 00000000 		.4byte	.LFB42
 3622 0b73 10000000 		.4byte	.LFE42-.LFB42
 3623 0b77 01       		.uleb128 0x1
 3624 0b78 9C       		.byte	0x9c
 3625 0b79 1B       		.uleb128 0x1b
 3626 0b7a 3B040000 		.4byte	.LASF92
 3627 0b7e 01       		.byte	0x1
 3628 0b7f 4D0A     		.2byte	0xa4d
 3629 0b81 83000000 		.4byte	0x83
 3630 0b85 00000000 		.4byte	.LFB43
 3631 0b89 10000000 		.4byte	.LFE43-.LFB43
 3632 0b8d 01       		.uleb128 0x1
 3633 0b8e 9C       		.byte	0x9c
 3634 0b8f 17       		.uleb128 0x17
 3635 0b90 38010000 		.4byte	0x138
 3636 0b94 00000000 		.4byte	.LFB44
 3637 0b98 18000000 		.4byte	.LFE44-.LFB44
 3638 0b9c 01       		.uleb128 0x1
 3639 0b9d 9C       		.byte	0x9c
 3640 0b9e B90B0000 		.4byte	0xbb9
 3641 0ba2 1F       		.uleb128 0x1f
 3642 0ba3 45010000 		.4byte	0x145
 3643 0ba7 01       		.uleb128 0x1
 3644 0ba8 50       		.byte	0x50
 3645 0ba9 2D       		.uleb128 0x2d
 3646 0baa 90000000 		.4byte	.Ldebug_ranges0+0x90
 3647 0bae 1A       		.uleb128 0x1a
 3648 0baf 45010000 		.4byte	0x145
 3649 0bb3 75060000 		.4byte	.LLST53
 3650 0bb7 00       		.byte	0
 3651 0bb8 00       		.byte	0
 3652 0bb9 1B       		.uleb128 0x1b
 3653 0bba AC020000 		.4byte	.LASF93
 3654 0bbe 01       		.byte	0x1
 3655 0bbf 8A0A     		.2byte	0xa8a
 3656 0bc1 83000000 		.4byte	0x83
 3657 0bc5 00000000 		.4byte	.LFB45
 3658 0bc9 10000000 		.4byte	.LFE45-.LFB45
 3659 0bcd 01       		.uleb128 0x1
 3660 0bce 9C       		.byte	0x9c
 3661 0bcf 2F       		.uleb128 0x2f
 3662 0bd0 52010000 		.4byte	0x152
 3663 0bd4 00000000 		.4byte	.LFB49
 3664 0bd8 24000000 		.4byte	.LFE49-.LFB49
 3665 0bdc 01       		.uleb128 0x1
 3666 0bdd 9C       		.byte	0x9c
 3667 0bde 040C0000 		.4byte	0xc04
 3668 0be2 30       		.uleb128 0x30
 3669 0be3 5F010000 		.4byte	0x15f
 3670 0be7 31       		.uleb128 0x31
 3671 0be8 0C000000 		.4byte	.LBB103
 3672 0bec 10000000 		.4byte	.LBE103-.LBB103
 3673 0bf0 FA0B0000 		.4byte	0xbfa
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 121


 3674 0bf4 30       		.uleb128 0x30
 3675 0bf5 5F010000 		.4byte	0x15f
 3676 0bf9 00       		.byte	0
 3677 0bfa 14       		.uleb128 0x14
 3678 0bfb 06000000 		.4byte	.LVL141
 3679 0bff B90B0000 		.4byte	0xbb9
 3680 0c03 00       		.byte	0
 3681 0c04 1C       		.uleb128 0x1c
 3682 0c05 84010000 		.4byte	0x184
 3683 0c09 00000000 		.4byte	.LFB46
 3684 0c0d 0C000000 		.4byte	.LFE46-.LFB46
 3685 0c11 01       		.uleb128 0x1
 3686 0c12 9C       		.byte	0x9c
 3687 0c13 15       		.uleb128 0x15
 3688 0c14 7A050000 		.4byte	.LASF94
 3689 0c18 01       		.byte	0x1
 3690 0c19 BA0A     		.2byte	0xaba
 3691 0c1b EC000000 		.4byte	0xec
 3692 0c1f 00000000 		.4byte	.LFB47
 3693 0c23 10000000 		.4byte	.LFE47-.LFB47
 3694 0c27 01       		.uleb128 0x1
 3695 0c28 9C       		.byte	0x9c
 3696 0c29 5A0C0000 		.4byte	0xc5a
 3697 0c2d 12       		.uleb128 0x12
 3698 0c2e 90030000 		.4byte	.LASF51
 3699 0c32 01       		.byte	0x1
 3700 0c33 BA0A     		.2byte	0xaba
 3701 0c35 83000000 		.4byte	0x83
 3702 0c39 89060000 		.4byte	.LLST54
 3703 0c3d 1E       		.uleb128 0x1e
 3704 0c3e 21040000 		.4byte	.LASF95
 3705 0c42 01       		.byte	0x1
 3706 0c43 BA0A     		.2byte	0xaba
 3707 0c45 EC000000 		.4byte	0xec
 3708 0c49 01       		.uleb128 0x1
 3709 0c4a 51       		.byte	0x51
 3710 0c4b 1D       		.uleb128 0x1d
 3711 0c4c D5000000 		.4byte	.LASF96
 3712 0c50 01       		.byte	0x1
 3713 0c51 BC0A     		.2byte	0xabc
 3714 0c53 EC000000 		.4byte	0xec
 3715 0c57 01       		.uleb128 0x1
 3716 0c58 50       		.byte	0x50
 3717 0c59 00       		.byte	0
 3718 0c5a 15       		.uleb128 0x15
 3719 0c5b CE010000 		.4byte	.LASF97
 3720 0c5f 01       		.byte	0x1
 3721 0c60 D20A     		.2byte	0xad2
 3722 0c62 EC000000 		.4byte	0xec
 3723 0c66 00000000 		.4byte	.LFB48
 3724 0c6a 0C000000 		.4byte	.LFE48-.LFB48
 3725 0c6e 01       		.uleb128 0x1
 3726 0c6f 9C       		.byte	0x9c
 3727 0c70 850C0000 		.4byte	0xc85
 3728 0c74 12       		.uleb128 0x12
 3729 0c75 90030000 		.4byte	.LASF51
 3730 0c79 01       		.byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 122


 3731 0c7a D20A     		.2byte	0xad2
 3732 0c7c 83000000 		.4byte	0x83
 3733 0c80 AA060000 		.4byte	.LLST55
 3734 0c84 00       		.byte	0
 3735 0c85 11       		.uleb128 0x11
 3736 0c86 9E020000 		.4byte	.LASF98
 3737 0c8a 01       		.byte	0x1
 3738 0c8b FF0A     		.2byte	0xaff
 3739 0c8d 00000000 		.4byte	.LFB50
 3740 0c91 70000000 		.4byte	.LFE50-.LFB50
 3741 0c95 01       		.uleb128 0x1
 3742 0c96 9C       		.byte	0x9c
 3743 0c97 AA0C0000 		.4byte	0xcaa
 3744 0c9b 1E       		.uleb128 0x1e
 3745 0c9c B0050000 		.4byte	.LASF99
 3746 0ca0 01       		.byte	0x1
 3747 0ca1 FF0A     		.2byte	0xaff
 3748 0ca3 AA0C0000 		.4byte	0xcaa
 3749 0ca7 01       		.uleb128 0x1
 3750 0ca8 50       		.byte	0x50
 3751 0ca9 00       		.byte	0
 3752 0caa 06       		.uleb128 0x6
 3753 0cab 04       		.byte	0x4
 3754 0cac 83000000 		.4byte	0x83
 3755 0cb0 32       		.uleb128 0x32
 3756 0cb1 EC000000 		.4byte	0xec
 3757 0cb5 C00C0000 		.4byte	0xcc0
 3758 0cb9 33       		.uleb128 0x33
 3759 0cba E5000000 		.4byte	0xe5
 3760 0cbe 04       		.byte	0x4
 3761 0cbf 00       		.byte	0
 3762 0cc0 34       		.uleb128 0x34
 3763 0cc1 8F050000 		.4byte	.LASF100
 3764 0cc5 01       		.byte	0x1
 3765 0cc6 22       		.byte	0x22
 3766 0cc7 B00C0000 		.4byte	0xcb0
 3767 0ccb 05       		.uleb128 0x5
 3768 0ccc 03       		.byte	0x3
 3769 0ccd 00000000 		.4byte	CySysTickCallbacks
 3770 0cd1 35       		.uleb128 0x35
 3771 0cd2 4D040000 		.4byte	.LASF101
 3772 0cd6 01       		.byte	0x1
 3773 0cd7 1B       		.byte	0x1b
 3774 0cd8 83000000 		.4byte	0x83
 3775 0cdc 05       		.uleb128 0x5
 3776 0cdd 03       		.byte	0x3
 3777 0cde 00000000 		.4byte	cydelayFreqHz
 3778 0ce2 35       		.uleb128 0x35
 3779 0ce3 E9010000 		.4byte	.LASF102
 3780 0ce7 01       		.byte	0x1
 3781 0ce8 1C       		.byte	0x1c
 3782 0ce9 83000000 		.4byte	0x83
 3783 0ced 05       		.uleb128 0x5
 3784 0cee 03       		.byte	0x3
 3785 0cef 00000000 		.4byte	cydelayFreqKhz
 3786 0cf3 35       		.uleb128 0x35
 3787 0cf4 64060000 		.4byte	.LASF103
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 123


 3788 0cf8 01       		.byte	0x1
 3789 0cf9 1D       		.byte	0x1d
 3790 0cfa 6B000000 		.4byte	0x6b
 3791 0cfe 05       		.uleb128 0x5
 3792 0cff 03       		.byte	0x3
 3793 0d00 00000000 		.4byte	cydelayFreqMhz
 3794 0d04 35       		.uleb128 0x35
 3795 0d05 71020000 		.4byte	.LASF104
 3796 0d09 01       		.byte	0x1
 3797 0d0a 1E       		.byte	0x1e
 3798 0d0b 83000000 		.4byte	0x83
 3799 0d0f 05       		.uleb128 0x5
 3800 0d10 03       		.byte	0x3
 3801 0d11 00000000 		.4byte	cydelay32kMs
 3802 0d15 35       		.uleb128 0x35
 3803 0d16 16010000 		.4byte	.LASF105
 3804 0d1a 01       		.byte	0x1
 3805 0d1b 35       		.byte	0x35
 3806 0d1c 83000000 		.4byte	0x83
 3807 0d20 05       		.uleb128 0x5
 3808 0d21 03       		.byte	0x3
 3809 0d22 00000000 		.4byte	CySysTickInitVar
 3810 0d26 32       		.uleb128 0x32
 3811 0d27 6B000000 		.4byte	0x6b
 3812 0d2b 360D0000 		.4byte	0xd36
 3813 0d2f 33       		.uleb128 0x33
 3814 0d30 E5000000 		.4byte	0xe5
 3815 0d34 2D       		.byte	0x2d
 3816 0d35 00       		.byte	0
 3817 0d36 35       		.uleb128 0x35
 3818 0d37 2A040000 		.4byte	.LASF106
 3819 0d3b 01       		.byte	0x1
 3820 0d3c 3A       		.byte	0x3a
 3821 0d3d 470D0000 		.4byte	0xd47
 3822 0d41 05       		.uleb128 0x5
 3823 0d42 03       		.byte	0x3
 3824 0d43 00000000 		.4byte	cyImoFreqMhz2Reg
 3825 0d47 36       		.uleb128 0x36
 3826 0d48 260D0000 		.4byte	0xd26
 3827 0d4c 37       		.uleb128 0x37
 3828 0d4d 1B030000 		.4byte	.LASF112
 3829 0d51 03       		.byte	0x3
 3830 0d52 E3       		.byte	0xe3
 3831 0d53 6B000000 		.4byte	0x6b
 3832 0d57 38       		.uleb128 0x38
 3833 0d58 72040000 		.4byte	.LASF107
 3834 0d5c 03       		.byte	0x3
 3835 0d5d E4       		.byte	0xe4
 3836 0d5e 680D0000 		.4byte	0xd68
 3837 0d62 39       		.uleb128 0x39
 3838 0d63 6B000000 		.4byte	0x6b
 3839 0d67 00       		.byte	0
 3840 0d68 3A       		.uleb128 0x3a
 3841 0d69 C5040000 		.4byte	.LASF113
 3842 0d6d 03       		.byte	0x3
 3843 0d6e DA       		.byte	0xda
 3844 0d6f 39       		.uleb128 0x39
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 124


 3845 0d70 83000000 		.4byte	0x83
 3846 0d74 00       		.byte	0
 3847 0d75 00       		.byte	0
 3848              		.section	.debug_abbrev,"",%progbits
 3849              	.Ldebug_abbrev0:
 3850 0000 01       		.uleb128 0x1
 3851 0001 11       		.uleb128 0x11
 3852 0002 01       		.byte	0x1
 3853 0003 25       		.uleb128 0x25
 3854 0004 0E       		.uleb128 0xe
 3855 0005 13       		.uleb128 0x13
 3856 0006 0B       		.uleb128 0xb
 3857 0007 03       		.uleb128 0x3
 3858 0008 0E       		.uleb128 0xe
 3859 0009 1B       		.uleb128 0x1b
 3860 000a 0E       		.uleb128 0xe
 3861 000b 55       		.uleb128 0x55
 3862 000c 17       		.uleb128 0x17
 3863 000d 11       		.uleb128 0x11
 3864 000e 01       		.uleb128 0x1
 3865 000f 10       		.uleb128 0x10
 3866 0010 17       		.uleb128 0x17
 3867 0011 00       		.byte	0
 3868 0012 00       		.byte	0
 3869 0013 02       		.uleb128 0x2
 3870 0014 24       		.uleb128 0x24
 3871 0015 00       		.byte	0
 3872 0016 0B       		.uleb128 0xb
 3873 0017 0B       		.uleb128 0xb
 3874 0018 3E       		.uleb128 0x3e
 3875 0019 0B       		.uleb128 0xb
 3876 001a 03       		.uleb128 0x3
 3877 001b 0E       		.uleb128 0xe
 3878 001c 00       		.byte	0
 3879 001d 00       		.byte	0
 3880 001e 03       		.uleb128 0x3
 3881 001f 24       		.uleb128 0x24
 3882 0020 00       		.byte	0
 3883 0021 0B       		.uleb128 0xb
 3884 0022 0B       		.uleb128 0xb
 3885 0023 3E       		.uleb128 0x3e
 3886 0024 0B       		.uleb128 0xb
 3887 0025 03       		.uleb128 0x3
 3888 0026 08       		.uleb128 0x8
 3889 0027 00       		.byte	0
 3890 0028 00       		.byte	0
 3891 0029 04       		.uleb128 0x4
 3892 002a 16       		.uleb128 0x16
 3893 002b 00       		.byte	0
 3894 002c 03       		.uleb128 0x3
 3895 002d 0E       		.uleb128 0xe
 3896 002e 3A       		.uleb128 0x3a
 3897 002f 0B       		.uleb128 0xb
 3898 0030 3B       		.uleb128 0x3b
 3899 0031 05       		.uleb128 0x5
 3900 0032 49       		.uleb128 0x49
 3901 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 125


 3902 0034 00       		.byte	0
 3903 0035 00       		.byte	0
 3904 0036 05       		.uleb128 0x5
 3905 0037 35       		.uleb128 0x35
 3906 0038 00       		.byte	0
 3907 0039 49       		.uleb128 0x49
 3908 003a 13       		.uleb128 0x13
 3909 003b 00       		.byte	0
 3910 003c 00       		.byte	0
 3911 003d 06       		.uleb128 0x6
 3912 003e 0F       		.uleb128 0xf
 3913 003f 00       		.byte	0
 3914 0040 0B       		.uleb128 0xb
 3915 0041 0B       		.uleb128 0xb
 3916 0042 49       		.uleb128 0x49
 3917 0043 13       		.uleb128 0x13
 3918 0044 00       		.byte	0
 3919 0045 00       		.byte	0
 3920 0046 07       		.uleb128 0x7
 3921 0047 15       		.uleb128 0x15
 3922 0048 00       		.byte	0
 3923 0049 27       		.uleb128 0x27
 3924 004a 19       		.uleb128 0x19
 3925 004b 00       		.byte	0
 3926 004c 00       		.byte	0
 3927 004d 08       		.uleb128 0x8
 3928 004e 16       		.uleb128 0x16
 3929 004f 00       		.byte	0
 3930 0050 03       		.uleb128 0x3
 3931 0051 0E       		.uleb128 0xe
 3932 0052 3A       		.uleb128 0x3a
 3933 0053 0B       		.uleb128 0xb
 3934 0054 3B       		.uleb128 0x3b
 3935 0055 0B       		.uleb128 0xb
 3936 0056 49       		.uleb128 0x49
 3937 0057 13       		.uleb128 0x13
 3938 0058 00       		.byte	0
 3939 0059 00       		.byte	0
 3940 005a 09       		.uleb128 0x9
 3941 005b 2E       		.uleb128 0x2e
 3942 005c 01       		.byte	0x1
 3943 005d 3F       		.uleb128 0x3f
 3944 005e 19       		.uleb128 0x19
 3945 005f 03       		.uleb128 0x3
 3946 0060 0E       		.uleb128 0xe
 3947 0061 3A       		.uleb128 0x3a
 3948 0062 0B       		.uleb128 0xb
 3949 0063 3B       		.uleb128 0x3b
 3950 0064 05       		.uleb128 0x5
 3951 0065 27       		.uleb128 0x27
 3952 0066 19       		.uleb128 0x19
 3953 0067 20       		.uleb128 0x20
 3954 0068 0B       		.uleb128 0xb
 3955 0069 01       		.uleb128 0x1
 3956 006a 13       		.uleb128 0x13
 3957 006b 00       		.byte	0
 3958 006c 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 126


 3959 006d 0A       		.uleb128 0xa
 3960 006e 05       		.uleb128 0x5
 3961 006f 00       		.byte	0
 3962 0070 03       		.uleb128 0x3
 3963 0071 0E       		.uleb128 0xe
 3964 0072 3A       		.uleb128 0x3a
 3965 0073 0B       		.uleb128 0xb
 3966 0074 3B       		.uleb128 0x3b
 3967 0075 05       		.uleb128 0x5
 3968 0076 49       		.uleb128 0x49
 3969 0077 13       		.uleb128 0x13
 3970 0078 00       		.byte	0
 3971 0079 00       		.byte	0
 3972 007a 0B       		.uleb128 0xb
 3973 007b 2E       		.uleb128 0x2e
 3974 007c 01       		.byte	0x1
 3975 007d 3F       		.uleb128 0x3f
 3976 007e 19       		.uleb128 0x19
 3977 007f 03       		.uleb128 0x3
 3978 0080 0E       		.uleb128 0xe
 3979 0081 3A       		.uleb128 0x3a
 3980 0082 0B       		.uleb128 0xb
 3981 0083 3B       		.uleb128 0x3b
 3982 0084 05       		.uleb128 0x5
 3983 0085 27       		.uleb128 0x27
 3984 0086 19       		.uleb128 0x19
 3985 0087 49       		.uleb128 0x49
 3986 0088 13       		.uleb128 0x13
 3987 0089 20       		.uleb128 0x20
 3988 008a 0B       		.uleb128 0xb
 3989 008b 01       		.uleb128 0x1
 3990 008c 13       		.uleb128 0x13
 3991 008d 00       		.byte	0
 3992 008e 00       		.byte	0
 3993 008f 0C       		.uleb128 0xc
 3994 0090 34       		.uleb128 0x34
 3995 0091 00       		.byte	0
 3996 0092 03       		.uleb128 0x3
 3997 0093 0E       		.uleb128 0xe
 3998 0094 3A       		.uleb128 0x3a
 3999 0095 0B       		.uleb128 0xb
 4000 0096 3B       		.uleb128 0x3b
 4001 0097 05       		.uleb128 0x5
 4002 0098 49       		.uleb128 0x49
 4003 0099 13       		.uleb128 0x13
 4004 009a 00       		.byte	0
 4005 009b 00       		.byte	0
 4006 009c 0D       		.uleb128 0xd
 4007 009d 2E       		.uleb128 0x2e
 4008 009e 00       		.byte	0
 4009 009f 3F       		.uleb128 0x3f
 4010 00a0 19       		.uleb128 0x19
 4011 00a1 03       		.uleb128 0x3
 4012 00a2 0E       		.uleb128 0xe
 4013 00a3 3A       		.uleb128 0x3a
 4014 00a4 0B       		.uleb128 0xb
 4015 00a5 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 127


 4016 00a6 05       		.uleb128 0x5
 4017 00a7 27       		.uleb128 0x27
 4018 00a8 19       		.uleb128 0x19
 4019 00a9 20       		.uleb128 0x20
 4020 00aa 0B       		.uleb128 0xb
 4021 00ab 00       		.byte	0
 4022 00ac 00       		.byte	0
 4023 00ad 0E       		.uleb128 0xe
 4024 00ae 2E       		.uleb128 0x2e
 4025 00af 01       		.byte	0x1
 4026 00b0 03       		.uleb128 0x3
 4027 00b1 0E       		.uleb128 0xe
 4028 00b2 3A       		.uleb128 0x3a
 4029 00b3 0B       		.uleb128 0xb
 4030 00b4 3B       		.uleb128 0x3b
 4031 00b5 05       		.uleb128 0x5
 4032 00b6 27       		.uleb128 0x27
 4033 00b7 19       		.uleb128 0x19
 4034 00b8 20       		.uleb128 0x20
 4035 00b9 0B       		.uleb128 0xb
 4036 00ba 01       		.uleb128 0x1
 4037 00bb 13       		.uleb128 0x13
 4038 00bc 00       		.byte	0
 4039 00bd 00       		.byte	0
 4040 00be 0F       		.uleb128 0xf
 4041 00bf 34       		.uleb128 0x34
 4042 00c0 00       		.byte	0
 4043 00c1 03       		.uleb128 0x3
 4044 00c2 08       		.uleb128 0x8
 4045 00c3 3A       		.uleb128 0x3a
 4046 00c4 0B       		.uleb128 0xb
 4047 00c5 3B       		.uleb128 0x3b
 4048 00c6 05       		.uleb128 0x5
 4049 00c7 49       		.uleb128 0x49
 4050 00c8 13       		.uleb128 0x13
 4051 00c9 00       		.byte	0
 4052 00ca 00       		.byte	0
 4053 00cb 10       		.uleb128 0x10
 4054 00cc 2E       		.uleb128 0x2e
 4055 00cd 00       		.byte	0
 4056 00ce 3F       		.uleb128 0x3f
 4057 00cf 19       		.uleb128 0x19
 4058 00d0 03       		.uleb128 0x3
 4059 00d1 0E       		.uleb128 0xe
 4060 00d2 3A       		.uleb128 0x3a
 4061 00d3 0B       		.uleb128 0xb
 4062 00d4 3B       		.uleb128 0x3b
 4063 00d5 0B       		.uleb128 0xb
 4064 00d6 27       		.uleb128 0x27
 4065 00d7 19       		.uleb128 0x19
 4066 00d8 11       		.uleb128 0x11
 4067 00d9 01       		.uleb128 0x1
 4068 00da 12       		.uleb128 0x12
 4069 00db 06       		.uleb128 0x6
 4070 00dc 40       		.uleb128 0x40
 4071 00dd 18       		.uleb128 0x18
 4072 00de 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 128


 4073 00e0 19       		.uleb128 0x19
 4074 00e1 00       		.byte	0
 4075 00e2 00       		.byte	0
 4076 00e3 11       		.uleb128 0x11
 4077 00e4 2E       		.uleb128 0x2e
 4078 00e5 01       		.byte	0x1
 4079 00e6 3F       		.uleb128 0x3f
 4080 00e7 19       		.uleb128 0x19
 4081 00e8 03       		.uleb128 0x3
 4082 00e9 0E       		.uleb128 0xe
 4083 00ea 3A       		.uleb128 0x3a
 4084 00eb 0B       		.uleb128 0xb
 4085 00ec 3B       		.uleb128 0x3b
 4086 00ed 05       		.uleb128 0x5
 4087 00ee 27       		.uleb128 0x27
 4088 00ef 19       		.uleb128 0x19
 4089 00f0 11       		.uleb128 0x11
 4090 00f1 01       		.uleb128 0x1
 4091 00f2 12       		.uleb128 0x12
 4092 00f3 06       		.uleb128 0x6
 4093 00f4 40       		.uleb128 0x40
 4094 00f5 18       		.uleb128 0x18
 4095 00f6 9742     		.uleb128 0x2117
 4096 00f8 19       		.uleb128 0x19
 4097 00f9 01       		.uleb128 0x1
 4098 00fa 13       		.uleb128 0x13
 4099 00fb 00       		.byte	0
 4100 00fc 00       		.byte	0
 4101 00fd 12       		.uleb128 0x12
 4102 00fe 05       		.uleb128 0x5
 4103 00ff 00       		.byte	0
 4104 0100 03       		.uleb128 0x3
 4105 0101 0E       		.uleb128 0xe
 4106 0102 3A       		.uleb128 0x3a
 4107 0103 0B       		.uleb128 0xb
 4108 0104 3B       		.uleb128 0x3b
 4109 0105 05       		.uleb128 0x5
 4110 0106 49       		.uleb128 0x49
 4111 0107 13       		.uleb128 0x13
 4112 0108 02       		.uleb128 0x2
 4113 0109 17       		.uleb128 0x17
 4114 010a 00       		.byte	0
 4115 010b 00       		.byte	0
 4116 010c 13       		.uleb128 0x13
 4117 010d 34       		.uleb128 0x34
 4118 010e 00       		.byte	0
 4119 010f 03       		.uleb128 0x3
 4120 0110 0E       		.uleb128 0xe
 4121 0111 3A       		.uleb128 0x3a
 4122 0112 0B       		.uleb128 0xb
 4123 0113 3B       		.uleb128 0x3b
 4124 0114 05       		.uleb128 0x5
 4125 0115 49       		.uleb128 0x49
 4126 0116 13       		.uleb128 0x13
 4127 0117 02       		.uleb128 0x2
 4128 0118 17       		.uleb128 0x17
 4129 0119 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 129


 4130 011a 00       		.byte	0
 4131 011b 14       		.uleb128 0x14
 4132 011c 898201   		.uleb128 0x4109
 4133 011f 00       		.byte	0
 4134 0120 11       		.uleb128 0x11
 4135 0121 01       		.uleb128 0x1
 4136 0122 31       		.uleb128 0x31
 4137 0123 13       		.uleb128 0x13
 4138 0124 00       		.byte	0
 4139 0125 00       		.byte	0
 4140 0126 15       		.uleb128 0x15
 4141 0127 2E       		.uleb128 0x2e
 4142 0128 01       		.byte	0x1
 4143 0129 3F       		.uleb128 0x3f
 4144 012a 19       		.uleb128 0x19
 4145 012b 03       		.uleb128 0x3
 4146 012c 0E       		.uleb128 0xe
 4147 012d 3A       		.uleb128 0x3a
 4148 012e 0B       		.uleb128 0xb
 4149 012f 3B       		.uleb128 0x3b
 4150 0130 05       		.uleb128 0x5
 4151 0131 27       		.uleb128 0x27
 4152 0132 19       		.uleb128 0x19
 4153 0133 49       		.uleb128 0x49
 4154 0134 13       		.uleb128 0x13
 4155 0135 11       		.uleb128 0x11
 4156 0136 01       		.uleb128 0x1
 4157 0137 12       		.uleb128 0x12
 4158 0138 06       		.uleb128 0x6
 4159 0139 40       		.uleb128 0x40
 4160 013a 18       		.uleb128 0x18
 4161 013b 9742     		.uleb128 0x2117
 4162 013d 19       		.uleb128 0x19
 4163 013e 01       		.uleb128 0x1
 4164 013f 13       		.uleb128 0x13
 4165 0140 00       		.byte	0
 4166 0141 00       		.byte	0
 4167 0142 16       		.uleb128 0x16
 4168 0143 2E       		.uleb128 0x2e
 4169 0144 00       		.byte	0
 4170 0145 3F       		.uleb128 0x3f
 4171 0146 19       		.uleb128 0x19
 4172 0147 03       		.uleb128 0x3
 4173 0148 0E       		.uleb128 0xe
 4174 0149 3A       		.uleb128 0x3a
 4175 014a 0B       		.uleb128 0xb
 4176 014b 3B       		.uleb128 0x3b
 4177 014c 05       		.uleb128 0x5
 4178 014d 27       		.uleb128 0x27
 4179 014e 19       		.uleb128 0x19
 4180 014f 11       		.uleb128 0x11
 4181 0150 01       		.uleb128 0x1
 4182 0151 12       		.uleb128 0x12
 4183 0152 06       		.uleb128 0x6
 4184 0153 40       		.uleb128 0x40
 4185 0154 18       		.uleb128 0x18
 4186 0155 9742     		.uleb128 0x2117
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 130


 4187 0157 19       		.uleb128 0x19
 4188 0158 00       		.byte	0
 4189 0159 00       		.byte	0
 4190 015a 17       		.uleb128 0x17
 4191 015b 2E       		.uleb128 0x2e
 4192 015c 01       		.byte	0x1
 4193 015d 31       		.uleb128 0x31
 4194 015e 13       		.uleb128 0x13
 4195 015f 11       		.uleb128 0x11
 4196 0160 01       		.uleb128 0x1
 4197 0161 12       		.uleb128 0x12
 4198 0162 06       		.uleb128 0x6
 4199 0163 40       		.uleb128 0x40
 4200 0164 18       		.uleb128 0x18
 4201 0165 9742     		.uleb128 0x2117
 4202 0167 19       		.uleb128 0x19
 4203 0168 01       		.uleb128 0x1
 4204 0169 13       		.uleb128 0x13
 4205 016a 00       		.byte	0
 4206 016b 00       		.byte	0
 4207 016c 18       		.uleb128 0x18
 4208 016d 34       		.uleb128 0x34
 4209 016e 00       		.byte	0
 4210 016f 31       		.uleb128 0x31
 4211 0170 13       		.uleb128 0x13
 4212 0171 02       		.uleb128 0x2
 4213 0172 17       		.uleb128 0x17
 4214 0173 00       		.byte	0
 4215 0174 00       		.byte	0
 4216 0175 19       		.uleb128 0x19
 4217 0176 1D       		.uleb128 0x1d
 4218 0177 01       		.byte	0x1
 4219 0178 31       		.uleb128 0x31
 4220 0179 13       		.uleb128 0x13
 4221 017a 11       		.uleb128 0x11
 4222 017b 01       		.uleb128 0x1
 4223 017c 12       		.uleb128 0x12
 4224 017d 06       		.uleb128 0x6
 4225 017e 58       		.uleb128 0x58
 4226 017f 0B       		.uleb128 0xb
 4227 0180 59       		.uleb128 0x59
 4228 0181 05       		.uleb128 0x5
 4229 0182 01       		.uleb128 0x1
 4230 0183 13       		.uleb128 0x13
 4231 0184 00       		.byte	0
 4232 0185 00       		.byte	0
 4233 0186 1A       		.uleb128 0x1a
 4234 0187 05       		.uleb128 0x5
 4235 0188 00       		.byte	0
 4236 0189 31       		.uleb128 0x31
 4237 018a 13       		.uleb128 0x13
 4238 018b 02       		.uleb128 0x2
 4239 018c 17       		.uleb128 0x17
 4240 018d 00       		.byte	0
 4241 018e 00       		.byte	0
 4242 018f 1B       		.uleb128 0x1b
 4243 0190 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 131


 4244 0191 00       		.byte	0
 4245 0192 3F       		.uleb128 0x3f
 4246 0193 19       		.uleb128 0x19
 4247 0194 03       		.uleb128 0x3
 4248 0195 0E       		.uleb128 0xe
 4249 0196 3A       		.uleb128 0x3a
 4250 0197 0B       		.uleb128 0xb
 4251 0198 3B       		.uleb128 0x3b
 4252 0199 05       		.uleb128 0x5
 4253 019a 27       		.uleb128 0x27
 4254 019b 19       		.uleb128 0x19
 4255 019c 49       		.uleb128 0x49
 4256 019d 13       		.uleb128 0x13
 4257 019e 11       		.uleb128 0x11
 4258 019f 01       		.uleb128 0x1
 4259 01a0 12       		.uleb128 0x12
 4260 01a1 06       		.uleb128 0x6
 4261 01a2 40       		.uleb128 0x40
 4262 01a3 18       		.uleb128 0x18
 4263 01a4 9742     		.uleb128 0x2117
 4264 01a6 19       		.uleb128 0x19
 4265 01a7 00       		.byte	0
 4266 01a8 00       		.byte	0
 4267 01a9 1C       		.uleb128 0x1c
 4268 01aa 2E       		.uleb128 0x2e
 4269 01ab 00       		.byte	0
 4270 01ac 31       		.uleb128 0x31
 4271 01ad 13       		.uleb128 0x13
 4272 01ae 11       		.uleb128 0x11
 4273 01af 01       		.uleb128 0x1
 4274 01b0 12       		.uleb128 0x12
 4275 01b1 06       		.uleb128 0x6
 4276 01b2 40       		.uleb128 0x40
 4277 01b3 18       		.uleb128 0x18
 4278 01b4 9742     		.uleb128 0x2117
 4279 01b6 19       		.uleb128 0x19
 4280 01b7 00       		.byte	0
 4281 01b8 00       		.byte	0
 4282 01b9 1D       		.uleb128 0x1d
 4283 01ba 34       		.uleb128 0x34
 4284 01bb 00       		.byte	0
 4285 01bc 03       		.uleb128 0x3
 4286 01bd 0E       		.uleb128 0xe
 4287 01be 3A       		.uleb128 0x3a
 4288 01bf 0B       		.uleb128 0xb
 4289 01c0 3B       		.uleb128 0x3b
 4290 01c1 05       		.uleb128 0x5
 4291 01c2 49       		.uleb128 0x49
 4292 01c3 13       		.uleb128 0x13
 4293 01c4 02       		.uleb128 0x2
 4294 01c5 18       		.uleb128 0x18
 4295 01c6 00       		.byte	0
 4296 01c7 00       		.byte	0
 4297 01c8 1E       		.uleb128 0x1e
 4298 01c9 05       		.uleb128 0x5
 4299 01ca 00       		.byte	0
 4300 01cb 03       		.uleb128 0x3
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 132


 4301 01cc 0E       		.uleb128 0xe
 4302 01cd 3A       		.uleb128 0x3a
 4303 01ce 0B       		.uleb128 0xb
 4304 01cf 3B       		.uleb128 0x3b
 4305 01d0 05       		.uleb128 0x5
 4306 01d1 49       		.uleb128 0x49
 4307 01d2 13       		.uleb128 0x13
 4308 01d3 02       		.uleb128 0x2
 4309 01d4 18       		.uleb128 0x18
 4310 01d5 00       		.byte	0
 4311 01d6 00       		.byte	0
 4312 01d7 1F       		.uleb128 0x1f
 4313 01d8 05       		.uleb128 0x5
 4314 01d9 00       		.byte	0
 4315 01da 31       		.uleb128 0x31
 4316 01db 13       		.uleb128 0x13
 4317 01dc 02       		.uleb128 0x2
 4318 01dd 18       		.uleb128 0x18
 4319 01de 00       		.byte	0
 4320 01df 00       		.byte	0
 4321 01e0 20       		.uleb128 0x20
 4322 01e1 34       		.uleb128 0x34
 4323 01e2 00       		.byte	0
 4324 01e3 31       		.uleb128 0x31
 4325 01e4 13       		.uleb128 0x13
 4326 01e5 02       		.uleb128 0x2
 4327 01e6 18       		.uleb128 0x18
 4328 01e7 00       		.byte	0
 4329 01e8 00       		.byte	0
 4330 01e9 21       		.uleb128 0x21
 4331 01ea 34       		.uleb128 0x34
 4332 01eb 00       		.byte	0
 4333 01ec 31       		.uleb128 0x31
 4334 01ed 13       		.uleb128 0x13
 4335 01ee 1C       		.uleb128 0x1c
 4336 01ef 06       		.uleb128 0x6
 4337 01f0 00       		.byte	0
 4338 01f1 00       		.byte	0
 4339 01f2 22       		.uleb128 0x22
 4340 01f3 1D       		.uleb128 0x1d
 4341 01f4 01       		.byte	0x1
 4342 01f5 31       		.uleb128 0x31
 4343 01f6 13       		.uleb128 0x13
 4344 01f7 11       		.uleb128 0x11
 4345 01f8 01       		.uleb128 0x1
 4346 01f9 12       		.uleb128 0x12
 4347 01fa 06       		.uleb128 0x6
 4348 01fb 58       		.uleb128 0x58
 4349 01fc 0B       		.uleb128 0xb
 4350 01fd 59       		.uleb128 0x59
 4351 01fe 05       		.uleb128 0x5
 4352 01ff 00       		.byte	0
 4353 0200 00       		.byte	0
 4354 0201 23       		.uleb128 0x23
 4355 0202 34       		.uleb128 0x34
 4356 0203 00       		.byte	0
 4357 0204 03       		.uleb128 0x3
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 133


 4358 0205 0E       		.uleb128 0xe
 4359 0206 3A       		.uleb128 0x3a
 4360 0207 0B       		.uleb128 0xb
 4361 0208 3B       		.uleb128 0x3b
 4362 0209 05       		.uleb128 0x5
 4363 020a 49       		.uleb128 0x49
 4364 020b 13       		.uleb128 0x13
 4365 020c 1C       		.uleb128 0x1c
 4366 020d 06       		.uleb128 0x6
 4367 020e 00       		.byte	0
 4368 020f 00       		.byte	0
 4369 0210 24       		.uleb128 0x24
 4370 0211 898201   		.uleb128 0x4109
 4371 0214 01       		.byte	0x1
 4372 0215 11       		.uleb128 0x11
 4373 0216 01       		.uleb128 0x1
 4374 0217 31       		.uleb128 0x31
 4375 0218 13       		.uleb128 0x13
 4376 0219 01       		.uleb128 0x1
 4377 021a 13       		.uleb128 0x13
 4378 021b 00       		.byte	0
 4379 021c 00       		.byte	0
 4380 021d 25       		.uleb128 0x25
 4381 021e 8A8201   		.uleb128 0x410a
 4382 0221 00       		.byte	0
 4383 0222 02       		.uleb128 0x2
 4384 0223 18       		.uleb128 0x18
 4385 0224 9142     		.uleb128 0x2111
 4386 0226 18       		.uleb128 0x18
 4387 0227 00       		.byte	0
 4388 0228 00       		.byte	0
 4389 0229 26       		.uleb128 0x26
 4390 022a 898201   		.uleb128 0x4109
 4391 022d 01       		.byte	0x1
 4392 022e 11       		.uleb128 0x11
 4393 022f 01       		.uleb128 0x1
 4394 0230 31       		.uleb128 0x31
 4395 0231 13       		.uleb128 0x13
 4396 0232 00       		.byte	0
 4397 0233 00       		.byte	0
 4398 0234 27       		.uleb128 0x27
 4399 0235 0B       		.uleb128 0xb
 4400 0236 01       		.byte	0x1
 4401 0237 11       		.uleb128 0x11
 4402 0238 01       		.uleb128 0x1
 4403 0239 12       		.uleb128 0x12
 4404 023a 06       		.uleb128 0x6
 4405 023b 00       		.byte	0
 4406 023c 00       		.byte	0
 4407 023d 28       		.uleb128 0x28
 4408 023e 1D       		.uleb128 0x1d
 4409 023f 00       		.byte	0
 4410 0240 31       		.uleb128 0x31
 4411 0241 13       		.uleb128 0x13
 4412 0242 52       		.uleb128 0x52
 4413 0243 01       		.uleb128 0x1
 4414 0244 55       		.uleb128 0x55
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 134


 4415 0245 17       		.uleb128 0x17
 4416 0246 58       		.uleb128 0x58
 4417 0247 0B       		.uleb128 0xb
 4418 0248 59       		.uleb128 0x59
 4419 0249 05       		.uleb128 0x5
 4420 024a 00       		.byte	0
 4421 024b 00       		.byte	0
 4422 024c 29       		.uleb128 0x29
 4423 024d 2E       		.uleb128 0x2e
 4424 024e 01       		.byte	0x1
 4425 024f 3F       		.uleb128 0x3f
 4426 0250 19       		.uleb128 0x19
 4427 0251 03       		.uleb128 0x3
 4428 0252 0E       		.uleb128 0xe
 4429 0253 3A       		.uleb128 0x3a
 4430 0254 0B       		.uleb128 0xb
 4431 0255 3B       		.uleb128 0x3b
 4432 0256 05       		.uleb128 0x5
 4433 0257 27       		.uleb128 0x27
 4434 0258 19       		.uleb128 0x19
 4435 0259 11       		.uleb128 0x11
 4436 025a 01       		.uleb128 0x1
 4437 025b 12       		.uleb128 0x12
 4438 025c 06       		.uleb128 0x6
 4439 025d 40       		.uleb128 0x40
 4440 025e 18       		.uleb128 0x18
 4441 025f 9642     		.uleb128 0x2116
 4442 0261 19       		.uleb128 0x19
 4443 0262 01       		.uleb128 0x1
 4444 0263 13       		.uleb128 0x13
 4445 0264 00       		.byte	0
 4446 0265 00       		.byte	0
 4447 0266 2A       		.uleb128 0x2a
 4448 0267 34       		.uleb128 0x34
 4449 0268 00       		.byte	0
 4450 0269 03       		.uleb128 0x3
 4451 026a 08       		.uleb128 0x8
 4452 026b 3A       		.uleb128 0x3a
 4453 026c 0B       		.uleb128 0xb
 4454 026d 3B       		.uleb128 0x3b
 4455 026e 05       		.uleb128 0x5
 4456 026f 49       		.uleb128 0x49
 4457 0270 13       		.uleb128 0x13
 4458 0271 02       		.uleb128 0x2
 4459 0272 17       		.uleb128 0x17
 4460 0273 00       		.byte	0
 4461 0274 00       		.byte	0
 4462 0275 2B       		.uleb128 0x2b
 4463 0276 1D       		.uleb128 0x1d
 4464 0277 01       		.byte	0x1
 4465 0278 31       		.uleb128 0x31
 4466 0279 13       		.uleb128 0x13
 4467 027a 52       		.uleb128 0x52
 4468 027b 01       		.uleb128 0x1
 4469 027c 55       		.uleb128 0x55
 4470 027d 17       		.uleb128 0x17
 4471 027e 58       		.uleb128 0x58
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 135


 4472 027f 0B       		.uleb128 0xb
 4473 0280 59       		.uleb128 0x59
 4474 0281 05       		.uleb128 0x5
 4475 0282 01       		.uleb128 0x1
 4476 0283 13       		.uleb128 0x13
 4477 0284 00       		.byte	0
 4478 0285 00       		.byte	0
 4479 0286 2C       		.uleb128 0x2c
 4480 0287 05       		.uleb128 0x5
 4481 0288 00       		.byte	0
 4482 0289 31       		.uleb128 0x31
 4483 028a 13       		.uleb128 0x13
 4484 028b 1C       		.uleb128 0x1c
 4485 028c 0B       		.uleb128 0xb
 4486 028d 00       		.byte	0
 4487 028e 00       		.byte	0
 4488 028f 2D       		.uleb128 0x2d
 4489 0290 0B       		.uleb128 0xb
 4490 0291 01       		.byte	0x1
 4491 0292 55       		.uleb128 0x55
 4492 0293 17       		.uleb128 0x17
 4493 0294 00       		.byte	0
 4494 0295 00       		.byte	0
 4495 0296 2E       		.uleb128 0x2e
 4496 0297 1D       		.uleb128 0x1d
 4497 0298 00       		.byte	0
 4498 0299 31       		.uleb128 0x31
 4499 029a 13       		.uleb128 0x13
 4500 029b 11       		.uleb128 0x11
 4501 029c 01       		.uleb128 0x1
 4502 029d 12       		.uleb128 0x12
 4503 029e 06       		.uleb128 0x6
 4504 029f 58       		.uleb128 0x58
 4505 02a0 0B       		.uleb128 0xb
 4506 02a1 59       		.uleb128 0x59
 4507 02a2 05       		.uleb128 0x5
 4508 02a3 00       		.byte	0
 4509 02a4 00       		.byte	0
 4510 02a5 2F       		.uleb128 0x2f
 4511 02a6 2E       		.uleb128 0x2e
 4512 02a7 01       		.byte	0x1
 4513 02a8 31       		.uleb128 0x31
 4514 02a9 13       		.uleb128 0x13
 4515 02aa 11       		.uleb128 0x11
 4516 02ab 01       		.uleb128 0x1
 4517 02ac 12       		.uleb128 0x12
 4518 02ad 06       		.uleb128 0x6
 4519 02ae 40       		.uleb128 0x40
 4520 02af 18       		.uleb128 0x18
 4521 02b0 9642     		.uleb128 0x2116
 4522 02b2 19       		.uleb128 0x19
 4523 02b3 01       		.uleb128 0x1
 4524 02b4 13       		.uleb128 0x13
 4525 02b5 00       		.byte	0
 4526 02b6 00       		.byte	0
 4527 02b7 30       		.uleb128 0x30
 4528 02b8 34       		.uleb128 0x34
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 136


 4529 02b9 00       		.byte	0
 4530 02ba 31       		.uleb128 0x31
 4531 02bb 13       		.uleb128 0x13
 4532 02bc 00       		.byte	0
 4533 02bd 00       		.byte	0
 4534 02be 31       		.uleb128 0x31
 4535 02bf 0B       		.uleb128 0xb
 4536 02c0 01       		.byte	0x1
 4537 02c1 11       		.uleb128 0x11
 4538 02c2 01       		.uleb128 0x1
 4539 02c3 12       		.uleb128 0x12
 4540 02c4 06       		.uleb128 0x6
 4541 02c5 01       		.uleb128 0x1
 4542 02c6 13       		.uleb128 0x13
 4543 02c7 00       		.byte	0
 4544 02c8 00       		.byte	0
 4545 02c9 32       		.uleb128 0x32
 4546 02ca 01       		.uleb128 0x1
 4547 02cb 01       		.byte	0x1
 4548 02cc 49       		.uleb128 0x49
 4549 02cd 13       		.uleb128 0x13
 4550 02ce 01       		.uleb128 0x1
 4551 02cf 13       		.uleb128 0x13
 4552 02d0 00       		.byte	0
 4553 02d1 00       		.byte	0
 4554 02d2 33       		.uleb128 0x33
 4555 02d3 21       		.uleb128 0x21
 4556 02d4 00       		.byte	0
 4557 02d5 49       		.uleb128 0x49
 4558 02d6 13       		.uleb128 0x13
 4559 02d7 2F       		.uleb128 0x2f
 4560 02d8 0B       		.uleb128 0xb
 4561 02d9 00       		.byte	0
 4562 02da 00       		.byte	0
 4563 02db 34       		.uleb128 0x34
 4564 02dc 34       		.uleb128 0x34
 4565 02dd 00       		.byte	0
 4566 02de 03       		.uleb128 0x3
 4567 02df 0E       		.uleb128 0xe
 4568 02e0 3A       		.uleb128 0x3a
 4569 02e1 0B       		.uleb128 0xb
 4570 02e2 3B       		.uleb128 0x3b
 4571 02e3 0B       		.uleb128 0xb
 4572 02e4 49       		.uleb128 0x49
 4573 02e5 13       		.uleb128 0x13
 4574 02e6 02       		.uleb128 0x2
 4575 02e7 18       		.uleb128 0x18
 4576 02e8 00       		.byte	0
 4577 02e9 00       		.byte	0
 4578 02ea 35       		.uleb128 0x35
 4579 02eb 34       		.uleb128 0x34
 4580 02ec 00       		.byte	0
 4581 02ed 03       		.uleb128 0x3
 4582 02ee 0E       		.uleb128 0xe
 4583 02ef 3A       		.uleb128 0x3a
 4584 02f0 0B       		.uleb128 0xb
 4585 02f1 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 137


 4586 02f2 0B       		.uleb128 0xb
 4587 02f3 49       		.uleb128 0x49
 4588 02f4 13       		.uleb128 0x13
 4589 02f5 3F       		.uleb128 0x3f
 4590 02f6 19       		.uleb128 0x19
 4591 02f7 02       		.uleb128 0x2
 4592 02f8 18       		.uleb128 0x18
 4593 02f9 00       		.byte	0
 4594 02fa 00       		.byte	0
 4595 02fb 36       		.uleb128 0x36
 4596 02fc 26       		.uleb128 0x26
 4597 02fd 00       		.byte	0
 4598 02fe 49       		.uleb128 0x49
 4599 02ff 13       		.uleb128 0x13
 4600 0300 00       		.byte	0
 4601 0301 00       		.byte	0
 4602 0302 37       		.uleb128 0x37
 4603 0303 2E       		.uleb128 0x2e
 4604 0304 00       		.byte	0
 4605 0305 3F       		.uleb128 0x3f
 4606 0306 19       		.uleb128 0x19
 4607 0307 03       		.uleb128 0x3
 4608 0308 0E       		.uleb128 0xe
 4609 0309 3A       		.uleb128 0x3a
 4610 030a 0B       		.uleb128 0xb
 4611 030b 3B       		.uleb128 0x3b
 4612 030c 0B       		.uleb128 0xb
 4613 030d 27       		.uleb128 0x27
 4614 030e 19       		.uleb128 0x19
 4615 030f 49       		.uleb128 0x49
 4616 0310 13       		.uleb128 0x13
 4617 0311 3C       		.uleb128 0x3c
 4618 0312 19       		.uleb128 0x19
 4619 0313 00       		.byte	0
 4620 0314 00       		.byte	0
 4621 0315 38       		.uleb128 0x38
 4622 0316 2E       		.uleb128 0x2e
 4623 0317 01       		.byte	0x1
 4624 0318 3F       		.uleb128 0x3f
 4625 0319 19       		.uleb128 0x19
 4626 031a 03       		.uleb128 0x3
 4627 031b 0E       		.uleb128 0xe
 4628 031c 3A       		.uleb128 0x3a
 4629 031d 0B       		.uleb128 0xb
 4630 031e 3B       		.uleb128 0x3b
 4631 031f 0B       		.uleb128 0xb
 4632 0320 27       		.uleb128 0x27
 4633 0321 19       		.uleb128 0x19
 4634 0322 3C       		.uleb128 0x3c
 4635 0323 19       		.uleb128 0x19
 4636 0324 01       		.uleb128 0x1
 4637 0325 13       		.uleb128 0x13
 4638 0326 00       		.byte	0
 4639 0327 00       		.byte	0
 4640 0328 39       		.uleb128 0x39
 4641 0329 05       		.uleb128 0x5
 4642 032a 00       		.byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 138


 4643 032b 49       		.uleb128 0x49
 4644 032c 13       		.uleb128 0x13
 4645 032d 00       		.byte	0
 4646 032e 00       		.byte	0
 4647 032f 3A       		.uleb128 0x3a
 4648 0330 2E       		.uleb128 0x2e
 4649 0331 01       		.byte	0x1
 4650 0332 3F       		.uleb128 0x3f
 4651 0333 19       		.uleb128 0x19
 4652 0334 03       		.uleb128 0x3
 4653 0335 0E       		.uleb128 0xe
 4654 0336 3A       		.uleb128 0x3a
 4655 0337 0B       		.uleb128 0xb
 4656 0338 3B       		.uleb128 0x3b
 4657 0339 0B       		.uleb128 0xb
 4658 033a 27       		.uleb128 0x27
 4659 033b 19       		.uleb128 0x19
 4660 033c 3C       		.uleb128 0x3c
 4661 033d 19       		.uleb128 0x19
 4662 033e 00       		.byte	0
 4663 033f 00       		.byte	0
 4664 0340 00       		.byte	0
 4665              		.section	.debug_loc,"",%progbits
 4666              	.Ldebug_loc0:
 4667              	.LLST0:
 4668 0000 00000000 		.4byte	.LVL0
 4669 0004 07000000 		.4byte	.LVL1-1
 4670 0008 0100     		.2byte	0x1
 4671 000a 50       		.byte	0x50
 4672 000b 07000000 		.4byte	.LVL1-1
 4673 000f 1A000000 		.4byte	.LVL5
 4674 0013 0100     		.2byte	0x1
 4675 0015 54       		.byte	0x54
 4676 0016 1A000000 		.4byte	.LVL5
 4677 001a 20000000 		.4byte	.LFE4
 4678 001e 0400     		.2byte	0x4
 4679 0020 F3       		.byte	0xf3
 4680 0021 01       		.uleb128 0x1
 4681 0022 50       		.byte	0x50
 4682 0023 9F       		.byte	0x9f
 4683 0024 00000000 		.4byte	0
 4684 0028 00000000 		.4byte	0
 4685              	.LLST1:
 4686 002c 08000000 		.4byte	.LVL1
 4687 0030 19000000 		.4byte	.LVL4-1
 4688 0034 0100     		.2byte	0x1
 4689 0036 50       		.byte	0x50
 4690 0037 00000000 		.4byte	0
 4691 003b 00000000 		.4byte	0
 4692              	.LLST2:
 4693 003f 10000000 		.4byte	.LVL2
 4694 0043 14000000 		.4byte	.LVL3
 4695 0047 0100     		.2byte	0x1
 4696 0049 52       		.byte	0x52
 4697 004a 14000000 		.4byte	.LVL3
 4698 004e 19000000 		.4byte	.LVL4-1
 4699 0052 0100     		.2byte	0x1
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 139


 4700 0054 53       		.byte	0x53
 4701 0055 00000000 		.4byte	0
 4702 0059 00000000 		.4byte	0
 4703              	.LLST3:
 4704 005d 06000000 		.4byte	.LVL6
 4705 0061 0D000000 		.4byte	.LVL8-1
 4706 0065 0100     		.2byte	0x1
 4707 0067 50       		.byte	0x50
 4708 0068 00000000 		.4byte	0
 4709 006c 00000000 		.4byte	0
 4710              	.LLST4:
 4711 0070 0A000000 		.4byte	.LVL7
 4712 0074 12000000 		.4byte	.LVL9
 4713 0078 0500     		.2byte	0x5
 4714 007a 74       		.byte	0x74
 4715 007b 00       		.sleb128 0
 4716 007c 37       		.byte	0x37
 4717 007d 1A       		.byte	0x1a
 4718 007e 9F       		.byte	0x9f
 4719 007f 12000000 		.4byte	.LVL9
 4720 0083 18000000 		.4byte	.LFE5
 4721 0087 0100     		.2byte	0x1
 4722 0089 50       		.byte	0x50
 4723 008a 00000000 		.4byte	0
 4724 008e 00000000 		.4byte	0
 4725              	.LLST5:
 4726 0092 00000000 		.4byte	.LVL10
 4727 0096 07000000 		.4byte	.LVL11-1
 4728 009a 0100     		.2byte	0x1
 4729 009c 50       		.byte	0x50
 4730 009d 07000000 		.4byte	.LVL11-1
 4731 00a1 1E000000 		.4byte	.LVL13
 4732 00a5 0100     		.2byte	0x1
 4733 00a7 55       		.byte	0x55
 4734 00a8 1E000000 		.4byte	.LVL13
 4735 00ac 28000000 		.4byte	.LFE6
 4736 00b0 0400     		.2byte	0x4
 4737 00b2 F3       		.byte	0xf3
 4738 00b3 01       		.uleb128 0x1
 4739 00b4 50       		.byte	0x50
 4740 00b5 9F       		.byte	0x9f
 4741 00b6 00000000 		.4byte	0
 4742 00ba 00000000 		.4byte	0
 4743              	.LLST6:
 4744 00be 08000000 		.4byte	.LVL11
 4745 00c2 1D000000 		.4byte	.LVL12-1
 4746 00c6 0100     		.2byte	0x1
 4747 00c8 50       		.byte	0x50
 4748 00c9 00000000 		.4byte	0
 4749 00cd 00000000 		.4byte	0
 4750              	.LLST7:
 4751 00d1 04000000 		.4byte	.LVL14
 4752 00d5 08000000 		.4byte	.LVL15
 4753 00d9 0500     		.2byte	0x5
 4754 00db 70       		.byte	0x70
 4755 00dc 00       		.sleb128 0
 4756 00dd 31       		.byte	0x31
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 140


 4757 00de 1A       		.byte	0x1a
 4758 00df 9F       		.byte	0x9f
 4759 00e0 08000000 		.4byte	.LVL15
 4760 00e4 10000000 		.4byte	.LFE10
 4761 00e8 0100     		.2byte	0x1
 4762 00ea 50       		.byte	0x50
 4763 00eb 00000000 		.4byte	0
 4764 00ef 00000000 		.4byte	0
 4765              	.LLST8:
 4766 00f3 00000000 		.4byte	.LVL16
 4767 00f7 15000000 		.4byte	.LVL17-1
 4768 00fb 0100     		.2byte	0x1
 4769 00fd 50       		.byte	0x50
 4770 00fe 15000000 		.4byte	.LVL17-1
 4771 0102 2A000000 		.4byte	.LVL19
 4772 0106 0100     		.2byte	0x1
 4773 0108 54       		.byte	0x54
 4774 0109 2A000000 		.4byte	.LVL19
 4775 010d 2C000000 		.4byte	.LVL20
 4776 0111 0100     		.2byte	0x1
 4777 0113 50       		.byte	0x50
 4778 0114 2C000000 		.4byte	.LVL20
 4779 0118 38000000 		.4byte	.LFE11
 4780 011c 0400     		.2byte	0x4
 4781 011e F3       		.byte	0xf3
 4782 011f 01       		.uleb128 0x1
 4783 0120 50       		.byte	0x50
 4784 0121 9F       		.byte	0x9f
 4785 0122 00000000 		.4byte	0
 4786 0126 00000000 		.4byte	0
 4787              	.LLST9:
 4788 012a 16000000 		.4byte	.LVL17
 4789 012e 27000000 		.4byte	.LVL18-1
 4790 0132 0100     		.2byte	0x1
 4791 0134 50       		.byte	0x50
 4792 0135 00000000 		.4byte	0
 4793 0139 00000000 		.4byte	0
 4794              	.LLST10:
 4795 013d 2A000000 		.4byte	.LVL19
 4796 0141 2C000000 		.4byte	.LVL20
 4797 0145 0200     		.2byte	0x2
 4798 0147 30       		.byte	0x30
 4799 0148 9F       		.byte	0x9f
 4800 0149 00000000 		.4byte	0
 4801 014d 00000000 		.4byte	0
 4802              	.LLST11:
 4803 0151 00000000 		.4byte	.LVL21
 4804 0155 08000000 		.4byte	.LVL22
 4805 0159 0100     		.2byte	0x1
 4806 015b 50       		.byte	0x50
 4807 015c 08000000 		.4byte	.LVL22
 4808 0160 14000000 		.4byte	.LFE16
 4809 0164 0100     		.2byte	0x1
 4810 0166 52       		.byte	0x52
 4811 0167 00000000 		.4byte	0
 4812 016b 00000000 		.4byte	0
 4813              	.LLST12:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 141


 4814 016f 0A000000 		.4byte	.LVL23
 4815 0173 0C000000 		.4byte	.LVL24
 4816 0177 0500     		.2byte	0x5
 4817 0179 70       		.byte	0x70
 4818 017a 00       		.sleb128 0
 4819 017b 49       		.byte	0x49
 4820 017c 1A       		.byte	0x1a
 4821 017d 9F       		.byte	0x9f
 4822 017e 0C000000 		.4byte	.LVL24
 4823 0182 14000000 		.4byte	.LFE16
 4824 0186 0100     		.2byte	0x1
 4825 0188 50       		.byte	0x50
 4826 0189 00000000 		.4byte	0
 4827 018d 00000000 		.4byte	0
 4828              	.LLST13:
 4829 0191 00000000 		.4byte	.LVL27
 4830 0195 0A000000 		.4byte	.LVL30
 4831 0199 0100     		.2byte	0x1
 4832 019b 50       		.byte	0x50
 4833 019c 0A000000 		.4byte	.LVL30
 4834 01a0 14000000 		.4byte	.LFE19
 4835 01a4 0400     		.2byte	0x4
 4836 01a6 F3       		.byte	0xf3
 4837 01a7 01       		.uleb128 0x1
 4838 01a8 50       		.byte	0x50
 4839 01a9 9F       		.byte	0x9f
 4840 01aa 00000000 		.4byte	0
 4841 01ae 00000000 		.4byte	0
 4842              	.LLST14:
 4843 01b2 04000000 		.4byte	.LVL28
 4844 01b6 06000000 		.4byte	.LVL29
 4845 01ba 0200     		.2byte	0x2
 4846 01bc 30       		.byte	0x30
 4847 01bd 9F       		.byte	0x9f
 4848 01be 00000000 		.4byte	0
 4849 01c2 00000000 		.4byte	0
 4850              	.LLST15:
 4851 01c6 00000000 		.4byte	.LVL32
 4852 01ca 0A000000 		.4byte	.LVL35
 4853 01ce 0100     		.2byte	0x1
 4854 01d0 50       		.byte	0x50
 4855 01d1 0A000000 		.4byte	.LVL35
 4856 01d5 12000000 		.4byte	.LFE20
 4857 01d9 0400     		.2byte	0x4
 4858 01db F3       		.byte	0xf3
 4859 01dc 01       		.uleb128 0x1
 4860 01dd 50       		.byte	0x50
 4861 01de 9F       		.byte	0x9f
 4862 01df 00000000 		.4byte	0
 4863 01e3 00000000 		.4byte	0
 4864              	.LLST16:
 4865 01e7 04000000 		.4byte	.LVL33
 4866 01eb 06000000 		.4byte	.LVL34
 4867 01ef 0200     		.2byte	0x2
 4868 01f1 30       		.byte	0x30
 4869 01f2 9F       		.byte	0x9f
 4870 01f3 00000000 		.4byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 142


 4871 01f7 00000000 		.4byte	0
 4872              	.LLST17:
 4873 01fb 00000000 		.4byte	.LVL36
 4874 01ff 0A000000 		.4byte	.LVL39
 4875 0203 0100     		.2byte	0x1
 4876 0205 50       		.byte	0x50
 4877 0206 0A000000 		.4byte	.LVL39
 4878 020a 18000000 		.4byte	.LFE21
 4879 020e 0400     		.2byte	0x4
 4880 0210 F3       		.byte	0xf3
 4881 0211 01       		.uleb128 0x1
 4882 0212 50       		.byte	0x50
 4883 0213 9F       		.byte	0x9f
 4884 0214 00000000 		.4byte	0
 4885 0218 00000000 		.4byte	0
 4886              	.LLST18:
 4887 021c 04000000 		.4byte	.LVL37
 4888 0220 06000000 		.4byte	.LVL38
 4889 0224 0200     		.2byte	0x2
 4890 0226 30       		.byte	0x30
 4891 0227 9F       		.byte	0x9f
 4892 0228 00000000 		.4byte	0
 4893 022c 00000000 		.4byte	0
 4894              	.LLST19:
 4895 0230 00000000 		.4byte	.LVL41
 4896 0234 0A000000 		.4byte	.LVL44
 4897 0238 0100     		.2byte	0x1
 4898 023a 50       		.byte	0x50
 4899 023b 0A000000 		.4byte	.LVL44
 4900 023f 14000000 		.4byte	.LFE22
 4901 0243 0400     		.2byte	0x4
 4902 0245 F3       		.byte	0xf3
 4903 0246 01       		.uleb128 0x1
 4904 0247 50       		.byte	0x50
 4905 0248 9F       		.byte	0x9f
 4906 0249 00000000 		.4byte	0
 4907 024d 00000000 		.4byte	0
 4908              	.LLST20:
 4909 0251 04000000 		.4byte	.LVL42
 4910 0255 06000000 		.4byte	.LVL43
 4911 0259 0200     		.2byte	0x2
 4912 025b 30       		.byte	0x30
 4913 025c 9F       		.byte	0x9f
 4914 025d 00000000 		.4byte	0
 4915 0261 00000000 		.4byte	0
 4916              	.LLST21:
 4917 0265 00000000 		.4byte	.LVL45
 4918 0269 15000000 		.4byte	.LVL50-1
 4919 026d 0100     		.2byte	0x1
 4920 026f 50       		.byte	0x50
 4921 0270 15000000 		.4byte	.LVL50-1
 4922 0274 3C000000 		.4byte	.LFE23
 4923 0278 0400     		.2byte	0x4
 4924 027a F3       		.byte	0xf3
 4925 027b 01       		.uleb128 0x1
 4926 027c 50       		.byte	0x50
 4927 027d 9F       		.byte	0x9f
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 143


 4928 027e 00000000 		.4byte	0
 4929 0282 00000000 		.4byte	0
 4930              	.LLST22:
 4931 0286 00000000 		.4byte	.LVL45
 4932 028a 15000000 		.4byte	.LVL50-1
 4933 028e 0100     		.2byte	0x1
 4934 0290 51       		.byte	0x51
 4935 0291 15000000 		.4byte	.LVL50-1
 4936 0295 3C000000 		.4byte	.LFE23
 4937 0299 0400     		.2byte	0x4
 4938 029b F3       		.byte	0xf3
 4939 029c 01       		.uleb128 0x1
 4940 029d 51       		.byte	0x51
 4941 029e 9F       		.byte	0x9f
 4942 029f 00000000 		.4byte	0
 4943 02a3 00000000 		.4byte	0
 4944              	.LLST23:
 4945 02a7 16000000 		.4byte	.LVL50
 4946 02ab 35000000 		.4byte	.LVL55-1
 4947 02af 0100     		.2byte	0x1
 4948 02b1 50       		.byte	0x50
 4949 02b2 00000000 		.4byte	0
 4950 02b6 00000000 		.4byte	0
 4951              	.LLST24:
 4952 02ba 12000000 		.4byte	.LVL49
 4953 02be 22000000 		.4byte	.LVL51
 4954 02c2 0C00     		.2byte	0xc
 4955 02c4 74       		.byte	0x74
 4956 02c5 00       		.sleb128 0
 4957 02c6 33       		.byte	0x33
 4958 02c7 1A       		.byte	0x1a
 4959 02c8 08       		.byte	0x8
 4960 02c9 FF       		.byte	0xff
 4961 02ca 1A       		.byte	0x1a
 4962 02cb 33       		.byte	0x33
 4963 02cc 24       		.byte	0x24
 4964 02cd 23       		.byte	0x23
 4965 02ce 06       		.uleb128 0x6
 4966 02cf 9F       		.byte	0x9f
 4967 02d0 00000000 		.4byte	0
 4968 02d4 00000000 		.4byte	0
 4969              	.LLST25:
 4970 02d8 2C000000 		.4byte	.LVL52
 4971 02dc 35000000 		.4byte	.LVL55-1
 4972 02e0 0100     		.2byte	0x1
 4973 02e2 51       		.byte	0x51
 4974 02e3 00000000 		.4byte	0
 4975 02e7 00000000 		.4byte	0
 4976              	.LLST26:
 4977 02eb 0A000000 		.4byte	.LVL46
 4978 02ef 0C000000 		.4byte	.LVL47
 4979 02f3 0200     		.2byte	0x2
 4980 02f5 30       		.byte	0x30
 4981 02f6 9F       		.byte	0x9f
 4982 02f7 00000000 		.4byte	0
 4983 02fb 00000000 		.4byte	0
 4984              	.LLST27:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 144


 4985 02ff 10000000 		.4byte	.LVL48
 4986 0303 12000000 		.4byte	.LVL49
 4987 0307 0200     		.2byte	0x2
 4988 0309 30       		.byte	0x30
 4989 030a 9F       		.byte	0x9f
 4990 030b 00000000 		.4byte	0
 4991 030f 00000000 		.4byte	0
 4992              	.LLST28:
 4993 0313 00000000 		.4byte	.LVL56
 4994 0317 1E000000 		.4byte	.LVL61
 4995 031b 0100     		.2byte	0x1
 4996 031d 50       		.byte	0x50
 4997 031e 1E000000 		.4byte	.LVL61
 4998 0322 28000000 		.4byte	.LFE24
 4999 0326 0400     		.2byte	0x4
 5000 0328 F3       		.byte	0xf3
 5001 0329 01       		.uleb128 0x1
 5002 032a 50       		.byte	0x50
 5003 032b 9F       		.byte	0x9f
 5004 032c 00000000 		.4byte	0
 5005 0330 00000000 		.4byte	0
 5006              	.LLST29:
 5007 0334 10000000 		.4byte	.LVL59
 5008 0338 1C000000 		.4byte	.LVL60
 5009 033c 0F00     		.2byte	0xf
 5010 033e 71       		.byte	0x71
 5011 033f 00       		.sleb128 0
 5012 0340 70       		.byte	0x70
 5013 0341 00       		.sleb128 0
 5014 0342 33       		.byte	0x33
 5015 0343 1A       		.byte	0x1a
 5016 0344 08       		.byte	0x8
 5017 0345 FF       		.byte	0xff
 5018 0346 1A       		.byte	0x1a
 5019 0347 33       		.byte	0x33
 5020 0348 24       		.byte	0x24
 5021 0349 23       		.byte	0x23
 5022 034a 06       		.uleb128 0x6
 5023 034b 25       		.byte	0x25
 5024 034c 9F       		.byte	0x9f
 5025 034d 00000000 		.4byte	0
 5026 0351 00000000 		.4byte	0
 5027              	.LLST30:
 5028 0355 04000000 		.4byte	.LVL57
 5029 0359 06000000 		.4byte	.LVL58
 5030 035d 0200     		.2byte	0x2
 5031 035f 30       		.byte	0x30
 5032 0360 9F       		.byte	0x9f
 5033 0361 00000000 		.4byte	0
 5034 0365 00000000 		.4byte	0
 5035              	.LLST31:
 5036 0369 00000000 		.4byte	.LVL62
 5037 036d 04000000 		.4byte	.LVL63
 5038 0371 0100     		.2byte	0x1
 5039 0373 50       		.byte	0x50
 5040 0374 04000000 		.4byte	.LVL63
 5041 0378 14000000 		.4byte	.LFE25
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 145


 5042 037c 0400     		.2byte	0x4
 5043 037e F3       		.byte	0xf3
 5044 037f 01       		.uleb128 0x1
 5045 0380 50       		.byte	0x50
 5046 0381 9F       		.byte	0x9f
 5047 0382 00000000 		.4byte	0
 5048 0386 00000000 		.4byte	0
 5049              	.LLST32:
 5050 038a 00000000 		.4byte	.LVL64
 5051 038e 06000000 		.4byte	.LVL65
 5052 0392 0100     		.2byte	0x1
 5053 0394 50       		.byte	0x50
 5054 0395 06000000 		.4byte	.LVL65
 5055 0399 18000000 		.4byte	.LFE26
 5056 039d 0400     		.2byte	0x4
 5057 039f F3       		.byte	0xf3
 5058 03a0 01       		.uleb128 0x1
 5059 03a1 50       		.byte	0x50
 5060 03a2 9F       		.byte	0x9f
 5061 03a3 00000000 		.4byte	0
 5062 03a7 00000000 		.4byte	0
 5063              	.LLST33:
 5064 03ab 00000000 		.4byte	.LVL66
 5065 03af 04000000 		.4byte	.LVL67
 5066 03b3 0100     		.2byte	0x1
 5067 03b5 50       		.byte	0x50
 5068 03b6 04000000 		.4byte	.LVL67
 5069 03ba 14000000 		.4byte	.LFE27
 5070 03be 0400     		.2byte	0x4
 5071 03c0 F3       		.byte	0xf3
 5072 03c1 01       		.uleb128 0x1
 5073 03c2 50       		.byte	0x50
 5074 03c3 9F       		.byte	0x9f
 5075 03c4 00000000 		.4byte	0
 5076 03c8 00000000 		.4byte	0
 5077              	.LLST34:
 5078 03cc 00000000 		.4byte	.LVL68
 5079 03d0 04000000 		.4byte	.LVL69
 5080 03d4 0100     		.2byte	0x1
 5081 03d6 50       		.byte	0x50
 5082 03d7 04000000 		.4byte	.LVL69
 5083 03db 14000000 		.4byte	.LFE28
 5084 03df 0400     		.2byte	0x4
 5085 03e1 F3       		.byte	0xf3
 5086 03e2 01       		.uleb128 0x1
 5087 03e3 50       		.byte	0x50
 5088 03e4 9F       		.byte	0x9f
 5089 03e5 00000000 		.4byte	0
 5090 03e9 00000000 		.4byte	0
 5091              	.LLST35:
 5092 03ed 00000000 		.4byte	.LVL70
 5093 03f1 04000000 		.4byte	.LVL71
 5094 03f5 0100     		.2byte	0x1
 5095 03f7 50       		.byte	0x50
 5096 03f8 04000000 		.4byte	.LVL71
 5097 03fc 14000000 		.4byte	.LFE29
 5098 0400 0400     		.2byte	0x4
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 146


 5099 0402 F3       		.byte	0xf3
 5100 0403 01       		.uleb128 0x1
 5101 0404 50       		.byte	0x50
 5102 0405 9F       		.byte	0x9f
 5103 0406 00000000 		.4byte	0
 5104 040a 00000000 		.4byte	0
 5105              	.LLST36:
 5106 040e 00000000 		.4byte	.LVL73
 5107 0412 04000000 		.4byte	.LVL74
 5108 0416 0100     		.2byte	0x1
 5109 0418 50       		.byte	0x50
 5110 0419 04000000 		.4byte	.LVL74
 5111 041d 22000000 		.4byte	.LVL78
 5112 0421 0100     		.2byte	0x1
 5113 0423 54       		.byte	0x54
 5114 0424 00000000 		.4byte	0
 5115 0428 00000000 		.4byte	0
 5116              	.LLST37:
 5117 042c 00000000 		.4byte	.LVL79
 5118 0430 08000000 		.4byte	.LVL80
 5119 0434 0100     		.2byte	0x1
 5120 0436 50       		.byte	0x50
 5121 0437 08000000 		.4byte	.LVL80
 5122 043b 14000000 		.4byte	.LFE33
 5123 043f 0400     		.2byte	0x4
 5124 0441 F3       		.byte	0xf3
 5125 0442 01       		.uleb128 0x1
 5126 0443 50       		.byte	0x50
 5127 0444 9F       		.byte	0x9f
 5128 0445 00000000 		.4byte	0
 5129 0449 00000000 		.4byte	0
 5130              	.LLST38:
 5131 044d 00000000 		.4byte	.LVL82
 5132 0451 09000000 		.4byte	.LVL83-1
 5133 0455 0100     		.2byte	0x1
 5134 0457 50       		.byte	0x50
 5135 0458 09000000 		.4byte	.LVL83-1
 5136 045c A2000000 		.4byte	.LVL99
 5137 0460 0100     		.2byte	0x1
 5138 0462 55       		.byte	0x55
 5139 0463 A2000000 		.4byte	.LVL99
 5140 0467 CE000000 		.4byte	.LVL106
 5141 046b 0700     		.2byte	0x7
 5142 046d 75       		.byte	0x75
 5143 046e B3998080 		.sleb128 -268432205
 5143      7F
 5144 0473 9F       		.byte	0x9f
 5145 0474 CE000000 		.4byte	.LVL106
 5146 0478 D0000000 		.4byte	.LVL107
 5147 047c 0100     		.2byte	0x1
 5148 047e 55       		.byte	0x55
 5149 047f D0000000 		.4byte	.LVL107
 5150 0483 28010000 		.4byte	.LFE7
 5151 0487 0600     		.2byte	0x6
 5152 0489 91       		.byte	0x91
 5153 048a 5C       		.sleb128 -36
 5154 048b 06       		.byte	0x6
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 147


 5155 048c 23       		.byte	0x23
 5156 048d 03       		.uleb128 0x3
 5157 048e 9F       		.byte	0x9f
 5158 048f 00000000 		.4byte	0
 5159 0493 00000000 		.4byte	0
 5160              	.LLST39:
 5161 0497 24000000 		.4byte	.LVL85
 5162 049b 26000000 		.4byte	.LVL86
 5163 049f 0100     		.2byte	0x1
 5164 04a1 54       		.byte	0x54
 5165 04a2 36000000 		.4byte	.LVL87
 5166 04a6 38000000 		.4byte	.LVL88
 5167 04aa 0100     		.2byte	0x1
 5168 04ac 54       		.byte	0x54
 5169 04ad 48000000 		.4byte	.LVL89
 5170 04b1 4A000000 		.4byte	.LVL90
 5171 04b5 0100     		.2byte	0x1
 5172 04b7 54       		.byte	0x54
 5173 04b8 5A000000 		.4byte	.LVL91
 5174 04bc 5C000000 		.4byte	.LVL92
 5175 04c0 0100     		.2byte	0x1
 5176 04c2 54       		.byte	0x54
 5177 04c3 64000000 		.4byte	.LVL93
 5178 04c7 CE000000 		.4byte	.LVL106
 5179 04cb 0100     		.2byte	0x1
 5180 04cd 54       		.byte	0x54
 5181 04ce 00000000 		.4byte	0
 5182 04d2 00000000 		.4byte	0
 5183              	.LLST40:
 5184 04d6 6C000000 		.4byte	.LVL94
 5185 04da CE000000 		.4byte	.LVL106
 5186 04de 0200     		.2byte	0x2
 5187 04e0 91       		.byte	0x91
 5188 04e1 54       		.sleb128 -44
 5189 04e2 00000000 		.4byte	0
 5190 04e6 00000000 		.4byte	0
 5191              	.LLST41:
 5192 04ea 76000000 		.4byte	.LVL95
 5193 04ee CE000000 		.4byte	.LVL106
 5194 04f2 0200     		.2byte	0x2
 5195 04f4 91       		.byte	0x91
 5196 04f5 58       		.sleb128 -40
 5197 04f6 00000000 		.4byte	0
 5198 04fa 00000000 		.4byte	0
 5199              	.LLST42:
 5200 04fe 8A000000 		.4byte	.LVL96
 5201 0502 96000000 		.4byte	.LVL97
 5202 0506 0100     		.2byte	0x1
 5203 0508 56       		.byte	0x56
 5204 0509 00000000 		.4byte	0
 5205 050d 00000000 		.4byte	0
 5206              	.LLST43:
 5207 0511 A8000000 		.4byte	.LVL100
 5208 0515 AC000000 		.4byte	.LVL101
 5209 0519 0100     		.2byte	0x1
 5210 051b 53       		.byte	0x53
 5211 051c AC000000 		.4byte	.LVL101
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 148


 5212 0520 AE000000 		.4byte	.LVL102
 5213 0524 0400     		.2byte	0x4
 5214 0526 72       		.byte	0x72
 5215 0527 00       		.sleb128 0
 5216 0528 06       		.byte	0x6
 5217 0529 9F       		.byte	0x9f
 5218 052a AE000000 		.4byte	.LVL102
 5219 052e B0000000 		.4byte	.LVL103
 5220 0532 0700     		.2byte	0x7
 5221 0534 0C       		.byte	0xc
 5222 0535 28FF0B40 		.4byte	0x400bff28
 5223 0539 06       		.byte	0x6
 5224 053a 9F       		.byte	0x9f
 5225 053b 00000000 		.4byte	0
 5226 053f 00000000 		.4byte	0
 5227              	.LLST44:
 5228 0543 CE000000 		.4byte	.LVL106
 5229 0547 D0000000 		.4byte	.LVL107
 5230 054b 0200     		.2byte	0x2
 5231 054d 30       		.byte	0x30
 5232 054e 9F       		.byte	0x9f
 5233 054f 00000000 		.4byte	0
 5234 0553 00000000 		.4byte	0
 5235              	.LLST45:
 5236 0557 00000000 		.4byte	.LVL109
 5237 055b 24000000 		.4byte	.LVL110
 5238 055f 0100     		.2byte	0x1
 5239 0561 50       		.byte	0x50
 5240 0562 24000000 		.4byte	.LVL110
 5241 0566 3E000000 		.4byte	.LVL116
 5242 056a 0100     		.2byte	0x1
 5243 056c 54       		.byte	0x54
 5244 056d 00000000 		.4byte	0
 5245 0571 00000000 		.4byte	0
 5246              	.LLST46:
 5247 0575 00000000 		.4byte	.LVL109
 5248 0579 3E000000 		.4byte	.LVL115
 5249 057d 0200     		.2byte	0x2
 5250 057f 30       		.byte	0x30
 5251 0580 9F       		.byte	0x9f
 5252 0581 3E000000 		.4byte	.LVL115
 5253 0585 54000000 		.4byte	.LFE8
 5254 0589 0100     		.2byte	0x1
 5255 058b 50       		.byte	0x50
 5256 058c 00000000 		.4byte	0
 5257 0590 00000000 		.4byte	0
 5258              	.LLST47:
 5259 0594 32000000 		.4byte	.LVL112
 5260 0598 36000000 		.4byte	.LVL113
 5261 059c 0500     		.2byte	0x5
 5262 059e 73       		.byte	0x73
 5263 059f 00       		.sleb128 0
 5264 05a0 31       		.byte	0x31
 5265 05a1 1A       		.byte	0x1a
 5266 05a2 9F       		.byte	0x9f
 5267 05a3 00000000 		.4byte	0
 5268 05a7 00000000 		.4byte	0
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 149


 5269              	.LLST48:
 5270 05ab 00000000 		.4byte	.LVL117
 5271 05af 0E000000 		.4byte	.LVL118
 5272 05b3 0100     		.2byte	0x1
 5273 05b5 50       		.byte	0x50
 5274 05b6 0E000000 		.4byte	.LVL118
 5275 05ba 44000000 		.4byte	.LFE12
 5276 05be 0400     		.2byte	0x4
 5277 05c0 F3       		.byte	0xf3
 5278 05c1 01       		.uleb128 0x1
 5279 05c2 50       		.byte	0x50
 5280 05c3 9F       		.byte	0x9f
 5281 05c4 00000000 		.4byte	0
 5282 05c8 00000000 		.4byte	0
 5283              	.LLST49:
 5284 05cc 00000000 		.4byte	.LVL120
 5285 05d0 18000000 		.4byte	.LVL121
 5286 05d4 0100     		.2byte	0x1
 5287 05d6 50       		.byte	0x50
 5288 05d7 18000000 		.4byte	.LVL121
 5289 05db 48000000 		.4byte	.LFE34
 5290 05df 0400     		.2byte	0x4
 5291 05e1 F3       		.byte	0xf3
 5292 05e2 01       		.uleb128 0x1
 5293 05e3 50       		.byte	0x50
 5294 05e4 9F       		.byte	0x9f
 5295 05e5 00000000 		.4byte	0
 5296 05e9 00000000 		.4byte	0
 5297              	.LLST50:
 5298 05ed 00000000 		.4byte	.LVL124
 5299 05f1 0C000000 		.4byte	.LVL125
 5300 05f5 0200     		.2byte	0x2
 5301 05f7 30       		.byte	0x30
 5302 05f8 9F       		.byte	0x9f
 5303 05f9 0C000000 		.4byte	.LVL125
 5304 05fd 10000000 		.4byte	.LVL126
 5305 0601 0200     		.2byte	0x2
 5306 0603 31       		.byte	0x31
 5307 0604 9F       		.byte	0x9f
 5308 0605 10000000 		.4byte	.LVL126
 5309 0609 12000000 		.4byte	.LVL127
 5310 060d 0200     		.2byte	0x2
 5311 060f 32       		.byte	0x32
 5312 0610 9F       		.byte	0x9f
 5313 0611 12000000 		.4byte	.LVL127
 5314 0615 14000000 		.4byte	.LVL128
 5315 0619 0200     		.2byte	0x2
 5316 061b 34       		.byte	0x34
 5317 061c 9F       		.byte	0x9f
 5318 061d 14000000 		.4byte	.LVL128
 5319 0621 60000000 		.4byte	.LFE36
 5320 0625 0200     		.2byte	0x2
 5321 0627 35       		.byte	0x35
 5322 0628 9F       		.byte	0x9f
 5323 0629 00000000 		.4byte	0
 5324 062d 00000000 		.4byte	0
 5325              	.LLST51:
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 150


 5326 0631 14000000 		.4byte	.LVL128
 5327 0635 16000000 		.4byte	.LVL129
 5328 0639 0500     		.2byte	0x5
 5329 063b 0C       		.byte	0xc
 5330 063c 3C000020 		.4byte	0x2000003c
 5331 0640 16000000 		.4byte	.LVL129
 5332 0644 18000000 		.4byte	.LVL130
 5333 0648 0200     		.2byte	0x2
 5334 064a 73       		.byte	0x73
 5335 064b 00       		.sleb128 0
 5336 064c 00000000 		.4byte	0
 5337 0650 00000000 		.4byte	0
 5338              	.LLST52:
 5339 0654 00000000 		.4byte	.LVL136
 5340 0658 04000000 		.4byte	.LVL137
 5341 065c 0100     		.2byte	0x1
 5342 065e 50       		.byte	0x50
 5343 065f 04000000 		.4byte	.LVL137
 5344 0663 10000000 		.4byte	.LFE41
 5345 0667 0400     		.2byte	0x4
 5346 0669 F3       		.byte	0xf3
 5347 066a 01       		.uleb128 0x1
 5348 066b 50       		.byte	0x50
 5349 066c 9F       		.byte	0x9f
 5350 066d 00000000 		.4byte	0
 5351 0671 00000000 		.4byte	0
 5352              	.LLST53:
 5353 0675 0A000000 		.4byte	.LVL139
 5354 0679 0E000000 		.4byte	.LVL140
 5355 067d 0200     		.2byte	0x2
 5356 067f 31       		.byte	0x31
 5357 0680 9F       		.byte	0x9f
 5358 0681 00000000 		.4byte	0
 5359 0685 00000000 		.4byte	0
 5360              	.LLST54:
 5361 0689 00000000 		.4byte	.LVL143
 5362 068d 06000000 		.4byte	.LVL144
 5363 0691 0100     		.2byte	0x1
 5364 0693 50       		.byte	0x50
 5365 0694 06000000 		.4byte	.LVL144
 5366 0698 10000000 		.4byte	.LFE47
 5367 069c 0400     		.2byte	0x4
 5368 069e F3       		.byte	0xf3
 5369 069f 01       		.uleb128 0x1
 5370 06a0 50       		.byte	0x50
 5371 06a1 9F       		.byte	0x9f
 5372 06a2 00000000 		.4byte	0
 5373 06a6 00000000 		.4byte	0
 5374              	.LLST55:
 5375 06aa 00000000 		.4byte	.LVL145
 5376 06ae 04000000 		.4byte	.LVL146
 5377 06b2 0100     		.2byte	0x1
 5378 06b4 50       		.byte	0x50
 5379 06b5 04000000 		.4byte	.LVL146
 5380 06b9 0C000000 		.4byte	.LFE48
 5381 06bd 0400     		.2byte	0x4
 5382 06bf F3       		.byte	0xf3
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 151


 5383 06c0 01       		.uleb128 0x1
 5384 06c1 50       		.byte	0x50
 5385 06c2 9F       		.byte	0x9f
 5386 06c3 00000000 		.4byte	0
 5387 06c7 00000000 		.4byte	0
 5388              		.section	.debug_aranges,"",%progbits
 5389 0000 9C010000 		.4byte	0x19c
 5390 0004 0200     		.2byte	0x2
 5391 0006 00000000 		.4byte	.Ldebug_info0
 5392 000a 04       		.byte	0x4
 5393 000b 00       		.byte	0
 5394 000c 0000     		.2byte	0
 5395 000e 0000     		.2byte	0
 5396 0010 00000000 		.4byte	.LFB2
 5397 0014 14000000 		.4byte	.LFE2-.LFB2
 5398 0018 00000000 		.4byte	.LFB3
 5399 001c 10000000 		.4byte	.LFE3-.LFB3
 5400 0020 00000000 		.4byte	.LFB4
 5401 0024 20000000 		.4byte	.LFE4-.LFB4
 5402 0028 00000000 		.4byte	.LFB5
 5403 002c 18000000 		.4byte	.LFE5-.LFB5
 5404 0030 00000000 		.4byte	.LFB6
 5405 0034 28000000 		.4byte	.LFE6-.LFB6
 5406 0038 00000000 		.4byte	.LFB9
 5407 003c 24000000 		.4byte	.LFE9-.LFB9
 5408 0040 00000000 		.4byte	.LFB10
 5409 0044 10000000 		.4byte	.LFE10-.LFB10
 5410 0048 00000000 		.4byte	.LFB11
 5411 004c 38000000 		.4byte	.LFE11-.LFB11
 5412 0050 00000000 		.4byte	.LFB13
 5413 0054 20000000 		.4byte	.LFE13-.LFB13
 5414 0058 00000000 		.4byte	.LFB14
 5415 005c 10000000 		.4byte	.LFE14-.LFB14
 5416 0060 00000000 		.4byte	.LFB15
 5417 0064 0C000000 		.4byte	.LFE15-.LFB15
 5418 0068 00000000 		.4byte	.LFB16
 5419 006c 14000000 		.4byte	.LFE16-.LFB16
 5420 0070 00000000 		.4byte	.LFB17
 5421 0074 10000000 		.4byte	.LFE17-.LFB17
 5422 0078 00000000 		.4byte	.LFB18
 5423 007c 0C000000 		.4byte	.LFE18-.LFB18
 5424 0080 00000000 		.4byte	.LFB19
 5425 0084 14000000 		.4byte	.LFE19-.LFB19
 5426 0088 00000000 		.4byte	.LFB20
 5427 008c 12000000 		.4byte	.LFE20-.LFB20
 5428 0090 00000000 		.4byte	.LFB21
 5429 0094 18000000 		.4byte	.LFE21-.LFB21
 5430 0098 00000000 		.4byte	.LFB22
 5431 009c 14000000 		.4byte	.LFE22-.LFB22
 5432 00a0 00000000 		.4byte	.LFB23
 5433 00a4 3C000000 		.4byte	.LFE23-.LFB23
 5434 00a8 00000000 		.4byte	.LFB24
 5435 00ac 28000000 		.4byte	.LFE24-.LFB24
 5436 00b0 00000000 		.4byte	.LFB25
 5437 00b4 14000000 		.4byte	.LFE25-.LFB25
 5438 00b8 00000000 		.4byte	.LFB26
 5439 00bc 18000000 		.4byte	.LFE26-.LFB26
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 152


 5440 00c0 00000000 		.4byte	.LFB27
 5441 00c4 14000000 		.4byte	.LFE27-.LFB27
 5442 00c8 00000000 		.4byte	.LFB28
 5443 00cc 14000000 		.4byte	.LFE28-.LFB28
 5444 00d0 00000000 		.4byte	.LFB29
 5445 00d4 14000000 		.4byte	.LFE29-.LFB29
 5446 00d8 00000000 		.4byte	.LFB30
 5447 00dc 04000000 		.4byte	.LFE30-.LFB30
 5448 00e0 00000000 		.4byte	.LFB31
 5449 00e4 18000000 		.4byte	.LFE31-.LFB31
 5450 00e8 00000000 		.4byte	.LFB32
 5451 00ec 2C000000 		.4byte	.LFE32-.LFB32
 5452 00f0 00000000 		.4byte	.LFB33
 5453 00f4 14000000 		.4byte	.LFE33-.LFB33
 5454 00f8 00000000 		.4byte	.LFB7
 5455 00fc 28010000 		.4byte	.LFE7-.LFB7
 5456 0100 00000000 		.4byte	.LFB8
 5457 0104 54000000 		.4byte	.LFE8-.LFB8
 5458 0108 00000000 		.4byte	.LFB12
 5459 010c 44000000 		.4byte	.LFE12-.LFB12
 5460 0110 00000000 		.4byte	.LFB34
 5461 0114 48000000 		.4byte	.LFE34-.LFB34
 5462 0118 00000000 		.4byte	.LFB36
 5463 011c 60000000 		.4byte	.LFE36-.LFB36
 5464 0120 00000000 		.4byte	.LFB38
 5465 0124 10000000 		.4byte	.LFE38-.LFB38
 5466 0128 00000000 		.4byte	.LFB39
 5467 012c 10000000 		.4byte	.LFE39-.LFB39
 5468 0130 00000000 		.4byte	.LFB37
 5469 0134 18000000 		.4byte	.LFE37-.LFB37
 5470 0138 00000000 		.4byte	.LFB35
 5471 013c 1C000000 		.4byte	.LFE35-.LFB35
 5472 0140 00000000 		.4byte	.LFB40
 5473 0144 10000000 		.4byte	.LFE40-.LFB40
 5474 0148 00000000 		.4byte	.LFB41
 5475 014c 10000000 		.4byte	.LFE41-.LFB41
 5476 0150 00000000 		.4byte	.LFB42
 5477 0154 10000000 		.4byte	.LFE42-.LFB42
 5478 0158 00000000 		.4byte	.LFB43
 5479 015c 10000000 		.4byte	.LFE43-.LFB43
 5480 0160 00000000 		.4byte	.LFB44
 5481 0164 18000000 		.4byte	.LFE44-.LFB44
 5482 0168 00000000 		.4byte	.LFB45
 5483 016c 10000000 		.4byte	.LFE45-.LFB45
 5484 0170 00000000 		.4byte	.LFB49
 5485 0174 24000000 		.4byte	.LFE49-.LFB49
 5486 0178 00000000 		.4byte	.LFB46
 5487 017c 0C000000 		.4byte	.LFE46-.LFB46
 5488 0180 00000000 		.4byte	.LFB47
 5489 0184 10000000 		.4byte	.LFE47-.LFB47
 5490 0188 00000000 		.4byte	.LFB48
 5491 018c 0C000000 		.4byte	.LFE48-.LFB48
 5492 0190 00000000 		.4byte	.LFB50
 5493 0194 70000000 		.4byte	.LFE50-.LFB50
 5494 0198 00000000 		.4byte	0
 5495 019c 00000000 		.4byte	0
 5496              		.section	.debug_ranges,"",%progbits
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 153


 5497              	.Ldebug_ranges0:
 5498 0000 2C000000 		.4byte	.LBB50
 5499 0004 2E000000 		.4byte	.LBE50
 5500 0008 2E000000 		.4byte	.LBB53
 5501 000c 30000000 		.4byte	.LBE53
 5502 0010 00000000 		.4byte	0
 5503 0014 00000000 		.4byte	0
 5504 0018 04000000 		.4byte	.LBB68
 5505 001c 06000000 		.4byte	.LBE68
 5506 0020 18000000 		.4byte	.LBB81
 5507 0024 1E000000 		.4byte	.LBE81
 5508 0028 20000000 		.4byte	.LBB82
 5509 002c 22000000 		.4byte	.LBE82
 5510 0030 00000000 		.4byte	0
 5511 0034 00000000 		.4byte	0
 5512 0038 08000000 		.4byte	.LBB75
 5513 003c 0A000000 		.4byte	.LBE75
 5514 0040 14000000 		.4byte	.LBB79
 5515 0044 16000000 		.4byte	.LBE79
 5516 0048 16000000 		.4byte	.LBB80
 5517 004c 18000000 		.4byte	.LBE80
 5518 0050 00000000 		.4byte	0
 5519 0054 00000000 		.4byte	0
 5520 0058 2C000000 		.4byte	.LBB83
 5521 005c 2E000000 		.4byte	.LBE83
 5522 0060 30000000 		.4byte	.LBB90
 5523 0064 32000000 		.4byte	.LBE90
 5524 0068 38000000 		.4byte	.LBB94
 5525 006c 3C000000 		.4byte	.LBE94
 5526 0070 00000000 		.4byte	0
 5527 0074 00000000 		.4byte	0
 5528 0078 2E000000 		.4byte	.LBB87
 5529 007c 30000000 		.4byte	.LBE87
 5530 0080 32000000 		.4byte	.LBB91
 5531 0084 34000000 		.4byte	.LBE91
 5532 0088 00000000 		.4byte	0
 5533 008c 00000000 		.4byte	0
 5534 0090 04000000 		.4byte	.LBB97
 5535 0094 06000000 		.4byte	.LBE97
 5536 0098 0A000000 		.4byte	.LBB100
 5537 009c 0E000000 		.4byte	.LBE100
 5538 00a0 00000000 		.4byte	0
 5539 00a4 00000000 		.4byte	0
 5540 00a8 00000000 		.4byte	.LFB2
 5541 00ac 14000000 		.4byte	.LFE2
 5542 00b0 00000000 		.4byte	.LFB3
 5543 00b4 10000000 		.4byte	.LFE3
 5544 00b8 00000000 		.4byte	.LFB4
 5545 00bc 20000000 		.4byte	.LFE4
 5546 00c0 00000000 		.4byte	.LFB5
 5547 00c4 18000000 		.4byte	.LFE5
 5548 00c8 00000000 		.4byte	.LFB6
 5549 00cc 28000000 		.4byte	.LFE6
 5550 00d0 00000000 		.4byte	.LFB9
 5551 00d4 24000000 		.4byte	.LFE9
 5552 00d8 00000000 		.4byte	.LFB10
 5553 00dc 10000000 		.4byte	.LFE10
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 154


 5554 00e0 00000000 		.4byte	.LFB11
 5555 00e4 38000000 		.4byte	.LFE11
 5556 00e8 00000000 		.4byte	.LFB13
 5557 00ec 20000000 		.4byte	.LFE13
 5558 00f0 00000000 		.4byte	.LFB14
 5559 00f4 10000000 		.4byte	.LFE14
 5560 00f8 00000000 		.4byte	.LFB15
 5561 00fc 0C000000 		.4byte	.LFE15
 5562 0100 00000000 		.4byte	.LFB16
 5563 0104 14000000 		.4byte	.LFE16
 5564 0108 00000000 		.4byte	.LFB17
 5565 010c 10000000 		.4byte	.LFE17
 5566 0110 00000000 		.4byte	.LFB18
 5567 0114 0C000000 		.4byte	.LFE18
 5568 0118 00000000 		.4byte	.LFB19
 5569 011c 14000000 		.4byte	.LFE19
 5570 0120 00000000 		.4byte	.LFB20
 5571 0124 12000000 		.4byte	.LFE20
 5572 0128 00000000 		.4byte	.LFB21
 5573 012c 18000000 		.4byte	.LFE21
 5574 0130 00000000 		.4byte	.LFB22
 5575 0134 14000000 		.4byte	.LFE22
 5576 0138 00000000 		.4byte	.LFB23
 5577 013c 3C000000 		.4byte	.LFE23
 5578 0140 00000000 		.4byte	.LFB24
 5579 0144 28000000 		.4byte	.LFE24
 5580 0148 00000000 		.4byte	.LFB25
 5581 014c 14000000 		.4byte	.LFE25
 5582 0150 00000000 		.4byte	.LFB26
 5583 0154 18000000 		.4byte	.LFE26
 5584 0158 00000000 		.4byte	.LFB27
 5585 015c 14000000 		.4byte	.LFE27
 5586 0160 00000000 		.4byte	.LFB28
 5587 0164 14000000 		.4byte	.LFE28
 5588 0168 00000000 		.4byte	.LFB29
 5589 016c 14000000 		.4byte	.LFE29
 5590 0170 00000000 		.4byte	.LFB30
 5591 0174 04000000 		.4byte	.LFE30
 5592 0178 00000000 		.4byte	.LFB31
 5593 017c 18000000 		.4byte	.LFE31
 5594 0180 00000000 		.4byte	.LFB32
 5595 0184 2C000000 		.4byte	.LFE32
 5596 0188 00000000 		.4byte	.LFB33
 5597 018c 14000000 		.4byte	.LFE33
 5598 0190 00000000 		.4byte	.LFB7
 5599 0194 28010000 		.4byte	.LFE7
 5600 0198 00000000 		.4byte	.LFB8
 5601 019c 54000000 		.4byte	.LFE8
 5602 01a0 00000000 		.4byte	.LFB12
 5603 01a4 44000000 		.4byte	.LFE12
 5604 01a8 00000000 		.4byte	.LFB34
 5605 01ac 48000000 		.4byte	.LFE34
 5606 01b0 00000000 		.4byte	.LFB36
 5607 01b4 60000000 		.4byte	.LFE36
 5608 01b8 00000000 		.4byte	.LFB38
 5609 01bc 10000000 		.4byte	.LFE38
 5610 01c0 00000000 		.4byte	.LFB39
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 155


 5611 01c4 10000000 		.4byte	.LFE39
 5612 01c8 00000000 		.4byte	.LFB37
 5613 01cc 18000000 		.4byte	.LFE37
 5614 01d0 00000000 		.4byte	.LFB35
 5615 01d4 1C000000 		.4byte	.LFE35
 5616 01d8 00000000 		.4byte	.LFB40
 5617 01dc 10000000 		.4byte	.LFE40
 5618 01e0 00000000 		.4byte	.LFB41
 5619 01e4 10000000 		.4byte	.LFE41
 5620 01e8 00000000 		.4byte	.LFB42
 5621 01ec 10000000 		.4byte	.LFE42
 5622 01f0 00000000 		.4byte	.LFB43
 5623 01f4 10000000 		.4byte	.LFE43
 5624 01f8 00000000 		.4byte	.LFB44
 5625 01fc 18000000 		.4byte	.LFE44
 5626 0200 00000000 		.4byte	.LFB45
 5627 0204 10000000 		.4byte	.LFE45
 5628 0208 00000000 		.4byte	.LFB49
 5629 020c 24000000 		.4byte	.LFE49
 5630 0210 00000000 		.4byte	.LFB46
 5631 0214 0C000000 		.4byte	.LFE46
 5632 0218 00000000 		.4byte	.LFB47
 5633 021c 10000000 		.4byte	.LFE47
 5634 0220 00000000 		.4byte	.LFB48
 5635 0224 0C000000 		.4byte	.LFE48
 5636 0228 00000000 		.4byte	.LFB50
 5637 022c 70000000 		.4byte	.LFE50
 5638 0230 00000000 		.4byte	0
 5639 0234 00000000 		.4byte	0
 5640              		.section	.debug_line,"",%progbits
 5641              	.Ldebug_line0:
 5642 0000 8A050000 		.section	.debug_str,"MS",%progbits,1
 5642      02004D00 
 5642      00000201 
 5642      FB0E0D00 
 5642      01010101 
 5643              	.LASF54:
 5644 0000 72616D56 		.ascii	"ramVectorTable\000"
 5644      6563746F 
 5644      72546162 
 5644      6C6500
 5645              	.LASF74:
 5646 000f 62675472 		.ascii	"bgTrim4\000"
 5646      696D3400 
 5647              	.LASF10:
 5648 0017 75696E74 		.ascii	"uint16\000"
 5648      313600
 5649              	.LASF108:
 5650 001e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 5650      4320342E 
 5650      392E3320 
 5650      32303135 
 5650      30333033 
 5651 0051 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 5651      20726576 
 5651      6973696F 
 5651      6E203232 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 156


 5651      31323230 
 5652 0084 73202D66 		.ascii	"s -ffunction-sections -ffat-lto-objects\000"
 5652      66756E63 
 5652      74696F6E 
 5652      2D736563 
 5652      74696F6E 
 5653              	.LASF46:
 5654 00ac 696E7453 		.ascii	"intState\000"
 5654      74617465 
 5654      00
 5655              	.LASF35:
 5656 00b5 43795379 		.ascii	"CySysClkWriteHfclkDirect\000"
 5656      73436C6B 
 5656      57726974 
 5656      65486663 
 5656      6C6B4469 
 5657              	.LASF53:
 5658 00ce 6F6C6449 		.ascii	"oldIsr\000"
 5658      737200
 5659              	.LASF96:
 5660 00d5 72657456 		.ascii	"retVal\000"
 5660      616C00
 5661              	.LASF45:
 5662 00dc 43794469 		.ascii	"CyDisableInts\000"
 5662      7361626C 
 5662      65496E74 
 5662      7300
 5663              	.LASF77:
 5664 00ea 63757272 		.ascii	"currentImoTrim2Value\000"
 5664      656E7449 
 5664      6D6F5472 
 5664      696D3256 
 5664      616C7565 
 5665              	.LASF7:
 5666 00ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 5666      206C6F6E 
 5666      6720756E 
 5666      7369676E 
 5666      65642069 
 5667              	.LASF105:
 5668 0116 43795379 		.ascii	"CySysTickInitVar\000"
 5668      73546963 
 5668      6B496E69 
 5668      74566172 
 5668      00
 5669              	.LASF47:
 5670 0127 4379456E 		.ascii	"CyEnableInts\000"
 5670      61626C65 
 5670      496E7473 
 5670      00
 5671              	.LASF67:
 5672 0134 4379536F 		.ascii	"CySoftwareReset\000"
 5672      66747761 
 5672      72655265 
 5672      73657400 
 5673              	.LASF86:
 5674 0144 43795379 		.ascii	"CySysTickEnableInterrupt\000"
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 157


 5674      73546963 
 5674      6B456E61 
 5674      626C6549 
 5674      6E746572 
 5675              	.LASF63:
 5676 015d 4379496E 		.ascii	"CyIntGetState\000"
 5676      74476574 
 5676      53746174 
 5676      6500
 5677              	.LASF6:
 5678 016b 6C6F6E67 		.ascii	"long long int\000"
 5678      206C6F6E 
 5678      6720696E 
 5678      7400
 5679              	.LASF0:
 5680 0179 7369676E 		.ascii	"signed char\000"
 5680      65642063 
 5680      68617200 
 5681              	.LASF73:
 5682 0185 66726571 		.ascii	"freq\000"
 5682      00
 5683              	.LASF83:
 5684 018a 43794465 		.ascii	"CyDelayFreq\000"
 5684      6C617946 
 5684      72657100 
 5685              	.LASF32:
 5686 0196 696E7465 		.ascii	"interruptState\000"
 5686      72727570 
 5686      74537461 
 5686      746500
 5687              	.LASF91:
 5688 01a5 43795379 		.ascii	"CySysTickGetReload\000"
 5688      73546963 
 5688      6B476574 
 5688      52656C6F 
 5688      616400
 5689              	.LASF4:
 5690 01b8 6C6F6E67 		.ascii	"long int\000"
 5690      20696E74 
 5690      00
 5691              	.LASF64:
 5692 01c1 4379496E 		.ascii	"CyIntDisable\000"
 5692      74446973 
 5692      61626C65 
 5692      00
 5693              	.LASF97:
 5694 01ce 43795379 		.ascii	"CySysTickGetCallback\000"
 5694      73546963 
 5694      6B476574 
 5694      43616C6C 
 5694      6261636B 
 5695              	.LASF9:
 5696 01e3 75696E74 		.ascii	"uint8\000"
 5696      3800
 5697              	.LASF102:
 5698 01e9 63796465 		.ascii	"cydelayFreqKhz\000"
 5698      6C617946 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 158


 5698      7265714B 
 5698      687A00
 5699              	.LASF70:
 5700 01f8 43794465 		.ascii	"CyDelayUs\000"
 5700      6C617955 
 5700      7300
 5701              	.LASF13:
 5702 0202 646F7562 		.ascii	"double\000"
 5702      6C6500
 5703              	.LASF60:
 5704 0209 73686966 		.ascii	"shift\000"
 5704      7400
 5705              	.LASF28:
 5706 020f 43795379 		.ascii	"CySysLvdClearInterrupt\000"
 5706      734C7664 
 5706      436C6561 
 5706      72496E74 
 5706      65727275 
 5707              	.LASF11:
 5708 0226 75696E74 		.ascii	"uint32\000"
 5708      333200
 5709              	.LASF49:
 5710 022d 43795379 		.ascii	"CySysClkEcoReadStatus\000"
 5710      73436C6B 
 5710      45636F52 
 5710      65616453 
 5710      74617475 
 5711              	.LASF48:
 5712 0243 6D61736B 		.ascii	"mask\000"
 5712      00
 5713              	.LASF42:
 5714 0248 43795379 		.ascii	"CySysClkGetSysclkSource\000"
 5714      73436C6B 
 5714      47657453 
 5714      7973636C 
 5714      6B536F75 
 5715              	.LASF61:
 5716 0260 4379496E 		.ascii	"CyIntGetPriority\000"
 5716      74476574 
 5716      5072696F 
 5716      72697479 
 5716      00
 5717              	.LASF104:
 5718 0271 63796465 		.ascii	"cydelay32kMs\000"
 5718      6C617933 
 5718      326B4D73 
 5718      00
 5719              	.LASF84:
 5720 027e 43795379 		.ascii	"CySysTickInit\000"
 5720      73546963 
 5720      6B496E69 
 5720      7400
 5721              	.LASF27:
 5722 028c 76616C75 		.ascii	"value\000"
 5722      6500
 5723              	.LASF24:
 5724 0292 636C6F63 		.ascii	"clockSource\000"
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 159


 5724      6B536F75 
 5724      72636500 
 5725              	.LASF98:
 5726 029e 43794765 		.ascii	"CyGetUniqueId\000"
 5726      74556E69 
 5726      71756549 
 5726      6400
 5727              	.LASF93:
 5728 02ac 43795379 		.ascii	"CySysTickGetCountFlag\000"
 5728      73546963 
 5728      6B476574 
 5728      436F756E 
 5728      74466C61 
 5729              	.LASF8:
 5730 02c2 756E7369 		.ascii	"unsigned int\000"
 5730      676E6564 
 5730      20696E74 
 5730      00
 5731              	.LASF29:
 5732 02cf 43795379 		.ascii	"CySysTickClear\000"
 5732      73546963 
 5732      6B436C65 
 5732      617200
 5733              	.LASF5:
 5734 02de 6C6F6E67 		.ascii	"long unsigned int\000"
 5734      20756E73 
 5734      69676E65 
 5734      6420696E 
 5734      7400
 5735              	.LASF90:
 5736 02f0 43795379 		.ascii	"CySysLvdGetInterruptSource\000"
 5736      734C7664 
 5736      47657449 
 5736      6E746572 
 5736      72757074 
 5737              	.LASF31:
 5738 030b 43795379 		.ascii	"CySysClkImoStop\000"
 5738      73436C6B 
 5738      496D6F53 
 5738      746F7000 
 5739              	.LASF112:
 5740 031b 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5740      74657243 
 5740      72697469 
 5740      63616C53 
 5740      65637469 
 5741              	.LASF65:
 5742 0332 4379496E 		.ascii	"CyIntSetPending\000"
 5742      74536574 
 5742      50656E64 
 5742      696E6700 
 5743              	.LASF43:
 5744 0342 43795379 		.ascii	"CySysGetResetReason\000"
 5744      73476574 
 5744      52657365 
 5744      74526561 
 5744      736F6E00 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 160


 5745              	.LASF3:
 5746 0356 73686F72 		.ascii	"short unsigned int\000"
 5746      7420756E 
 5746      7369676E 
 5746      65642069 
 5746      6E7400
 5747              	.LASF22:
 5748 0369 43795379 		.ascii	"CySysTickSetClockSource\000"
 5748      73546963 
 5748      6B536574 
 5748      436C6F63 
 5748      6B536F75 
 5749              	.LASF56:
 5750 0381 4379496E 		.ascii	"CyIntSetVector\000"
 5750      74536574 
 5750      56656374 
 5750      6F7200
 5751              	.LASF51:
 5752 0390 6E756D62 		.ascii	"number\000"
 5752      657200
 5753              	.LASF59:
 5754 0397 7072696F 		.ascii	"priority\000"
 5754      72697479 
 5754      00
 5755              	.LASF72:
 5756 03a0 43795379 		.ascii	"CySysClkWriteImoFreq\000"
 5756      73436C6B 
 5756      57726974 
 5756      65496D6F 
 5756      46726571 
 5757              	.LASF50:
 5758 03b5 4379496E 		.ascii	"CyIntSetSysVector\000"
 5758      74536574 
 5758      53797356 
 5758      6563746F 
 5758      7200
 5759              	.LASF17:
 5760 03c7 72656733 		.ascii	"reg32\000"
 5760      3200
 5761              	.LASF88:
 5762 03cd 43795379 		.ascii	"CySysTickStart\000"
 5762      73546963 
 5762      6B537461 
 5762      727400
 5763              	.LASF44:
 5764 03dc 72657475 		.ascii	"returnStatus\000"
 5764      726E5374 
 5764      61747573 
 5764      00
 5765              	.LASF19:
 5766 03e9 73697A65 		.ascii	"sizetype\000"
 5766      74797065 
 5766      00
 5767              	.LASF66:
 5768 03f2 4379496E 		.ascii	"CyIntClearPending\000"
 5768      74436C65 
 5768      61725065 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 161


 5768      6E64696E 
 5768      6700
 5769              	.LASF52:
 5770 0404 61646472 		.ascii	"address\000"
 5770      65737300 
 5771              	.LASF75:
 5772 040c 62675472 		.ascii	"bgTrim5\000"
 5772      696D3500 
 5773              	.LASF34:
 5774 0414 73797363 		.ascii	"sysclkSource\000"
 5774      6C6B536F 
 5774      75726365 
 5774      00
 5775              	.LASF95:
 5776 0421 66756E63 		.ascii	"function\000"
 5776      74696F6E 
 5776      00
 5777              	.LASF106:
 5778 042a 6379496D 		.ascii	"cyImoFreqMhz2Reg\000"
 5778      6F467265 
 5778      714D687A 
 5778      32526567 
 5778      00
 5779              	.LASF92:
 5780 043b 43795379 		.ascii	"CySysTickGetValue\000"
 5780      73546963 
 5780      6B476574 
 5780      56616C75 
 5780      6500
 5781              	.LASF101:
 5782 044d 63796465 		.ascii	"cydelayFreqHz\000"
 5782      6C617946 
 5782      72657148 
 5782      7A00
 5783              	.LASF58:
 5784 045b 4379496E 		.ascii	"CyIntSetPriority\000"
 5784      74536574 
 5784      5072696F 
 5784      72697479 
 5784      00
 5785              	.LASF12:
 5786 046c 666C6F61 		.ascii	"float\000"
 5786      7400
 5787              	.LASF107:
 5788 0472 43794578 		.ascii	"CyExitCriticalSection\000"
 5788      69744372 
 5788      69746963 
 5788      616C5365 
 5788      6374696F 
 5789              	.LASF81:
 5790 0488 43795379 		.ascii	"CySysLvdEnable\000"
 5790      734C7664 
 5790      456E6162 
 5790      6C6500
 5791              	.LASF20:
 5792 0497 63795379 		.ascii	"cySysTickCallback\000"
 5792      73546963 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 162


 5792      6B43616C 
 5792      6C626163 
 5792      6B00
 5793              	.LASF57:
 5794 04a9 4379496E 		.ascii	"CyIntGetVector\000"
 5794      74476574 
 5794      56656374 
 5794      6F7200
 5795              	.LASF69:
 5796 04b8 6D696C6C 		.ascii	"milliseconds\000"
 5796      69736563 
 5796      6F6E6473 
 5796      00
 5797              	.LASF113:
 5798 04c5 43794465 		.ascii	"CyDelayCycles\000"
 5798      6C617943 
 5798      79636C65 
 5798      7300
 5799              	.LASF16:
 5800 04d3 72656738 		.ascii	"reg8\000"
 5800      00
 5801              	.LASF82:
 5802 04d8 74687265 		.ascii	"threshold\000"
 5802      73686F6C 
 5802      6400
 5803              	.LASF21:
 5804 04e2 43794861 		.ascii	"CyHalt\000"
 5804      6C7400
 5805              	.LASF1:
 5806 04e9 756E7369 		.ascii	"unsigned char\000"
 5806      676E6564 
 5806      20636861 
 5806      7200
 5807              	.LASF2:
 5808 04f7 73686F72 		.ascii	"short int\000"
 5808      7420696E 
 5808      7400
 5809              	.LASF62:
 5810 0501 4379496E 		.ascii	"CyIntEnable\000"
 5810      74456E61 
 5810      626C6500 
 5811              	.LASF55:
 5812 050d 4379496E 		.ascii	"CyIntGetSysVector\000"
 5812      74476574 
 5812      53797356 
 5812      6563746F 
 5812      7200
 5813              	.LASF37:
 5814 051f 636C6B53 		.ascii	"clkSelect\000"
 5814      656C6563 
 5814      7400
 5815              	.LASF79:
 5816 0529 43795379 		.ascii	"CySysClkEcoStart\000"
 5816      73436C6B 
 5816      45636F53 
 5816      74617274 
 5816      00
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 163


 5817              	.LASF23:
 5818 053a 72656173 		.ascii	"reason\000"
 5818      6F6E00
 5819              	.LASF14:
 5820 0541 63686172 		.ascii	"char\000"
 5820      00
 5821              	.LASF18:
 5822 0546 63796973 		.ascii	"cyisraddress\000"
 5822      72616464 
 5822      72657373 
 5822      00
 5823              	.LASF87:
 5824 0553 43795379 		.ascii	"CySysTickEnable\000"
 5824      73546963 
 5824      6B456E61 
 5824      626C6500 
 5825              	.LASF36:
 5826 0563 43795379 		.ascii	"CySysClkWriteSysclkDiv\000"
 5826      73436C6B 
 5826      57726974 
 5826      65537973 
 5826      636C6B44 
 5827              	.LASF94:
 5828 057a 43795379 		.ascii	"CySysTickSetCallback\000"
 5828      73546963 
 5828      6B536574 
 5828      43616C6C 
 5828      6261636B 
 5829              	.LASF100:
 5830 058f 43795379 		.ascii	"CySysTickCallbacks\000"
 5830      73546963 
 5830      6B43616C 
 5830      6C626163 
 5830      6B7300
 5831              	.LASF78:
 5832 05a2 696D6F54 		.ascii	"imoTrim1Value\000"
 5832      72696D31 
 5832      56616C75 
 5832      6500
 5833              	.LASF99:
 5834 05b0 756E6971 		.ascii	"uniqueId\000"
 5834      75654964 
 5834      00
 5835              	.LASF110:
 5836 05b9 473A5C50 		.ascii	"G:\\Psoc4_prj\\7.rental_house\\18-03-14\\second_ima"
 5836      736F6334 
 5836      5F70726A 
 5836      5C372E72 
 5836      656E7461 
 5837 05e8 6765735C 		.ascii	"ges\\EntranceGuard_171019-12.50\\BLE_OTA_External_M"
 5837      456E7472 
 5837      616E6365 
 5837      47756172 
 5837      645F3137 
 5838 0619 656D6F72 		.ascii	"emory_Bootloader01.cydsn\000"
 5838      795F426F 
 5838      6F746C6F 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 164


 5838      61646572 
 5838      30312E63 
 5839              	.LASF68:
 5840 0632 43794465 		.ascii	"CyDelay\000"
 5840      6C617900 
 5841              	.LASF89:
 5842 063a 43795379 		.ascii	"CySysTickDisableInterrupt\000"
 5842      73546963 
 5842      6B446973 
 5842      61626C65 
 5842      496E7465 
 5843              	.LASF41:
 5844 0654 43795379 		.ascii	"CySysLvdDisable\000"
 5844      734C7664 
 5844      44697361 
 5844      626C6500 
 5845              	.LASF103:
 5846 0664 63796465 		.ascii	"cydelayFreqMhz\000"
 5846      6C617946 
 5846      7265714D 
 5846      687A00
 5847              	.LASF39:
 5848 0673 43795379 		.ascii	"CySysClkEcoStop\000"
 5848      73436C6B 
 5848      45636F53 
 5848      746F7000 
 5849              	.LASF85:
 5850 0683 43795379 		.ascii	"CySysTickStop\000"
 5850      73546963 
 5850      6B53746F 
 5850      7000
 5851              	.LASF80:
 5852 0691 74696D65 		.ascii	"timeoutUs\000"
 5852      6F757455 
 5852      7300
 5853              	.LASF38:
 5854 069b 64697669 		.ascii	"divider\000"
 5854      64657200 
 5855              	.LASF40:
 5856 06a3 43795379 		.ascii	"CySysClkWriteEcoDiv\000"
 5856      73436C6B 
 5856      57726974 
 5856      6545636F 
 5856      44697600 
 5857              	.LASF15:
 5858 06b7 63797374 		.ascii	"cystatus\000"
 5858      61747573 
 5858      00
 5859              	.LASF30:
 5860 06c0 43795379 		.ascii	"CySysClkImoStart\000"
 5860      73436C6B 
 5860      496D6F53 
 5860      74617274 
 5860      00
 5861              	.LASF76:
 5862 06d1 6E657749 		.ascii	"newImoTrim2Value\000"
 5862      6D6F5472 
ARM GAS  C:\Users\Administrator\AppData\Local\Temp\cc66QA1c.s 			page 165


 5862      696D3256 
 5862      616C7565 
 5862      00
 5863              	.LASF109:
 5864 06e2 47656E65 		.ascii	"Generated_Source\\PSoC4\\CyLib.c\000"
 5864      72617465 
 5864      645F536F 
 5864      75726365 
 5864      5C50536F 
 5865              	.LASF71:
 5866 0701 6D696372 		.ascii	"microseconds\000"
 5866      6F736563 
 5866      6F6E6473 
 5866      00
 5867              	.LASF33:
 5868 070e 746D7052 		.ascii	"tmpReg\000"
 5868      656700
 5869              	.LASF26:
 5870 0715 43795379 		.ascii	"CySysTickSetReload\000"
 5870      73546963 
 5870      6B536574 
 5870      52656C6F 
 5870      616400
 5871              	.LASF111:
 5872 0728 43795379 		.ascii	"CySysTickServiceCallbacks\000"
 5872      73546963 
 5872      6B536572 
 5872      76696365 
 5872      43616C6C 
 5873              	.LASF25:
 5874 0742 72657475 		.ascii	"returnValue\000"
 5874      726E5661 
 5874      6C756500 
 5875              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
